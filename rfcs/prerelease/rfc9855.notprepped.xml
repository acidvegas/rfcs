<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" category="std" consensus="true" docName="draft-ietf-rtgwg-segment-routing-ti-lfa-21" number="9855" ipr="trust200902" submissionType="IETF" obsoletes="" updates="" xml:lang="en" sortRefs="true" symRefs="true" tocInclude="true" version="3">

  <front>
    <title abbrev="SR TI-LFA">Topology Independent Fast Reroute Using Segment
    Routing</title>
    <seriesInfo name="RFC" value="9855"/>
    <author fullname="Ahmed Bashandy" initials="A." surname="Bashandy">
      <organization>HPE</organization>
      <address>
	<postal>
	  <country>USA</country>
	</postal>
        <email>abashandy.ietf@gmail.com</email>
	
      </address>
    </author>
    <author fullname="Stephane Litkowski" initials="S." surname="Litkowski">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <country>France</country>
        </postal>
        <email>slitkows@cisco.com</email>
      </address>
    </author>
    <author fullname="Clarence Filsfils" initials="C." surname="Filsfils">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <city>Brussels</city>
          <country>Belgium</country>
        </postal>
        <email>cfilsfil@cisco.com</email>
      </address>
    </author>
    <author fullname="Pierre Francois" initials="P." surname="Francois">
      <organization>INSA Lyon</organization>
      <address>
        <email>pierre.francois@insa-lyon.fr</email>
      </address>
    </author>
    <author fullname="Bruno Decraene" initials="B." surname="Decraene">
      <organization>Orange</organization>
      <address>
        <postal>
          <country>France</country>
        </postal>
        <email>bruno.decraene@orange.com</email>
      </address>
    </author>
    <author fullname="Daniel Voyer" initials="D." surname="Voyer">
      <organization>Bell Canada</organization>
      <address>
        <postal>
          <country>Canada</country>
        </postal>
        <email>daniel.voyer@bell.ca</email>
      </address>
    </author>
    <date year="2025" month="October"/>
    
    <area>RTG</area>
    <workgroup>rtgwg</workgroup>
<keyword>example</keyword>


<keyword>TILFA</keyword>
<keyword>LFA</keyword>
<keyword>FRR</keyword>
<keyword>fast reroute</keyword>
<keyword>recovery</keyword>
<keyword>SR</keyword>
<keyword>protection</keyword>
<keyword>convergence</keyword>

    <abstract>
      <t>This document presents Topology Independent Loop-Free Alternate
      (TI-LFA) Fast Reroute (FRR), which is aimed at providing protection of
      node and Adjacency segments within the Segment Routing (SR)
      framework. This FRR behavior builds on proven IP FRR concepts being
      LFAs, Remote LFAs (RLFAs), and Directed Loop-Free Alternates (DLFAs).
      It extends these concepts to provide guaranteed coverage in any
      two-connected networks using a link-state IGP. An important aspect of
      TI-LFA is the FRR path selection approach establishing protection over
      the expected post-convergence paths from the Point of Local Repair
      (PLR), reducing the operational need to control the tie-breaks among
      various FRR options.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="introduction" numbered="true" toc="default">
      <name>Introduction</name>
      <t>This document outlines a local repair mechanism that leverages Segment
      Routing (SR) to restore end-to-end connectivity in the event of a failure
      involving a directly connected network component.  This mechanism is
      designed for standard link-state Interior Gateway Protocol (IGP) shortest
      path scenarios. Non-SR mechanisms for local repair are beyond the scope
      of this document. Non-local failures are addressed in a separate document
      <xref target="I-D.bashandy-rtgwg-segment-routing-uloop" format="default"/>.</t>
      <t>The term Topology Independent (TI) describes the capability providing
      a loop-free backup path that is effective across all network
      topologies. This provides a major improvement compared to LFA <xref
      target="RFC5286" format="default"/> and RLFA <xref
      target="RFC7490" format="default"/>, which cannot provide a complete
      protection coverage in some topologies as described in <xref
      target="RFC6571" format="default"/>.</t>
      <t>When the network reconverges after failure, micro-loops <xref
      target="RFC5715" format="default"/> can form due to transient
      inconsistencies in the forwarding tables of different routers.  If it is
      determined that micro-loops are a significant issue in the deployment,
      then a suitable loop-free convergence method should be implemented, such as one of those
      described in <xref target="RFC5715" format="default"/>, <xref
      target="RFC6976" format="default"/>, <xref target="RFC8333"
      format="default"/>, or <xref
      target="I-D.bashandy-rtgwg-segment-routing-uloop" format="default"/>.</t>
      <t>TI-LFA operates locally at the Point of Local Repair (PLR) upon
      detecting a failure in one of its direct links. Consequently, this local
      operation does not influence:
      </t>
      <ul spacing="normal">
        <li>
          <t>Micro-loops that may or may not form during the distributed IGP convergence as delineated in <xref target="RFC5715" format="default"/>:
          </t>
          <ul spacing="normal">
            <li>
              <t>These micro-loops occur on routes directed towards the
          destination that do not traverse paths configured for TI-LFA. According
          to <xref target="RFC5714" format="default"/>, the formation of such micro-loops can
          prevent traffic from reaching the PLR, thereby bypassing the TI-LFA
          paths established for rerouting.</t>
            </li>
          </ul>
        </li>
        <li>
          <t>Micro-loops that may or may not develop when the previously failed
          link is restored to functionality.</t>
        </li>
      </ul>
      <t>TI-LFA paths are activated from the instant the PLR detects a failure
      in a local link and remain in effect until the IGP convergence at the PLR is fully achieved. Consequently, they are
      not susceptible to micro-loops that may arise due to variations in the
      IGP convergence times across different nodes through which these paths
      traverse. This ensures a stable and predictable routing environment,
      minimizing disruptions typically associated with asynchronous network
      behavior. However, an early (relative to the other nodes) IGP convergence
      at the PLR and the consecutive "early" release of TI-LFA paths may cause
      micro-loops, especially if these paths have been computed using the
      methods described in Sections <xref target="pq_backup" format="counter"/>, <xref target="adj_pq_backup" format="counter"/>, or <xref target="remote_pq_backup" format="counter"/> of this
      document. One of the possible ways to prevent such micro-loops is local
      convergence delay <xref target="RFC8333" format="default"/>.</t>
      <t>TI-LFA procedures are complementary to the application of any micro-loop
      avoidance procedures in the case of link or node failure:</t>
      <ul spacing="normal">
        <li>
          <t>Link or node failure requires some urgent action to restore the
          traffic that passed through the failed resource. TI-LFA paths are
          pre-computed and pre-installed; therefore, they are suitable for urgent
          recovery.</t>
        </li>
        <li>
          <t>The paths used in the micro-loop avoidance procedures typically
          cannot be pre-computed.</t>
        </li>
      </ul>
      <t>For each destination (as specified by the IGP) in the network, TI-LFA
      pre-installs a backup forwarding entry for each protected destination
      ready to be activated upon detection of the failure of a link used to
      reach the destination.  TI-LFA provides protection in the event of any
      one of the following: single link failure, single node failure, or
      single Shared Risk Link Group (SRLG) failure. In link failure mode, the
      destination is protected assuming the failure of the link. In node
      protection mode, the destination is protected assuming that the neighbor
      connected to the primary link (see <xref target="terminology"
      format="default"/>) has failed.  In SRLG protecting mode, the
      destination is protected assuming that a configured set of links sharing
      fate with the primary link has failed (e.g., a linecard or a set of links
      sharing a common transmission pipe).</t>
      <t>Protection techniques outlined in this document are limited to
      protecting links, nodes, and SRLGs that are within a link-state IGP
      area. Protecting domain exit routers and/or links attached to another
      routing domain is beyond the scope of this document.</t>
      <t>By utilizing SR, TI-LFA eliminates the need to
      establish Targeted Label Distribution Protocol sessions with
      remote nodes for leveraging the benefits of Remote Loop-Free Alternates
      (RLFAs) <xref target="RFC7490" format="default"/> <xref target="RFC7916" format="default"/> or Directed
      Loop-Free Alternates (DLFAs) <xref target="I-D.bryant-ipfrr-tunnels" format="default"/>. All the Segment
      Identifiers (SIDs) required are present within the Link State Database
      (LSDB) of the IGP. Consequently, there is no
      longer a necessity to prefer LFAs over RLFAs or DLFAs, nor is there a
      need to minimize the number of RLFA or DLFA repair nodes.</t>

      <t> Utilizing SR also eliminates the need to establish an additional
      state within the network for enforcing explicit Fast Reroute (FRR)
      paths.  This spares the nodes from maintaining a supplementary state and
      frees the operator from the necessity to implement additional protocols
      or protocol sessions solely to augment protection coverage.</t>
      <t>TI-LFA also brings the benefit of the ability to provide a backup
      path that follows the expected post-convergence path considering a
      particular failure, which reduces the need of locally configured
      policies that influence the backup path selection <xref
      target="RFC7916" format="default"/>. The easiest way to express the
      expected post-convergence path in a loop-free manner is to encode it as
      a list of Adjacency segments. However, this may create a long segment
      list that some hardware may not be able to program. One of the
      challenges of TI-LFA is to encode the expected post-convergence path by
      combining Adjacency segments and node segments. Each implementation may
      independently develop its own algorithm for optimizing the ordered
      segment list. This document provides an outline of the fundamental
      concepts applicable to constructing the SR backup path, along with the
      related data plane procedures. <xref target="advantages-post-conv-path"
      format="default"/> contains a more detailed description of some of the
      aspects of TI-LFA related to post-convergence path.</t>
      <t>This document is structured as follows:</t>
      <ul>
      <li><xref target="terminology" format="default"/> defines the main
      notations used in the document. They are in line with <xref
      target="RFC5714" format="default"/>.</li>
      <li><xref target="base" format="default"/> defines the main principles of
      TI-LFA backup path computation.</li>
      <li><xref target="pq_space_intersect" format="default"/> suggests to
      compute the P-space and Q-space properties defined in <xref
      target="terminology" format="default"/> for the specific case of nodes
      lying over the post-convergence paths towards the protected
      destinations.</li>
      <li><xref target="tilfa_repair_path" format="default"/> describes how to compute protection lists that encode a
      loop-free post-convergence path towards the destination using the
      properties defined in <xref target="pq_space_intersect"
      format="default"/>.</li>
      <li><xref target="repairlist" format="default"/> defines the segment
      operations to be applied by the PLR to ensure consistency with the
      forwarding state of the repair node.</li>
      <li><xref target="dataplane" format="default"/> discusses aspects that are specific to the
      data plane.</li>
      <li><xref target="tilfa-sr-algo" format="default"/> discusses the relationship between TI-LFA
      and the SR algorithm.</li>
      <li><xref target="adj-sid-repair-list" format="default"/> provides an
      overview of the certain considerations that are needed when Adjacency
      segments are used in a Repair List (RL).</li>
      <li><xref target="security" format="default"/> discusses security considerations.</li>
      <li><xref target="advantages-post-conv-path" format="default"/> highlights advantages of
      using the expected post-convergence path during FRR.</li>
      <li><xref target="analysis" format="default"/> summarizes the measurements from implementing the
algorithms detailed in this document within actual service
provider and large enterprise network environments.  Real-life
measurements are presented regarding the number of SIDs utilized
by repair paths.</li>
      </ul>
    </section>

    <section anchor="terminology" numbered="true" toc="default">
      <name>Terminology</name>

      <section anchor="acronyms" numbered="true" toc="default">
      <name>Abbreviations and Notations</name>
      <dl spacing="normal" newline="false">
        <dt>DLFA:</dt><dd>Directed Loop-Free Alternate</dd>
        <dt>FRR:</dt><dd>Fast Reroute</dd>
        <dt>IGP:</dt><dd>Interior Gateway Protocol</dd>
        <dt>LFA:</dt><dd>Loop-Free Alternate</dd>
        <dt>LSDB:</dt><dd>Link State Database</dd>
        <dt>PLR:</dt><dd>Point of Local Repair</dd>
        <dt>RL:</dt><dd>Repair List</dd>
        <dt>RLFA:</dt><dd>Remote Loop-Free Alternate</dd>
        <dt>SID:</dt><dd>Segment Identifier</dd>
        <dt>SPF:</dt><dd>Shortest Path First</dd>
	<dt>SPT:</dt><dd>Shortest Path Tree</dd>
        <dt>SR:</dt><dd>Segment Routing</dd>
        <dt>SRLG:</dt><dd>Shared Risk Link Group</dd>
        <dt>TI-LFA:</dt><dd>Topology Independent Loop-Free Alternate</dd>
      </dl>
      <t>The main notations used in this document are defined as follows:</t>
      <ul>
	<li>The terms "old" and "new" topologies refer to the LSDB state before
	and after the considered failure, respectively.</li>
	<li>SPT_old(R) is the SPT rooted at node R in the initial state of the
	network.</li>
	<li>SPT_new(R, X) is the SPT rooted at node R in the state of the
	network after the resource X has failed.</li>
	<li>The PLR is the router that applies fast traffic restoration after
	detecting failure in a directly attached link, set of links, and/or
	node.</li>
	<li>Similar to <xref target="RFC7490" format="default"/>, the concept of P-space and
	Q-space is used for TI-LFA.</li>
	<li>The P-space P(R, X) of a router R with regard to a resource X (e.g., a
	link S-F, a node F, or an SRLG) is the set of routers reachable from R
	using the pre-convergence shortest paths without any of those paths
	(including equal-cost path splits) transiting through X. A P node is a
	node that belongs to the P-space.</li>
	<li>Consider the set of neighbors of a router R and a resource X. Exclude
	from that set the neighbors that are reachable from R using X. The
	extended P-space P'(R, X) of a node R with regard to a resource X is the
	union of the P-spaces of the neighbors in that reduced set of neighbors
	with regard to the resource X.</li>
	<li>The Q-space Q(R, X) of a router R with regard to a resource X is the
	set of routers from which R can be reached without any path (including
	equal-cost path splits) transiting through X. A Q node is a node that
	belongs to the Q-space.</li>
	<li>EP(P, Q) is an explicit SR path from a node P to a node Q.</li>
	<li>The primary interface and primary outgoing interface are one of the outgoing
	interfaces towards a destination according to the IGP link-state
	protocol.</li>
	<li>The primary link is a link connected to the primary interface.</li>
	<li>The Adj-SID(S-F) is the Adjacency segment from node S to node F.</li>
      </ul>
      </section>
      <section anchor="conventions" numbered="true" toc="default">
        <name>Conventions Used in This Document</name>
        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>",
    "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be
    interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/> <xref
    target="RFC8174"/> when, and only when, they appear in all capitals, as
    shown here.
        </t>
      </section>
    </section>
    <section anchor="base" numbered="true" toc="default">
      <name>Base Principle</name>
      <t>The basic algorithm to compute the repair path is to pre-compute
      SPT_new(R, X) and, for each destination, encode the repair path as a
      loop-free segment list. One way to provide a loop-free segment list is to
      use Adjacency SIDs only. However, this approach may create very long SID
      lists that hardware may not be able to handle due to Maximum SID
      Depth (MSD) limitations.</t>
      <t>An implementation is free to use any local optimization to provide
      smaller segment lists by combining Node-SIDs and Adjacency SIDs. In
      addition, the usage of Node-SIDs allow for maximizing ECMPs over the backup
      path. These optimizations are out of scope of this document; however, the
      subsequent sections provide some guidance on how to leverage P-spaces and
      Q-spaces to optimize the size of the segment list.</t>
    </section>
    <section anchor="pq_space_intersect" numbered="true" toc="default">
      <name>Intersecting P-space and Q-space with Post-Convergence Paths</name>
      <t>One of the challenges of defining an SR path following the expected
      post-convergence path is to reduce the size of the segment list. In
      order to reduce this segment list, an implementation <bcp14>MAY</bcp14>
      determine the P-space / extended P-space and Q-space properties (defined
      in <xref target="RFC7490" format="default"/>) of the nodes along the
      expected post-convergence path from the PLR to the protected destination
      and compute an SR explicit path from P to Q when they are not
      adjacent. Such properties will be used in <xref
      target="tilfa_repair_path" format="default"/> to compute the TI-LFA
      RL.</t>
      <section anchor="extp_space" numbered="true" toc="default">
        <name>Extended P-space Property Computation for a Resource X over Post-Convergence Paths</name>
        <t>The objective is to determine which nodes on the post-convergence
        path from the PLR R to the destination D are in the extended P-space of
        R with regard to resource X (where X can be a link or a set of links
        adjacent to the PLR or a neighbor node of the PLR).</t>
        <t>This can be found by:</t>
        <ul spacing="normal">
          <li>
            <t>excluding neighbors that are not on the post-convergence path
            when computing P'(R, X), then</t>
          </li>
          <li>
            <t>intersecting the set of nodes belonging to the
            post-convergence path from R to D, assuming the failure of X, with
            P'(R, X).</t>
          </li>
        </ul>
      </section>
      <section anchor="q_space" numbered="true" toc="default">
        <name>Q-space Property Computation for a Resource X over Post-Convergence Paths</name>
        <t>The goal is to determine which nodes on the post-convergence path
        from the PLR R to the destination D are in the
        Q-space of destination D with regard to resource X (where X can be a
        link or a set of links adjacent to the PLR, or a neighbor node of the
        PLR).</t>
        <t>This can be found by intersecting the set of nodes belonging to the
        post-convergence path from R to D, assuming the failure of X, with
        Q(D, X).</t>
      </section>
      <section anchor="q_space_scaling" numbered="true" toc="default">
        <name>Scaling Considerations When Computing Q-space</name>
        <t><xref target="RFC7490" format="default"/> raises scaling concerns about computing a
        Q-space per destination. Similar concerns may affect TI-LFA
        computation if an implementation tries to compute a reverse Shortest
        Path Tree (SPT) <xref target="RFC7490" format="default"/> for every destination in the
        network to determine the Q-space. It will be up to each implementation
        to determine the good tradeoff between scaling and accuracy of the
        optimization.</t>
      </section>
    </section>

    <section anchor="tilfa_repair_path" numbered="true" toc="default">
      <name>TI-LFA Repair Path</name>
      <t>The TI-LFA repair path consists of an outgoing interface and a list
      of segments (a Repair List (RL)) to insert on the SR header in
      accordance with the data plane used.  The RL encodes the
      explicit (and possibly post-convergence) path to the destination, which
      avoids the protected resource X. At the same time, the RL is
      guaranteed to be loop-free, irrespective of the state of FIBs along the
      nodes belonging to the explicit path, as long as the states of the FIBs
      are programmed according to a link-state IGP.  Thus, there is no need
      for any coordination or message exchange between the PLR and any other
      router in the network.</t>
      <t>The TI-LFA repair path is found by intersecting P(S, X) and Q(D, X) with
      the post-convergence path to D and computing the explicit SR-based path
      EP(P, Q) from a node P in P(S, X) to a node Q in Q(D, X) when these nodes
      are not adjacent along the post-convergence path. The TI-LFA RL
      is expressed generally as (Node-SID(P), EP(P, Q)).</t>

      <figure anchor="sample-topo1">
        <name>Sample Topology with TI-LFA</name>
        <artwork name="" type="" align="left" alt=""><![CDATA[
  S --------- N1 --------- D
  *\          | \          |
  * \         |  \         |
  *  \        |   \        |
  *   N2----- R1***R2 *** R3
  *           *
  N3 **********
 
    ***** : link with high metric (1k)
    ----- : link with metric 1
]]></artwork>
      </figure>

      <t>As an example, in <xref target="sample-topo1" format="default"/>, the focus is on the
      TI-LFA backup from S to D, considering the failure of node N1.</t>
      <ul spacing="normal">
        <li>
          <t>First, P(S, N1) is computed and results in [N3, N2, R1].</t>
        </li>
        <li>
          <t>Then, Q(D, N1) is computed and results in [R3].</t>
        </li>
        <li>
          <t>The expected post-convergence path from S to D considering the
          failure of N1 is &lt;N2 -&gt; R1 -&gt; R2 -&gt; R3 -&gt; D&gt; (we
          are naming it "PCPath" in this example).</t>
        </li>
        <li>
          <t>P(S, N1) intersection with PCPath is [N2, R1]. With R1 being the
          deeper downstream node in PCPath, it can be assumed to be used as a P
          node (this is an example, and an implementation could use a different
          strategy to choose the P node).</t>
        </li>
        <li>
          <t>Q(D, N1) intersection with PCPath is [R3], so R3 is picked as a Q
          node. An SR-explicit path is then computed from R1 (P node) to R3 (Q
          node) following PCPath (R1 -&gt; R2 -&gt; R3): &lt;Adj-SID(R1-R2),
          Adj-SID(R2-R3)&gt;.</t>
        </li>
      </ul>
      <t> As a result, the TI-LFA RL of S for destination D
      considering the failure of node N1 is: &lt;Node-SID(R1), Adj-SID(R1-R2),
      Adj-SID(R2-R3)&gt;.</t>
      <t>Most often, the TI-LFA RL has a simpler form, as described
      in the following sections. <xref target="analysis" format="default"/> provides statistics
      for the number of SIDs in the explicit path to protect against various
      failures.</t>
      <section anchor="direct_backup" numbered="true" toc="default">
        <name>FRR Path Using a Direct Neighbor</name>
        <t>When a direct neighbor is in P(S, X) and Q(D, x), and the link to that
        direct neighbor is on the post-convergence path, the outgoing interface
        is set to that neighbor and the repair segment list is empty.</t>
        <t>This is comparable to a post-convergence LFA FRR repair.</t>
      </section>
      <section anchor="pq_backup" numbered="true" toc="default">
        <name>FRR Path Using a PQ Node</name>
        <t>When a remote node R is in P(S, X) and Q(D, x) and on the
        post-convergence path, the RL is made of a single node segment
        to R, and the outgoing interface is set to the outgoing interface used
        to reach R.</t>
        <t>This is comparable to a post-convergence RLFA repair tunnel.</t>
      </section>
      <section anchor="adj_pq_backup" numbered="true" toc="default">
        <name>FRR Path Using a P Node and Q Node That Are Adjacent</name>
        <t>When a node P is in P(S, X) and a node Q is in Q(D, x), and both are on
        the post-convergence path and are adjacent to each other, the
        RL is made of two segments: a node segment to P (to be
        processed first), followed by an Adjacency segment from P to Q.</t>
        <t>This is comparable to a post-convergence Directed Loop-Free
        Alternate (DLFA) repair tunnel.</t>
      </section>
      <section anchor="remote_pq_backup" numbered="true" toc="default">
        <name>Connecting Distant P and Q Nodes Along Post-Convergence Paths</name>
        <t>In some cases, there is no adjacent P and Q node along the
        post&nbhy;convergence path. As mentioned in <xref target="base"
        format="default"/>, a list of Adjacency SIDs can be used to encode the
        path between P and Q. However, the PLR can perform additional
        computations to compute a shorter list of segments that represent a
        loop-free path from P to Q.  How these computations are done is out of
        scope of this document and is left to implementation.</t>
      </section>
    </section>
    <section anchor="repairlist" numbered="true" toc="default">
      <name>Building TI-LFA Repair Lists for SR Segments</name>
      <t>The following sections describe how to build the RLs using
      the terminology defined in <xref target="RFC8402" format="default"/>. The procedures
      described in this section are equally applicable to both the Segment Routing over MPLS (SR-MPLS) and
      the Segment Routing over IPv6 (SRv6) data plane, while the data plane-specific considerations are
      described in <xref target="dataplane" format="default"/>.</t>
      <t>This section explains the process by which a protecting router S handles
      the active segment of a packet upon the failure of its primary outgoing
      interface for the packet S-F. The failure of the primary
      outgoing interface may occur due to various triggers, such as link
      failure, neighbor node failure, and others.</t>
      <section anchor="link-protect-node-sid" numbered="true" toc="default">
        <name>The Active Segment Is a Node Segment</name>
        <t>The active segment <bcp14>MUST</bcp14> be kept on the SR header unchanged and the
        RL <bcp14>MUST</bcp14> be added. The active segment becomes the first
        segment after the RL. The way the RL is added depends
        on the data plane used (see <xref target="dataplane" format="default"/>).</t>
      </section>
      <section anchor="link-protect-adj-sid" numbered="true" toc="default">
        <name>The Active Segment Is an Adjacency Segment</name>
        <t>This section defines the FRR behavior applied by S for any packet
        received with an active Adjacency segment S-F for which protection was
        enabled. Since protection has been enabled for the segment S-F and
        signaled in the IGP (for instance, using protocol extensions from
        <xref target="RFC8667" format="default"/> and <xref target="RFC8665"
        format="default"/>), a calculator of any SR policy utilizing this
        segment is aware that it may be transiently rerouted out of S-F in the
        event of an S-F failure.</t>
        <t>The simplest approach for link protection of an Adjacency segment
        S-F is to create an RL that will carry the traffic to F. To do
        so, one or more "PUSH" operations are performed. If the RL,
        while avoiding S-F, terminates on F, S only pushes segments of the
        RL. Otherwise, S pushes a node segment of F, followed by the
        segments of the RL. For details on the "NEXT" and "PUSH"
        operations, refer to <xref target="RFC8402" format="default"/>.</t>
        <t>This method, which merges back the traffic at the remote end of the
        Adjacency segment, has the advantage of keeping as much traffic as
        possible on the pre-failure path.  When SR policies are involved and
        strict compliance with the policy is required, an end-to-end
        protection (beyond the scope of this document) should be preferred
        over the local repair mechanism described above.</t>
        <t> Note, however, that when the SR source node is using Traffic
        Engineering (TE), it will generally not be possible for the PLR to know
        what post-convergence path will be selected by the source node once it
        detects the failure, since computation of the TE path is a local matter
        that depends on constraints that may not be known at the
        PLR. Therefore, no method applied at the PLR can guarantee protection
        will follow the post-convergence path.</t>
        <t>The case where the active segment is followed by another Adjacency
        segment is distinguished from the case where it is followed by a node
        segment. Repair techniques for the respective cases are provided in the
        following subsections.</t>
        <section anchor="link-protect-adj-sid-adj-sid" numbered="true" toc="default">
          <name>Protecting [Adjacency, Adjacency] Segment Lists</name>
          <t>If the next segment in the list is an Adjacency segment, then the
          packet has to be conveyed to F.</t>
          <t>To do so, S <bcp14>MUST</bcp14> apply a "NEXT" operation on Adj-SID(S-F) and then
          one or more "PUSH" operations. If the RL, while avoiding
          S-F, terminates on F, S only pushes the segments of the RL.
          Otherwise, S pushes a node segment of F, followed by the segments of
          the RL. For details on the "NEXT" and "PUSH" operations,
          refer to <xref target="RFC8402" format="default"/>.</t>
          <t>Upon failure of S-F, a packet reaching S with a segment list
          matching [adj-sid(S-F), adj-sid(F-M), ...] will thus leave S with a segment
          list matching [RL(F), node(F), adj-sid(F-M), ...], where RL(F) is the
          RL for destination F.</t>
        </section>
        <section anchor="link-protect-adj-sid-node-sid" numbered="true" toc="default">
          <name>Protecting [Adjacency, Node] Segment Lists</name>
          <t>If the next segment in the stack is a node segment, say for node
          T, the segment list on the packet matches [adj-sid(S-F), node(T), ...].</t>
          <t>In this case, S <bcp14>MUST</bcp14> apply a "NEXT" operation on the Adjacency
          segment related to S-F, followed by a "PUSH" of an RL
          redirecting the traffic to a node Q, whose path to node segment T is
          not affected by the failure.</t>
          <t>Upon failure of S-F, packets reaching S with a segment list
          matching [adj-sid(S-F), node(T), ...] would leave S with a segment list
          matching [RL(Q), node(T), ...].</t>
        </section>
      </section>
    </section>

    <section anchor="dataplane" numbered="true" toc="default">
      <name>Data Plane-Specific Considerations</name>
      <section anchor="mpls-dataplane" numbered="true" toc="default">
        <name>MPLS Data Plane Considerations</name>
        <t>The MPLS data plane for SR is described in <xref target="RFC8660" format="default"/>.</t>
        <t>The following data plane behaviors apply when creating an RL
        using an MPLS data plane:</t>
        <ol spacing="normal" type="1"><li>
            <t>If the active segment is a node segment that has been signaled
            with penultimate hop popping, and the RL ends with an
            Adjacency segment terminating on the penultimate node of the
            active segment, then the active segment <bcp14>MUST</bcp14> be
            popped before pushing the RL.</t>
          </li>
          <li>
            <t>If the active segment is a node segment, but the other conditions
            in 1. are not met, the active segment <bcp14>MUST</bcp14> be popped and then pushed
            again with a label value computed according to the Segment Routing
            Global Block (SRGB) of Q, where Q is the endpoint of the RL. Finally, the RL <bcp14>MUST</bcp14> be pushed.</t>
          </li>
        </ol>
      </section>
      <section anchor="srv6-dataplane" numbered="true" toc="default">
        <name>SRv6 Data Plane Considerations</name>
        <t>SRv6 data plane and programming instructions are described
        respectively in <xref target="RFC8754" format="default"/> and <xref
        target="RFC8986" format="default"/>.</t>
        <t>The TI-LFA path computation algorithm is the same as in the SR-MPLS
        data plane. Note, however, that the Adjacency SIDs are typically globally
        routed. In such a case, there is no need for preceding an Adjacency SID
        with a Prefix-SID <xref target="RFC8402" format="default"/>, and the resulting RL is likely shorter.</t>
        <t>If the traffic is protected at a Transit Node, then an SRv6 SID
        list is added on the packet to apply the RL. The addition of
        the RL follows the head-end behaviors as specified in 
        <xref target="RFC8986" sectionFormat="of" section="5"/>.</t>
        <t>If the traffic is protected at an SR Segment Endpoint Node, first
        the Segment Endpoint packet processing is executed. Then, the packet is
        protected as if it were a transit packet.</t>
      </section>
    </section>
    <section anchor="tilfa-sr-algo" numbered="true" toc="default">
      <name>TI-LFA and SR Algorithms</name>
      <t>SR allows an operator to bind an algorithm to a Prefix-SID (as
      defined in <xref target="RFC8402" format="default"/>). The algorithm value dictates how
      the path to the prefix is computed. The SR default algorithm is known
      as the "Shortest Path" algorithm. The SR default algorithm allows an
      operator to override the IGP shortest path by using local policies. When
      TI-LFA uses Node-SIDs associated with the default algorithm, there is no
      guarantee that the path will be loop-free, as a local policy may have
      overridden the expected IGP path. As the local policies are defined by
      the operator, it becomes the responsibility of this operator to ensure
      that the deployed policies do not affect the TI-LFA deployment. It
      should be noted that such a situation can already happen today with
      existing mechanisms such as RLFA.</t>
<t><xref target="RFC9350" format="default"/> defines a Flexible Algorithm
      framework to be associated with Prefix-SIDs. A Flexible Algorithm allows a user to
      associate a constrained path to a Prefix-SID rather than using the
      regular IGP shortest path. An implementation <bcp14>MAY</bcp14> support TI-LFA to
      protect Node-SIDs associated with a Flexible Algorithm. In such a case, rather
      than computing the expected post-convergence path based on the regular
      SPF, an implementation <bcp14>SHOULD</bcp14> use the constrained SPF algorithm bound to
      the Flexible Algorithm (using the Flexible Algorithm Definition) instead of the regular
      Dijkstra in all the SPF/reverse SPF computations that are occurring during the
      TI-LFA computation. This includes the computation of the P-space and
      Q-space as well as the post-convergence path. Furthermore, the
      implementation <bcp14>SHOULD</bcp14> only use Node-SIDs/Adj-SIDs bound to the Flexible Algorithm
      and/or unprotected Adj-SIDs of the regular SPF to build the RL. The use of regular Dijkstra for the TI-LFA computation or for building
      the repair path using SIDs other than those recommended does not
      ensure that the traffic going over the TI-LFA repair path during the
      FRR period is honoring the Flexible Algorithm constraints.</t>
    </section>
    <section anchor="adj-sid-repair-list" numbered="true" toc="default">
      <name>Usage of Adjacency Segments in the Repair List</name>
      <t>The RL of segments computed by TI-LFA may contain one or
      more Adjacency segments. An Adjacency segment may be protected or not
      protected.</t>
      <figure anchor="cascaded-frr">
        <artwork name="" type="" align="left" alt=""><![CDATA[
	S --- R2 --- R3 ---- R4 --- R5 --- D
	         *   |  \   *
                   * |   \ *
	            R7 ** R8
	             *    |
                     *    |
	            R9 -- R10
]]></artwork>
      </figure>
      <t>In <xref target="cascaded-frr" format="default"/>, all the metrics
      are equal to 1 except R2-R7,R7-R8,R8-R4,R7-R9, which have a metric of
      1000. Considering R2 as a PLR to protect against the failure of node R3
      for the traffic S-&gt;D, the RL computed by R2 will be
      [adj-sid(R7-R8), adj-sid(R8-R4)], and the outgoing interface will be to
      R7. If R3 fails, R2 pushes the RL onto the incoming packet to
      D. During the FRR, if R7-R8 fails and if TI-LFA has picked a protected
      Adjacency segment for Adj-SID(R7-R8), R7 will push an additional RL onto the packet following the procedures defined in <xref
      target="repairlist" format="default"/>.</t>

      <t>To avoid the possibility of this double FRR activation, an
      implementation of TI-LFA <bcp14>MAY</bcp14> pick only unprotected
      Adjacency segments when building the RL. However, it is
      important to note that FRR in general is intended to protect for a
      single pre-planned failure.  If the failure that happens is worse than
      expected or multiple failures happen, FRR is not guaranteed to work. In
      such a case, fast IGP convergence remains important to restore traffic
      as quickly as possible.</t>
    </section>
    <section anchor="security" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>The techniques described in this document are internal functionalities
      to a router that can guarantee an upper bound on the time taken to
      restore traffic flow upon the failure of a directly connected link or
      node. As these techniques steer traffic to the post-convergence path as
      quickly as possible, this serves to minimize the disruption associated
      with a local failure, which can be seen as a modest security
      enhancement. The protection mechanism does not protect external
      destinations, but rather provides quick restoration for destinations that
      are internal to a routing domain.</t>
      <t>The security considerations described in <xref target="RFC5286" format="default"/> and
      <xref target="RFC7490" format="default"/> apply to this document. Similarly, as the
      solution described in this document is based on SR
      technology, the reader should be aware of the security considerations
      related to this technology (see <xref target="RFC8402" format="default"/>) and its data plane
      instantiations (see <xref target="RFC8660" format="default"/>, <xref target="RFC8754" format="default"/>, and
      <xref target="RFC8986" format="default"/>). However, this document does not introduce
      additional security concerns.</t>
    </section>
    <section anchor="iana" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>This document has no IANA actions.</t>
    </section>
  </middle>
  <back>
    <displayreference target="I-D.bashandy-rtgwg-segment-routing-uloop" to="SR-LOOP"/>
    <displayreference target="I-D.bryant-ipfrr-tunnels" to="IPFRR-TUNNELS"/>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7916.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8402.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8660.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8754.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8986.xml"/>
      </references>
      <references>
        <name>Informative References</name>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5714.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5715.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5286.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6976.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7490.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8333.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.bashandy-rtgwg-segment-routing-uloop.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.bryant-ipfrr-tunnels.xml"/>          
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9350.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9256.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6571.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8665.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8667.xml"/>
      </references>
    </references>
    <section anchor="advantages-post-conv-path" numbered="true" toc="default">
      <name>Advantages of Using the Expected Post-Convergence Path During FRR</name>
      <t><xref target="RFC7916" format="default"/> raises several operational considerations
      when using LFA or RLFA. <xref target="RFC7916" sectionFormat="of" section="3"/>
      presents a case where a high bandwidth link between two core routers is
      protected through a Provider Edge (PE) router connected with low bandwidth links. In
      such a case, congestion may happen when the FRR backup path is
      activated. <xref target="RFC7916" format="default"/> introduces a local policy framework
      to let the operator tuning manually the best alternate election based on
      its own requirements.</t>
      <t>From a network capacity planning point of view, it is often assumed
      for simplicity that if a link L fails on a particular node X, the
      bandwidth consumed on L will be spread over some of the remaining links
      of X. The remaining links to be used are determined by the IGP routing
      considering that the link L has failed (we assume that the traffic uses
      the post-convergence path starting from the node X). In <xref
      target="figure1" format="default"/>, we consider a network with all
      metrics equal to 1 except the metrics on links used by PE1, PE2, and PE3,
      which are 1000. An easy network capacity planning method is to consider
      that if the link L (X-B) fails, the traffic actually flowing through L
      will be spread over the remaining links of X (X-H, X-D,
      X-A). Considering the IGP metrics, only X-H and X-D can be used in
      reality to carry the traffic flowing through the link L. As a
      consequence, the bandwidth of links X-H and X-D is sized according to
      this rule. We should observe that this capacity planning policy works;
      however, it is not fully accurate.</t>
      <t>In <xref target="figure1" format="default"/>, considering that the source of traffic
      is only from PE1 and PE4, when the link L fails, depending on the
      convergence speed of the nodes, X may reroute its forwarding entries to
      the remote PEs onto X-H or X-D; however, in a similar timeframe, PE1 will
      also reroute a subset of its traffic (the subset destined to PE2) out of
      its nominal path, reducing the quantity of traffic received by X. The
      capacity planning rule presented previously has the drawback of
      oversizing the network; however, it allows for preventing any transient
      congestion (for example, when X reroutes traffic before PE1 does).</t>
      <figure anchor="figure1">
        <artwork name="" type="" align="left" alt=""><![CDATA[
              H --- I --- J *
              |           |  *
   PE4        |           |   PE3
      \       | (L)       |  *
      * A --- X --- B --- G *
     *        |           |  *
   PE1        |           |   PE2
     *        |           |  *
      * C --- D --- E --- F *
]]></artwork>
      </figure>

      <t>Based on this assumption, in order to facilitate the operation of
      FRR and limit the implementation of local FRR policies, traffic can be
      steered by the PLR onto its expected post-convergence path during the
      FRR phase. In our example, when link L fails, X switches the traffic
      destined to PE3 and PE2 on the post-convergence paths. This is perfectly
      in line with the capacity planning rule that was presented before and
      also in line with the fact that X may converge before PE1 (or any other
      upstream router) and may spread the X-B traffic onto the
      post-convergence paths rooted at X.</t>
      <t>It should be noted that some networks may have a different capacity
      planning rule, leading to an allocation of less bandwidth on X-H and X-D
      links. In such a case, using the post-convergence paths rooted at X
      during FRR may introduce some congestion on X-H and X-D links. However,
      it is important to note that a transient congestion may possibly
      happen even without FRR activated, for instance, when X converges before
      the upstream routers. Operators are still free to use the policy
      framework defined in <xref target="RFC7916" format="default"/> if the usage of the
      post-convergence paths rooted at the PLR is not suitable.</t>
      <t>Readers should be aware that FRR protection is pre-computing a backup
      path to protect against a particular type of failure (link, node, or SRLG).
      When using the post-convergence path as an FRR backup path, the computed
      post-convergence path is the one considering the failure we are
      protecting against. This means that FRR is using an expected
      post-convergence path, and this expected post-convergence path may be
      actually different from the post-convergence path used if the failure
      that happened is different from the failure FRR was protecting against.
      As an example, if the operator has implemented a protection against a
      node failure, the expected post-convergence path used during FRR will be
      the one considering that the node has failed. However, even if a single
      link is failing or a set of links is failing (instead of the full node),
      the node-protecting post-convergence path will be used. The consequence
      is that the path used during FRR is not optimal with respect to the
      failure that has actually occurred.</t>

      <t>Another consideration to take into account is as follows: while using
      the expected post-convergence path for SR traffic using node segments
      only (for instance, PE to PE traffic using the shortest path) has some
      advantages, these advantages reduce when SR policies <xref
      target="RFC9256" format="default"/> are involved. A segment list used in
      an SR policy is computed to obey a set of path constraints defined
      locally at the head-end or centrally in a controller. TI-LFA cannot be
      aware of such path constraints, and there is no reason to expect the
      TI-LFA backup path protecting one segment in that segment list to obey
      those constraints.  When SR policies are used and the operator wants to
      have a backup path that still follows the policy requirements, this
      backup path should be computed as part of the SR policy in the ingress
      node (or central controller), and the SR policy should not rely on local
      protection.  Another option could be to use a Flexible Algorithm <xref
      target="RFC9350" format="default"/> to express the set of constraints
      and use a single node segment associated with a Flexible Algorithm to reach the
      destination. When using a node segment associated with a Flexible Algorithm,
      TI-LFA keeps providing an optimal backup by applying the appropriate set
      of constraints. The relationship between TI-LFA and the SR algorithm is
      detailed in <xref target="tilfa-sr-algo" format="default"/>.</t>
    </section>
    <section anchor="analysis" numbered="true" toc="default">
      <name>Analysis Based on Real Network Topologies</name>
      <t>This section presents an analysis performed on real service provider and
      large enterprise network topologies. The objective of the analysis is to
      assess the number of SIDs required in an explicit path when the
      mechanisms described in this document are used to protect against the
      failure scenarios within the scope of this document. The number of
      segments described in this section are applicable to instantiating
      SR over the MPLS forwarding plane.</t>

      <t>The measurement below indicates that, for link and local SRLG
      protection, a repair path of 1 SID or less delivers more than 99% coverage. For
      node protection, a repair path of 2 SIDs or less yields 99% coverage.</t>
      <t><xref target="t-1"/> below lists the characteristics of the networks used in our
      measurements. The number of links refers to the number of
      "bidirectional" links (not directed edges of the graph). The
      measurements are carried out as follows:</t>
      <ul spacing="normal">
        <li>
          <t>For each network, the algorithms described in this document are
          applied to protect all prefixes against link, node, and local SRLG
          failure.</t>
        </li>
        <li>
          <t>For each prefix, the number of SIDs used by the repair path is
          recorded.</t>
        </li>
        <li>
          <t>The percentage of number of SIDs are listed in Tables <xref
          target="t-2" format="counter"/>, <xref target="t-3"
          format="counter"/>, <xref target="t-4" format="counter"/>, <xref
          target="t-5" format="counter"/>, <xref target="t-6"
          format="counter"/>, and <xref target="t-7" format="counter"/>.</t>
        </li>
      </ul>

      <table anchor="t-1">
	<name>Data Set Definition</name>
	<thead>
	  <tr>
	    <th>Network</th>
	    <th>Nodes</th>
	    <th>Links</th>
	    <th>Node-to-Link Ratio</th>
	    <th>SRLG Info?</th>
	  </tr>
	</thead>
	<tbody>
	  <tr>
	    <td>T1</td>
	    <td>408</td>
	    <td>665</td>
	    <td>1.63</td>
	    <td>Yes</td>
	  </tr>
	  <tr>
	    <td>T2</td>
	    <td>587</td>
	    <td>1083</td>
	    <td>1.84</td>
	    <td>No</td>
	  </tr>
	  <tr>
	    <td>T3</td>
	    <td>93</td>
	    <td>401</td>
	    <td>4.31</td>
	    <td>Yes</td>
	  </tr>
	  <tr>
	    <td>T4</td>
	    <td>247</td>
	    <td>393</td>
	    <td>1.59</td>
	    <td>Yes</td>
	  </tr>
	  <tr>
	    <td>T5</td>
	    <td>34</td>
	    <td>96</td>
	    <td>2.82</td>
	    <td>Yes</td>
	  </tr>
	  <tr>
	    <td>T6</td>
	    <td>50</td>
	    <td>78</td>
	    <td>1.56</td>
	    <td>No</td>
	  </tr>
	  <tr>
	    <td>T7</td>
	    <td>82</td>
	    <td>293</td>
	    <td>3.57</td>
	    <td>No</td>
	  </tr>
	  <tr>
	    <td>T8</td>
	    <td>35</td>
	    <td>41</td>
	    <td>1.17</td>
	    <td>Yes</td>
	  </tr>
	  <tr>
	    <td>T9</td>
	    <td>177</td>
	    <td>1371</td>
	    <td>7.74</td>
	    <td>Yes</td>
	  </tr>
	</tbody>
      </table>

      <t>The rest of this section presents the measurements done on the actual
      topologies. The conventions that we use are as follows:</t>
      <ul spacing="normal">
        <li>
          <t>0 SIDs: The calculated repair path starts with a directly
          connected neighbor that is also a loop-free alternate; in which case,
          there is no need to explicitly route the traffic using additional
          SIDs. This scenario is described in <xref target="direct_backup" format="default"/>.</t>
        </li>
        <li>
          <t>1 SID: The repair node is a PQ node; in which case, only 1 SID is
          needed to guarantee a loop-free path. This scenario is covered in
          <xref target="pq_backup" format="default"/>.</t>
        </li>
        <li>
          <t>2 or more SIDs: The repair path consists of 2 or more SIDs as
          described in Sections <xref target="adj_pq_backup" format="counter"/> and
          <xref target="remote_pq_backup" format="counter"/>. We do not cover
          the case for 2 SIDs (<xref target="adj_pq_backup"
          format="default"/>) separately because there was no granularity in
          the result. Also, we treat the Node-SID + Adj-SID and Node-SID +
          Node-SID the same because they do not differ from the data plane
          point of view.</t>
        </li>
      </ul>
      <t>Tables <xref target="t-2" format="counter"/> and <xref
      target="t-3" format="counter"/> below summarize the measurements on
      the number of SIDs needed for link protection.</t>

      <table anchor="t-2">
	<name>Link Protection (Repair Size Distribution)</name>
	<thead>
	  <tr>
	    <th>Network</th>
	    <th>0 SIDs</th>
	    <th>1 SID</th>
	    <th>2 SIDs</th>
	    <th>3 SIDs</th>
	  </tr>
	</thead>
	<tbody>
	  <tr>
	    <td>T1</td>
	    <td>74.3%</td>
	    <td>25.3%</td>
	    <td>0.5%</td>
	    <td>0.0%</td>
	  </tr>
	  <tr>
	    <td>T2</td>
	    <td>81.1%</td>
	    <td>18.7%</td>
	    <td>0.2%</td>
	    <td>0.0%</td>
	  </tr>
	  <tr>
	    <td>T3</td>
	    <td>95.9%</td>
	    <td>4.1%</td>
	    <td>0.1%</td>
	    <td>0.0%</td>
	  </tr>
	  <tr>
	    <td>T4</td>
	    <td>62.5%</td>
	    <td>35.7%</td>
	    <td>1.8%</td>
	    <td>0.0%</td>
	  </tr>
	  <tr>
	    <td>T5</td>
	    <td>85.7%</td>
	    <td>14.3%</td>
	    <td>0.0%</td>
	    <td>0.0%</td>
	  </tr>
	  <tr>
	    <td>T6</td>
	    <td>81.2%</td>
	    <td>18.7%</td>
	    <td>0.0%</td>
	    <td>0.0%</td>
	  </tr>
	  <tr>
	    <td>T7</td>
	    <td>98.9%</td>
	    <td>1.1%</td>
	    <td>0.0%</td>
	    <td>0.0%</td>
	  </tr>
	  <tr>
	    <td>T8</td>
	    <td>94.1%</td>
	    <td>5.9%</td>
	    <td>0.0%</td>
	    <td>0.0%</td>
	  </tr>
	  <tr>
	    <td>T9</td>
	    <td>98.9%</td>
	    <td>1.0%</td>
	    <td>0.0%</td>
	    <td>0.0%</td> </tr> </tbody> </table> <table anchor="t-3">
	    <name>Link Protection (Repair Size Cumulative Distribution)</name>
	<thead>
	  <tr>
	    <th>Network</th>
	    <th>0 SIDs</th>
	    <th>1 SID</th>
	    <th>2 SIDs</th>
	    <th>3 SIDs</th>
	  </tr>
	</thead>
	<tbody>
	  <tr>
	    <td>T1</td>
	    <td>74.2%</td>
	    <td>99.5%</td>
	    <td>99.9%</td>
	    <td>100%</td>
	  </tr>
	  <tr>
	    <td>T2</td>
	    <td>81.1%</td>
	    <td>99.8%</td>
	    <td>100%</td>
	    <td>100%</td>
	  </tr>
	  <tr>
	    <td>T3</td>
	    <td>95.9%</td>
	    <td>99.9%</td>
	    <td>100%</td>
	    <td>100%</td>
	  </tr>
	  <tr>
	    <td>T4</td>
	    <td>62.5%</td>
	    <td>98.2%</td>
	    <td>100%</td>
	    <td>100%</td>
	  </tr>
	  <tr>
	    <td>T5</td>
	    <td>85.7%</td>
	    <td>100%</td>
	    <td>100%</td>
	    <td>100%</td>
	  </tr>
	  <tr>
	    <td>T6</td>
	    <td>81.2%</td>
	    <td>99.9%</td>
	    <td>100%</td>
	    <td>100%</td>
	  </tr>
	  <tr>
	    <td>T7</td>
	    <td>98.8%</td>
	    <td>100%</td>
	    <td>100%</td>
	    <td>100%</td>
	  </tr>
	  <tr>
	    <td>T8</td>
	    <td>94.1%</td>
	    <td>100%</td>
	    <td>100%</td>
	    <td>100%</td>
	  </tr>
	  <tr>
	    <td>T9</td>
	    <td>98.9%</td>
	    <td>100%</td>
	    <td>100%</td>
	    <td>100%</td>
	  </tr>
	</tbody>
      </table>


<t>Tables <xref target="t-4" format="counter"/> and <xref target="t-5"
format="counter"/> summarize the measurements on the number of SIDs needed for
local SRLG protection.</t>


<table anchor="t-4">
  <name>Local SRLG Protection (Repair Size Distribution)</name>
  <thead>
    <tr>
      <th>Network</th>
      <th>0 SIDs</th>
      <th>1 SID</th>
      <th>2 SIDs</th>
      <th>3 SIDs</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>T1</td>
      <td>74.2%</td>
      <td>25.3%</td>
      <td>0.5%</td>
      <td>0.0%</td>
    </tr>
    <tr>
      <td>T2</td>
      <td colspan="4">No SRLG information</td>
    </tr>
    <tr>
      <td>T3</td>
      <td>93.6%</td>
      <td>6.3%</td>
      <td>0.0%</td>
      <td>0.0%</td>
    </tr>
    <tr>
      <td>T4</td>
      <td>62.5%</td>
      <td>35.6%</td>
      <td>1.8%</td>
      <td>0.0%</td>
    </tr>
    <tr>
      <td>T5</td>
      <td>83.1%</td>
      <td>16.8%</td>
      <td>0.0%</td>
      <td>0.0%</td>
    </tr>
    <tr>
      <td>T6</td>
      <td colspan="4">No SRLG information</td>
    </tr>
    <tr>
      <td>T7</td>
      <td colspan="4">No SRLG information</td>
    </tr>
    <tr>
      <td>T8</td>
      <td>85.2%</td>
      <td>14.8%</td>
      <td>0.0%</td>
      <td>0.0%</td>
    </tr>
    <tr>
      <td>T9</td>
      <td>98.9%</td>
      <td>1.1%</td>
      <td>0.0%</td>
      <td>0.0%</td>
    </tr>
  </tbody>
</table>

<table anchor="t-5">
  <name>Local SRLG Protection (Repair Size Cumulative Distribution)</name>
  <thead>
    <tr>
      <th>Network</th>
      <th>0 SIDs</th>
      <th>1 SID</th>
      <th>2 SIDs</th>
      <th>3 SIDs</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>T1</td>
      <td>74.2%</td>
      <td>99.5%</td>
      <td>99.9%</td>
      <td>100%</td>
    </tr>
    <tr>
      <td>T2</td>
      <td colspan="4">No SRLG information</td>
    </tr>
    <tr>
      <td>T3</td>
      <td>93.6%</td>
      <td>99.9%</td>
      <td>100%</td>
      <td>0.0%</td>
    </tr>
    <tr>
      <td>T4</td>
      <td>62.5%</td>
      <td>98.2%</td>
      <td>100%</td>
      <td>100%</td>
    </tr>
    <tr>
      <td>T5</td>
      <td>83.1%</td>
      <td>100%</td>
      <td>100%</td>
      <td>100%</td>
    </tr>
    <tr>
      <td>T6</td>
      <td colspan="4">No SRLG information</td>
    </tr>
    <tr>
      <td>T7</td>
      <td colspan="4">No SRLG information</td>
    </tr>
    <tr>
      <td>T8</td>
      <td>85.2%</td>
      <td>100%</td>
      <td>100%</td>
      <td>100%</td>
    </tr>
    <tr>
      <td>T9</td>
      <td>98.9%</td>
      <td>100%</td>
      <td>100%</td>
      <td>100%</td>
    </tr>
  </tbody>
</table>

<t>The remaining two tables summarize the measurements on the number of
SIDs needed for node protection.</t>

<table anchor="t-6">
  <name>Node Protection (Repair Size Distribution)</name>
  <thead>
    <tr>
      <th>Network</th>
      <th>0 SIDs</th>
      <th>1 SID</th>
      <th>2 SIDs</th>
      <th>3 SIDs</th>
      <th>4 SIDs</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>T1</td>
      <td>49.8%</td>
      <td>47.9%</td>
      <td>2.1%</td>
      <td>0.1%</td>
      <td>0.0%</td>
    </tr>
    <tr>
      <td>T2</td>
      <td>36.5%</td>
      <td>59.6%</td>
      <td>3.6%</td>
      <td>0.2%</td>
      <td>0.0%</td>
    </tr>
    <tr>
      <td>T3</td>
      <td>73.3%</td>
      <td>25.6%</td>
      <td>1.1%</td>
      <td>0.0%</td>
      <td>0.0%</td>
    </tr>
    <tr>
      <td>T4</td>
      <td>36.1%</td>
      <td>57.3%</td>
      <td>6.3%</td>
      <td>0.2%</td>
      <td>0.0%</td>
    </tr>
    <tr>
      <td>T5</td>
      <td>73.2%</td>
      <td>26.8%</td>
      <td>0.0%</td>
      <td>0.0%</td>
      <td>0.0%</td>
    </tr>
    <tr>
      <td>T6</td>
      <td>78.3%</td>
      <td>21.3%</td>
      <td>0.3%</td>
      <td>0.0%</td>
      <td>0.0%</td>
    </tr>
    <tr>
      <td>T7</td>
      <td>66.1%</td>
      <td>32.8%</td>
      <td>1.1%</td>
      <td>0.0%</td>
      <td>0.0%</td>
    </tr>
    <tr>
      <td>T8</td>
      <td>59.7%</td>
      <td>40.2%</td>
      <td>0.0%</td>
      <td>0.0%</td>
      <td>0.0%</td>
    </tr>
    <tr>
      <td>T9</td>
      <td>98.9%</td>
      <td>1.0%</td>
      <td>0.0%</td>
      <td>0.0%</td>
      <td>0.0%</td>
    </tr>
  </tbody>
</table>

<table anchor="t-7">
  <name>Node Protection (Repair Size Cumulative Distribution)</name>
  <thead>
    <tr>
      <th>Network</th>
      <th>0 SIDs</th>
      <th>1 SID</th>
      <th>2 SIDs</th>
      <th>3 SIDs</th>
      <th>4 SIDs</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>T1</td>
      <td>49.7%</td>
      <td>97.6%</td>
      <td>99.8%</td>
      <td>99.9%</td>
      <td>100%</td>
    </tr>
    <tr>
      <td>T2</td>
      <td>36.5%</td>
      <td>96.1%</td>
      <td>99.7%</td>
      <td>99.9%</td>
      <td>100%</td>
    </tr>
    <tr>
      <td>T3</td>
      <td>73.3%</td>
      <td>98.9%</td>
      <td>99.9%</td>
      <td>100%</td>
      <td>100%</td>
    </tr>
    <tr>
      <td>T4</td>
      <td>36.1%</td>
      <td>93.4%</td>
      <td>99.8%</td>
      <td>99.9%</td>
      <td>100%</td>
    </tr>
    <tr>
      <td>T5</td>
      <td>73.2%</td>
      <td>100%</td>
      <td>100%</td>
      <td>100%</td>
      <td>100%</td>
    </tr>
    <tr>
      <td>T6</td>
      <td>78.4%</td>
      <td>99.7%</td>
      <td>100%</td>
      <td>100%</td>
      <td>100%</td>
    </tr>
    <tr>
      <td>T7</td>
      <td>66.1%</td>
      <td>98.9%</td>
      <td>100%</td>
      <td>100%</td>
      <td>100%</td>
    </tr>
    <tr>
      <td>T8</td>
      <td>59.7%</td>
      <td>100%</td>
      <td>100%</td>
      <td>100%</td>
      <td>100%</td>
    </tr>
    <tr>
      <td>T9</td>
      <td>98.9%</td>
      <td>100%</td>
      <td>100%</td>
      <td>100%</td>
      <td>100%</td>
    </tr>
  </tbody>
</table>
</section>
    <section anchor="ack" numbered="false" toc="default">
      <name>Acknowledgments</name>
      <t>The authors would like to thank <contact fullname="Les Ginsberg"/>,
      <contact fullname="Stewart Bryant"/>, <contact fullname="Alexander
      Vainsthein"/>, <contact fullname="Chris Bowers"/>, <contact
      fullname="Shraddha Hedge"/>, <contact fullname="Wes Hardaker"/>,
      <contact fullname="Gunter Van de Velde"/>, and <contact fullname="John
      Scudder"/> for their valuable comments.</t>
    </section>

    <section anchor="contributors" numbered="false" toc="default">
      <name>Contributors</name>
      <t>In addition to the authors listed on the front page, the following
      co-authors have also contributed to this document:</t>
    <contact fullname="Francois Clad">
      <organization>Cisco Systems</organization>
    </contact>
    <contact fullname="Pablo Camarillo">
      <organization>Cisco Systems</organization>
    </contact>
    </section>

  </back>
</rfc>
