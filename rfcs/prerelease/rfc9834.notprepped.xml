<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-opsawg-teas-attachment-circuit-20" number="9834" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true" version="3" xml:lang="en" updates="" obsoletes="">

  <front>    
    <title abbrev="ACaaS">YANG Data Models for Bearers and Attachment Circuits as a Service (ACaaS)</title>
    <seriesInfo name="RFC" value="9834"/>
    <author fullname="Mohamed Boucadair" role="editor" initials="M." surname="Boucadair">
      <organization>Orange</organization>
      <address>
        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>
    <author fullname="Richard Roberts" role="editor" initials="R." surname="Roberts">
      <organization>Juniper</organization>
      <address>
        <email>rroberts@juniper.net</email>
      </address>
    </author>
    <author fullname="Oscar Gonzalez de Dios" initials="O." surname="Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author fullname="Samier Barguil" initials="S." surname="Barguil">
      <organization>Nokia</organization>
      <address>
        <email>samier.barguil_giraldo@nokia.com</email>
      </address>
    </author>
    <author fullname="Bo Wu" initials="B." surname="Wu">
      <organization>Huawei Technologies</organization>
      <address>
        <email>lana.wubo@huawei.com</email>
      </address>
    </author>
    <date year="2025" month="September"/>
    <area>OPS</area>
    <workgroup>opsawg</workgroup>

    <keyword>Slice Service</keyword>
    <keyword>L3VPN</keyword>
    <keyword>L2VPN</keyword>
    <keyword>Automation</keyword>
    <keyword>Network Automation</keyword>
    <keyword>Orchestration</keyword>
    <keyword>service delivery</keyword>
    <keyword>Service provisioning</keyword>
    <keyword>service segmentation</keyword>
    <keyword>service flexibility</keyword>
    <keyword>service simplification</keyword>
    <keyword>Network Service</keyword>
    <keyword>3GPP</keyword>
    <keyword>Network Slicing</keyword>

    <abstract>
<t>Delivery of network services assumes that appropriate setup is provisioned over the links that connect customer termination points and a provider network. The required setup to allow successful data exchange over these links is referred to as an attachment circuit (AC), while the underlying link is referred to as a "bearer".</t>
      <t>This document specifies a YANG service data model for ACs. This model can be used for the provisioning of ACs before or during service provisioning (e.g., RFC 9543 Network Slice Service).</t>
      <t>The document also specifies a YANG service data model for managing bearers over which ACs are established.</t>
    </abstract>
  </front>
  <middle>
    <?line 125?>

<section anchor="introduction">
      <name>Introduction</name>
      <section anchor="scope-and-intended-use">
        <name>Scope and Intended Use</name>
        <t>Connectivity services are provided by networks to customers via dedicated termination points, such as Service Functions (SFs) <xref target="RFC7665"/>, Customer Edges (CEs), peer Autonomous System Border Routers (ASBRs), data centers gateways, or Internet Exchange Points (IXPs). A connectivity service is basically about ensuring data transfer received from or destined to a given termination point to or from other termination points. The objectives for the connectivity service can be negotiated and agreed upon between the customer and the network provider. To facilitate data transfer within the provider network, it is assumed that the appropriate setup is provisioned over the links that connect customer termination points and a provider network (usually via a Provider Edge (PE)), allowing data to be successfully exchanged over these links. The required setup is referred to in this document as an attachment circuit (AC), while the underlying link is referred to as a "bearer".</t>
        <t>When a customer requests a new service, the service can be bound to existing ACs or trigger the instantiation of new ACs. The provisioning of a service should, thus, accommodate both deployments.</t>
        <t>Also, because the instantiation of an AC requires coordinating the provisioning of endpoints that might not belong to the same administrative entity (customer vs. provider or distinct operational teams within the same provider, etc.), providing programmatic means to expose Attachment Circuits as a Service (ACaaS) greatly simplifies the provisioning of services delivered over an AC. For example, management systems of adjacent domains that need to connect via an AC will use such means to agree upon the resources that are required for the activation of both sides of an AC (e.g., Layer 2 tags, IP address family, or IP subnets).</t>
        <t>This document specifies a YANG service data model ("ietf-ac-svc") for managing ACs that are exposed by a network to its customers, such as an enterprise site, an SF, a hosting infrastructure, or a peer network provider. The model can be used for the provisioning of ACs prior to or during advanced service provisioning (e.g., RFC 9543 Network Slice Service defined in "A Framework for Network Slices in Networks Built from IETF Technologies" <xref target="RFC9543"/>).</t>
        <t>The "ietf-ac-svc" module (<xref target="sec-ac-module"/>) includes a set of reusable groupings. Whether a service model that wants to describe the
ACs associated with the service reuses structures defined in the "ietf-ac-svc" or simply includes an AC reference (that was communicated during AC service instantiation) is a design choice of these service models. Relying upon the AC service model to manage ACs over which services are delivered has the merit of decorrelating the management of the (core) service from the ACs.  This allows upgrades (to reflect recent AC technologies or new features such as new encryption schemes or additional routing protocols) to be done in just one place rather than in each (core) service model. This document favors the approach of completely relying upon the AC service model instead of duplicating data nodes into specific modules of advanced services that are delivered over an AC.</t>
<t>Since the provisioning of an AC requires a bearer to be in place, this document introduces a new module called "ietf-bearer-svc", which enables customers to manage their bearers (<xref target="sec-bearer-module"/>).
The customers can then retrieve a provider-assigned bearer reference that they will include in their AC service requests. Likewise, a customer may learn whether their bearers support a synchronization mechanism such as Sync Ethernet (SyncE) <xref target="ITU-T-G.781"/>. An example of retrieving a bearer reference is provided in <xref target="ex-create-bearer"/>.</t>
        <t>An AC service request can provide a reference to a bearer or a set of peer Service Attachment Points (SAPs) specified in "A YANG Network Data Model for Service Attachment Points (SAPs)" <xref target="RFC9408"/>. Both schemes are supported in the AC service model. When several bearers are available, the AC service request may filter them based on the bearer type, synchronization support, etc.</t>
        <t>Each AC is identified with a unique identifier within a provider domain. From a network provider standpoint, an AC can be bound to a single or multiple SAPs <xref target="RFC9408"/>.
	Likewise, the same SAP can be bound to one or multiple ACs. However, the mapping between an AC and a PE in the provider network that terminates that AC is hidden to the application that makes use of the AC service model. Such mapping information is internal to the network controllers. As such, the details about the (node-specific) attachment interfaces are not exposed in the AC service model. However, these details are exposed at the network model per "A Network YANG Data Model for Attachment Circuits" <xref target="RFC9835"/>. "A YANG Data Model for Augmenting VPN Service and Network Models with Attachment Circuits" <xref target="RFC9836"/> specifies augmentations to the      L2VPN Service Model (L2SM) <xref target="RFC8466"/> and the L3VPN Service Model     (L3SM) <xref target="RFC8299"/> to bind LxVPN services to ACs.</t>
        <t>The AC service model does not make any assumptions about the internal structure or even the nature of the services that will be delivered over an AC or a set of ACs. Customers do not have access to that network view other than the ACs that they ordered. For example, the AC service model can be used to provision a set of ACs to connect multiple sites (Site1, Site2, ..., SiteX) for a customer who also requested VPN services. If the provisioning of these services requires specific configuration on ASBR nodes, such configuration is handled at the network level and is not exposed to the customer at the service level. However, the network controller will have access to such a view, as the service points in these ASBRs will be exposed as SAPs with 'role' set to 'ietf-sap-ntw:nni' <xref target="RFC9408"/>.</t>
        <t>The AC service model can be used in a variety of contexts, such as (but not limited to) those provided in <xref target="examples"/>:</t>
        <ul spacing="normal">
          <li>
            <t>Create an AC over an existing bearer (<xref target="ac-bearer-exist"/>).</t>
          </li>
          <li>
            <t>Request an AC for a known peer SAP (<xref target="ac-no-bearer-peer-sap"/>).</t>
          </li>
          <li>
            <t>Instantiate multiple ACs over the same bearer (<xref target="sec-ex-one-ce-multi-acs"/>).</t>
          </li>
          <li>
            <t>Control the precedence over multiple ACs (<xref target="sec-ex-prec"/>).</t>
          </li>
          <li>
            <t>Create multiple ACs bound to multiple CEs (<xref target="sec-multiple-ces"/>).</t>
          </li>
          <li>
            <t>Bind an RFC 9543 Network Slice Service to a set of pre-provisioned ACs (<xref target="sec-ex-slice"/>).</t>
          </li>
          <li>
            <t>Connect an enterprise network to a provider network using BGP  (<xref target="sec-cus-bgp"/>).</t>
          </li>
          <li>
            <t>Connect a Cloud Infrastructure to a service provider network (<xref target="sec-ex-cloud"/>).</t>
          </li>
          <li>
            <t>Interconnect provider networks (e.g., <xref target="RFC8921"/> or <xref target="I-D.ietf-grow-peering-api"/>). Such ACs are identified with a 'role' set to 'ac-common:nni' or 'ac-common:public-nni'. See <xref target="sec-peering"/> to illustrate the use of the AC model for interconnection/peering.</t>
          </li>
          <li>
            <t>Manage connectivity for complex containerized or virtualized functions in the cloud (<xref target="sec-cloudified-nfs"/>).</t>
          </li>
          <li>
            <t>Manage AC redundancy with static addressing (<xref target="sec-bfd-static"/>).</t>
          </li>
        </ul>
        <t>The document adheres to the principles discussed in "Service Models Explained" (<xref section="3" sectionFormat="of" target="RFC8309"/>) for the encoding and communication protocols used
for the interaction between a customer and a provider. Also, consistent with "A Framework for Automating Service and Network Management with YANG" <xref target="RFC8969"/>, the service models defined in the document can be used independently of the Network Configuration Protocol  (NETCONF) / RESTCONF.</t>
        <t>The YANG data models in this document conform to the Network Management Datastore Architecture (NMDA) defined in <xref target="RFC8342"/>.</t>
      </section>
      <section anchor="positioning-acaas-vs-other-data-models">
        <name>Positioning ACaaS vs. Other Data Models</name>
        <t>The AC model specified in this document is not a network model <xref target="RFC8969"/>. As such, the model does not expose details related to specific nodes in the provider's network that terminate an AC (e.g., network node identifiers). The mapping between an AC as seen by a customer and the network implementation of an AC is maintained by the network controllers and is not exposed to the customer. This mapping can be maintained using a variety of network models, such as an augmented SAP AC network model <xref target="RFC9835"/>.</t>
        <t>The AC service model is not a device model. A network provider may use a variety of device models (e.g., "A YANG Data Model for Routing Management (NMDA Version)" <xref target="RFC8349"/> or "YANG Model for Border Gateway Protocol (BGP-4)" <xref target="I-D.ietf-idr-bgp-model"/>) to provision an AC service in relevant network nodes.</t>
        <t>The AC service model reuses common types and structures defined in "A Common YANG Data Model for Layer 2 and Layer 3 VPNs" <xref target="RFC9181"/>.</t>
        <section anchor="why-not-use-the-l2sm-as-reference-data-model-for-acaas">
          <name>Why Not Use the L2SM as a Reference Data Model for ACaaS?</name>
          <t>The L2VPN Service Model (L2SM) <xref target="RFC8466"/> covers some AC-related considerations. Nevertheless, the L2SM structure is primarily focused on Layer 2 aspects. For example, the L2SM does not cover Layer 3 provisioning, which is required for the typical AC instantiation.</t>
        </section>
        <section anchor="why-not-use-the-l3sm-as-reference-data-model-for-acaas">
          <name>Why Not Use the L3SM as a Reference Data Model for ACaaS?</name>
          <t>Like the L2SM, the L3VPN Service Model (L3SM) <xref target="RFC8299"/> addresses certain AC-related aspects. However, the L3SM structure does not sufficiently address Layer 2 provisioning requirements. Additionally, the L3SM is primarily designed for conventional L3VPN deployments and, as such, has some limitations for instantiating ACs in other deployment contexts (e.g., cloud environments). For example, the L3SM does not provide the capability to provision multiple BGP peer groups over the same AC.</t>
        </section>
      </section>
    </section>
    <section anchor="conventions-and-definitions">
      <name>Conventions and Definitions</name>
        <t>
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>",
    "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be
    interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/> <xref
    target="RFC8174"/> when, and only when, they appear in all capitals, as
    shown here.
        </t>
	<t>The meanings of the symbols in the YANG tree diagrams are defined in "YANG Tree Diagrams" <xref target="RFC8340"/>.</t>
	<t>LxSM refers to both the L2SM and the L3SM.</t>
      <t>LxVPN refers to both Layer 2 VPN (L2VPN) and Layer 3 VPN (L3VPN).</t>	
      <t>LxNM refers to both the L2VPN Network Model (L2NM) and the L3VPN Network Model (L3NM).</t>
      <t>This document uses the following terms:</t>
      <dl spacing="normal" newline="false">
        <dt>Bearer:</dt>
        <dd>
          <t>A physical or logical link that connects a customer node (or site) to a provider network.</t>
	  <t>A bearer can be a wireless or wired link. One or multiple technologies can be used to build a bearer (e.g., Link Aggregation Group (LAG) <xref target="IEEE802.1AX"/>). The bearer type can be specified by a customer.</t>
          <t>The operator allocates a unique bearer reference to identify a bearer within its network (e.g., customer line identifier). Such a reference can be retrieved by a customer and used in subsequent service placement requests to unambiguously identify where a service is to be bound.</t>
          <t>The concept of a bearer can be generalized to refer to the required underlying connection for the provisioning of an AC.</t>
	  <t>One or multiple ACs may be hosted over the same bearer (e.g., multiple VLANs on the same bearer that is provided by a physical link).</t>
        </dd>
        <dt>Customer Edge (CE):</dt>
        <dd>
          <t>Equipment that is dedicated to a customer and is connected to one or more PEs via ACs.</t>
          <t>A CE can be a router, a bridge, a switch, etc.</t>
        </dd>
        <dt>Provider Edge (PE):</dt>
        <dd>
          <t>Equipment owned and managed by the service provider that can support multiple services for different customers.</t>
          <t>Per "Provider Provisioned Virtual Private Network (VPN) Terminology" (<xref section="5.2" sectionFormat="of" target="RFC4026"/>), a PE is a device located at the edge of the service network with the functionality that is needed to interface with the customer.</t>
          <t>A PE is connected to one or more CEs via ACs.</t>
        </dd>
        <dt>Network controller:</dt>
        <dd>
          <t>Denotes a functional entity responsible for the management of the service provider network. One or multiple
      network controllers can be deployed in a service provider network.</t>
        </dd>
        <dt>Network Function (NF):</dt>
        <dd>
          <t>Used to refer to the same concept as SF (<xref section="1.4" sectionFormat="of" target="RFC7665"/>).</t>
          <t>NF is also used in this document, as this term is widely used outside the IETF.</t>
          <t>NF and SF are used interchangeably.</t>
        </dd>
        <dt>Parent Bearer:</dt>
        <dd>
          <t>Refers to a bearer (e.g., LAG) that is used to build other bearers. These bearers (called child bearers) inherit the parent bearer properties.</t>
        </dd>
        <dt>Parent AC:</dt>
        <dd>
          <t>Refers to an AC that is used to build other ACs. These ACs (called Child ACs) inherit the Parent AC properties.</t>
        </dd>
        <dt>Service orchestrator:</dt>
        <dd>
          <t>Refers to a functional entity that interacts with the customer of a network service.</t>
	  <t>A service orchestrator is typically responsible for the ACs, the PE selection, and requesting the activation of the requested service to a network controller.</t>
	  <t>A service orchestrator may interact with one or more network
      controllers.</t>
        </dd>
        <dt>Service provider network:</dt>
        <dd>
          <t>A network that is able to provide network services (e.g., LxVPN or RFC 9543 Network Slice Services).</t>
        </dd>
        <dt>Service provider:</dt>
        <dd>
          <t>An entity that offers network services (e.g., LxVPN or RFC 9543 Network Slice Services).</t>
        </dd>
      </dl>
      <t>The names of data nodes are prefixed using the prefix associated with the corresponding imported YANG module as shown in <xref target="pref"/>:</t>
      <table anchor="pref">
        <name>Modules and Their Associated Prefixes</name>
        <thead>
          <tr>
            <th align="left">Prefix</th>
            <th align="left">Module</th>
            <th align="left">Reference</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="left">inet</td>
            <td align="left">ietf-inet-types</td>
            <td align="left">
              <xref section="4" sectionFormat="of" target="RFC6991"/></td>
          </tr>
          <tr>
            <td align="left">key-chain</td>
            <td align="left">ietf-key-chain</td>
            <td align="left">
              <xref target="RFC8177"/></td>
          </tr>
          <tr>
            <td align="left">nacm</td>
            <td align="left">ietf-netconf-acm</td>
            <td align="left">
              <xref target="RFC8341"/></td>
          </tr>
          <tr>
            <td align="left">vpn-common</td>
            <td align="left">ietf-vpn-common</td>
            <td align="left">
              <xref target="RFC9181"/></td>
          </tr>
        </tbody>
      </table>
    </section>
    <section anchor="relationship-to-other-ac-data-models">
      <name>Relationship to Other AC Data Models</name>
      <t><xref target="ac-overview"/> depicts the relationship between the various AC data models:</t>
      <ul spacing="normal">
        <li>
          <t>"ietf-ac-common" <xref target="RFC9833"/></t>
        </li>
        <li>
          <t>"ietf-bearer-svc" (<xref target="sec-bearer-module"/>)</t>
        </li>
        <li>
          <t>"ietf-ac-svc" (<xref target="sec-ac-module"/>)</t>
        </li>
        <li>
          <t>"ietf-ac-ntw" <xref target="RFC9835"/></t>
        </li>
        <li>
          <t>"ietf-ac-glue" <xref target="RFC9836"/></t>
        </li>
      </ul>
      <figure anchor="ac-overview">
        <name>AC Data Models</name>
        <artset>
          <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="288" width="368" viewBox="0 0 368 288" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
              <path d="M 32,144 L 32,240" fill="none" stroke="black"/>
              <path d="M 56,80 L 56,112" fill="none" stroke="black"/>
              <path d="M 72,144 L 72,176" fill="none" stroke="black"/>
              <path d="M 144,48 L 144,80" fill="none" stroke="black"/>
              <path d="M 192,40 L 192,112" fill="none" stroke="black"/>
              <path d="M 240,48 L 240,80" fill="none" stroke="black"/>
              <path d="M 328,80 L 328,160" fill="none" stroke="black"/>
              <path d="M 328,192 L 328,240" fill="none" stroke="black"/>
              <path d="M 56,80 L 144,80" fill="none" stroke="black"/>
              <path d="M 240,80 L 328,80" fill="none" stroke="black"/>
              <path d="M 104,128 L 128,128" fill="none" stroke="black"/>
              <path d="M 72,176 L 264,176" fill="none" stroke="black"/>
              <path d="M 32,240 L 128,240" fill="none" stroke="black"/>
              <path d="M 248,240 L 328,240" fill="none" stroke="black"/>
              <path d="M 24,272 L 40,272" fill="none" stroke="black"/>
              <polygon class="arrowhead" points="336,192 324,186.4 324,197.6" fill="black" transform="rotate(270,328,192)"/>
              <polygon class="arrowhead" points="248,48 236,42.4 236,53.6" fill="black" transform="rotate(270,240,48)"/>
              <polygon class="arrowhead" points="200,40 188,34.4 188,45.6" fill="black" transform="rotate(270,192,40)"/>
              <polygon class="arrowhead" points="152,48 140,42.4 140,53.6" fill="black" transform="rotate(270,144,48)"/>
              <polygon class="arrowhead" points="112,128 100,122.4 100,133.6" fill="black" transform="rotate(180,104,128)"/>
              <polygon class="arrowhead" points="80,144 68,138.4 68,149.6" fill="black" transform="rotate(270,72,144)"/>
              <polygon class="arrowhead" points="48,272 36,266.4 36,277.6" fill="black" transform="rotate(0,40,272)"/>
              <polygon class="arrowhead" points="40,144 28,138.4 28,149.6" fill="black" transform="rotate(270,32,144)"/>
              <g class="text">
                <text x="188" y="36">ietf-ac-common</text>
                <text x="48" y="132">ietf-ac-svc</text>
                <text x="200" y="132">ietf-bearer-svc</text>
                <text x="320" y="180">ietf-ac-ntw</text>
                <text x="188" y="244">ietf-ac-glue</text>
                <text x="8" y="276">X</text>
                <text x="60" y="276">Y:</text>
                <text x="80" y="276">X</text>
                <text x="120" y="276">imports</text>
                <text x="160" y="276">Y</text>
              </g>
            </svg>
          </artwork>
          <artwork type="ascii-art" align="center"><![CDATA[
                ietf-ac-common
                 ^     ^     ^
                 |     |     |
      .----------'     |     '----------.
      |                |                |
      |                |                |
ietf-ac-svc <--- ietf-bearer-svc        |
   ^    ^                               |
   |    |                               |
   |    '------------------------ ietf-ac-ntw
   |                                    ^
   |                                    |
   |                                    |
   '------------ ietf-ac-glue ----------'

X --> Y: X imports Y
]]></artwork>
        </artset>
      </figure>
      <t>The "ietf-ac-common" module is imported by the "ietf-bearer-svc", "ietf-ac-svc", and "ietf-ac-ntw" modules. Bearers managed using the "ietf-bearer-svc" module may be referenced by service ACs managed using the "ietf-ac-svc" module. Similarly, a bearer managed using the "ietf-bearer-svc" module may list the set of ACs that use that bearer. To facilitate correlation between an AC service request and the actual AC provisioned in the network, "ietf-ac-ntw" leverages the AC references exposed by the "ietf-ac-svc" module. Furthermore, to bind L2VPN or L3VPN services with ACs, the "ietf-ac-glue" module augments the LxSM and LxNM with AC service references exposed by the "ietf-ac-svc" module and AC network references exposed by the "ietf-ac-ntw" module.</t>
    </section>
    <section anchor="sample-uses-of-the-data-models">
      <name>Sample Uses of the Data Models</name>
      <section anchor="acs-terminated-by-one-or-multiple-customer-edges-ces">
        <name>ACs Terminated by One or Multiple CEs</name>
        <t><xref target="uc"/> depicts two target topology flavors that involve ACs. These topologies have the following characteristics:</t>
        <ul spacing="normal">
          <li>
            <t>A CE can be either a physical device or a logical entity. Such logical entity is typically a software component (e.g., a virtual SF that is hosted within the provider's network or a third-party infrastructure). A CE is seen by the network as a peer SAP.</t>
          </li>
          <li>
            <t>An AC service request may include one or multiple ACs, which may be associated to a single CE or multiple CEs.</t>
          </li>
          <li>
            <t>CEs may be either dedicated to one single connectivity service or host multiple connectivity services (e.g., CEs with roles of SFs <xref target="RFC7665"/>).</t>
          </li>
          <li>
            <t>A network provider may bind a single AC to one or multiple peer SAPs (e.g., CE1 and CE2 are tagged as peer SAPs for the same AC). For example, and as discussed in <xref target="RFC4364"/>, multiple CEs can be attached to a PE over the same AC. This scenario is typically implemented when the Layer 2 infrastructure between the CE and the network is a multipoint service.</t>
          </li>
          <li>
            <t>A single CE may terminate multiple ACs, which can be associated with the same bearer or distinct bearers.</t>
          </li>
          <li>
            <t>Customers may request protection schemes in which the ACs associated with their endpoints are terminated by the same PE (e.g., CE3), distinct PEs (e.g., CE4), etc. The network provider uses this request to decide where to terminate the AC in the provider network (i.e., select which PE(s) to use) and also whether to enable specific capabilities (e.g., Virtual Router Redundancy Protocol (VRRP) <xref target="RFC9568"/>). Note that placement constraints may also be requested during the instantiation of the underlying bearers (<xref target="sec-bearer"/>).</t>
          </li>
        </ul>
        <figure anchor="uc">
          <name>Examples of ACs</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="304" width="512" viewBox="0 0 512 304" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,80 L 8,112" fill="none" stroke="black"/>
                <path d="M 8,160 L 8,192" fill="none" stroke="black"/>
                <path d="M 72,64 L 72,96" fill="none" stroke="black"/>
                <path d="M 72,144 L 72,176" fill="none" stroke="black"/>
                <path d="M 112,80 L 112,176" fill="none" stroke="black"/>
                <path d="M 176,112 L 176,144" fill="none" stroke="black"/>
                <path d="M 192,32 L 192,104" fill="none" stroke="black"/>
                <path d="M 192,152 L 192,224" fill="none" stroke="black"/>
                <path d="M 200,112 L 200,144" fill="none" stroke="black"/>
                <path d="M 280,208 L 280,240" fill="none" stroke="black"/>
                <path d="M 288,248 L 288,272" fill="none" stroke="black"/>
                <path d="M 304,208 L 304,240" fill="none" stroke="black"/>
                <path d="M 352,64 L 352,112" fill="none" stroke="black"/>
                <path d="M 352,144 L 352,192" fill="none" stroke="black"/>
                <path d="M 360,32 L 360,56" fill="none" stroke="black"/>
                <path d="M 360,200 L 360,224" fill="none" stroke="black"/>
                <path d="M 376,64 L 376,112" fill="none" stroke="black"/>
                <path d="M 376,144 L 376,192" fill="none" stroke="black"/>
                <path d="M 448,80 L 448,112" fill="none" stroke="black"/>
                <path d="M 448,160 L 448,192" fill="none" stroke="black"/>
                <path d="M 480,192 L 480,272" fill="none" stroke="black"/>
                <path d="M 504,64 L 504,96" fill="none" stroke="black"/>
                <path d="M 504,144 L 504,176" fill="none" stroke="black"/>
                <path d="M 192,32 L 360,32" fill="none" stroke="black"/>
                <path d="M 24,64 L 72,64" fill="none" stroke="black"/>
                <path d="M 352,64 L 376,64" fill="none" stroke="black"/>
                <path d="M 464,64 L 504,64" fill="none" stroke="black"/>
                <path d="M 72,80 L 112,80" fill="none" stroke="black"/>
                <path d="M 376,80 L 400,80" fill="none" stroke="black"/>
                <path d="M 424,80 L 448,80" fill="none" stroke="black"/>
                <path d="M 376,96 L 400,96" fill="none" stroke="black"/>
                <path d="M 424,96 L 448,96" fill="none" stroke="black"/>
                <path d="M 8,112 L 56,112" fill="none" stroke="black"/>
                <path d="M 176,112 L 200,112" fill="none" stroke="black"/>
                <path d="M 352,112 L 376,112" fill="none" stroke="black"/>
                <path d="M 448,112 L 488,112" fill="none" stroke="black"/>
                <path d="M 112,128 L 136,128" fill="none" stroke="black"/>
                <path d="M 160,128 L 176,128" fill="none" stroke="black"/>
                <path d="M 24,144 L 72,144" fill="none" stroke="black"/>
                <path d="M 176,144 L 200,144" fill="none" stroke="black"/>
                <path d="M 352,144 L 376,144" fill="none" stroke="black"/>
                <path d="M 464,144 L 504,144" fill="none" stroke="black"/>
                <path d="M 376,160 L 400,160" fill="none" stroke="black"/>
                <path d="M 424,160 L 448,160" fill="none" stroke="black"/>
                <path d="M 72,176 L 112,176" fill="none" stroke="black"/>
                <path d="M 376,176 L 400,176" fill="none" stroke="black"/>
                <path d="M 424,176 L 448,176" fill="none" stroke="black"/>
                <path d="M 8,192 L 56,192" fill="none" stroke="black"/>
                <path d="M 352,192 L 376,192" fill="none" stroke="black"/>
                <path d="M 448,192 L 488,192" fill="none" stroke="black"/>
                <path d="M 280,208 L 304,208" fill="none" stroke="black"/>
                <path d="M 192,224 L 280,224" fill="none" stroke="black"/>
                <path d="M 304,224 L 360,224" fill="none" stroke="black"/>
                <path d="M 280,240 L 304,240" fill="none" stroke="black"/>
                <path d="M 288,272 L 376,272" fill="none" stroke="black"/>
                <path d="M 400,272 L 480,272" fill="none" stroke="black"/>
                <path d="M 24,64 C 15.16936,64 8,71.16936 8,80" fill="none" stroke="black"/>
                <path d="M 464,64 C 455.16936,64 448,71.16936 448,80" fill="none" stroke="black"/>
                <path d="M 56,112 C 64.83064,112 72,104.83064 72,96" fill="none" stroke="black"/>
                <path d="M 488,112 C 496.83064,112 504,104.83064 504,96" fill="none" stroke="black"/>
                <path d="M 24,144 C 15.16936,144 8,151.16936 8,160" fill="none" stroke="black"/>
                <path d="M 464,144 C 455.16936,144 448,151.16936 448,160" fill="none" stroke="black"/>
                <path d="M 56,192 C 64.83064,192 72,184.83064 72,176" fill="none" stroke="black"/>
                <path d="M 488,192 C 496.83064,192 504,184.83064 504,176" fill="none" stroke="black"/>
                <g class="text">
                  <text x="412" y="68">(b1)</text>
                  <text x="412" y="84">AC</text>
                  <text x="40" y="100">CE1</text>
                  <text x="364" y="100">PE</text>
                  <text x="412" y="100">AC</text>
                  <text x="480" y="100">CE3</text>
                  <text x="412" y="116">(b2)</text>
                  <text x="148" y="132">AC</text>
                  <text x="188" y="132">PE</text>
                  <text x="272" y="132">Network</text>
                  <text x="360" y="132">|</text>
                  <text x="412" y="148">(b3)</text>
                  <text x="412" y="164">AC</text>
                  <text x="40" y="180">CE2</text>
                  <text x="364" y="180">PE</text>
                  <text x="412" y="180">AC</text>
                  <text x="480" y="180">CE4</text>
                  <text x="412" y="196">(b3)</text>
                  <text x="292" y="228">PE</text>
                  <text x="388" y="276">AC</text>
                  <text x="20" y="292">(bx)</text>
                  <text x="48" y="292">=</text>
                  <text x="84" y="292">bearer</text>
                  <text x="124" y="292">Id</text>
                  <text x="144" y="292">x</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                       .--------------------.
                       |                    |
 .------.              |                   .--.  (b1)   .-----.
|       +----.         |                   |  +---AC---+      |
|  CE1  |    |         |                   |PE+---AC---+  CE3 |
'------'     |       .--.                  '--'  (b2)  '-----'
             +---AC--+PE|     Network       |
 .------.    |       '--'                  .--.  (b3)   .-----.
|       |    |         |                   |  +---AC---+      |
|  CE2  +----'         |                   |PE+---AC---+  CE4 |
'------'               |                   '--'  (b3)  '---+-'
                       |          .--.      |              |
                       '----------+PE+------'              |
                                  '--'                     |
                                   |                       |
                                   '-----------AC----------'
(bx) = bearer Id x
]]></artwork>
          </artset>
        </figure>
      </section>
      <section anchor="separate-ac-provisioning-vs-actual-service-provisioning">
        <name>Separate AC Provisioning vs. Actual Service Provisioning</name>
        <t>The procedure to provision a service in a service provider network may depend on the practices adopted by a service provider. This includes the workflow put in place for the provisioning of network services  and how they are bound to an AC. For example, a single AC may be used to host multiple connectivity services. In order to avoid service interference and redundant information in various locations, a service provider may expose an interface to manage ACs network-wide. Customers can then request a bearer or an AC to be put in place and then refer to that bearer or AC when requesting services that are bound to the bearer or AC. <xref target="RFC9836"/> specifies augmentations to the L2SM and the L3SM to bind LxVPN services to ACs.</t>
      </section>
      <section anchor="sample-deployment-models">
        <name>Sample Deployment Models</name>
        <t><xref target="_u-ex-c"/> illustrates an example of how the bearer/AC service models can be used between a customer and a provider. Internals to the provider orchestration domain (or customer orchestration domain) are hidden to the customer (or provider).</t>
        <t>Resources that are needed to activate an AC (e.g., Layer 2 or Layer 3 identifiers) are typically imposed by the provider. However, the deployment model assumes that the customer may supply a specific identifier (e.g., selected from a pool that was pre-provisioned by the provider) in a service request. The provider may accept or reject such request.</t>
        <figure anchor="_u-ex-c">
          <name>Example of Interaction Between Customer and Provider Orchestrations</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="544" viewBox="0 0 544 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,48 L 8,80" fill="none" stroke="black"/>
                <path d="M 8,160 L 8,224" fill="none" stroke="black"/>
                <path d="M 96,96 L 96,112" fill="none" stroke="black"/>
                <path d="M 96,144 L 96,160" fill="none" stroke="black"/>
                <path d="M 192,48 L 192,80" fill="none" stroke="black"/>
                <path d="M 192,160 L 192,224" fill="none" stroke="black"/>
                <path d="M 368,48 L 368,80" fill="none" stroke="black"/>
                <path d="M 368,160 L 368,224" fill="none" stroke="black"/>
                <path d="M 448,96 L 448,112" fill="none" stroke="black"/>
                <path d="M 448,144 L 448,160" fill="none" stroke="black"/>
                <path d="M 536,48 L 536,80" fill="none" stroke="black"/>
                <path d="M 536,160 L 536,224" fill="none" stroke="black"/>
                <path d="M 24,32 L 176,32" fill="none" stroke="black"/>
                <path d="M 384,32 L 520,32" fill="none" stroke="black"/>
                <path d="M 208,64 L 352,64" fill="none" stroke="black"/>
                <path d="M 24,96 L 88,96" fill="none" stroke="black"/>
                <path d="M 104,96 L 176,96" fill="none" stroke="black"/>
                <path d="M 384,96 L 440,96" fill="none" stroke="black"/>
                <path d="M 456,96 L 520,96" fill="none" stroke="black"/>
                <path d="M 8,160 L 88,160" fill="none" stroke="black"/>
                <path d="M 104,160 L 192,160" fill="none" stroke="black"/>
                <path d="M 368,160 L 440,160" fill="none" stroke="black"/>
                <path d="M 456,160 L 536,160" fill="none" stroke="black"/>
                <path d="M 200,174 L 256,174" fill="none" stroke="black"/>
                <path d="M 200,178 L 256,178" fill="none" stroke="black"/>
                <path d="M 312,174 L 360,174" fill="none" stroke="black"/>
                <path d="M 312,178 L 360,178" fill="none" stroke="black"/>
                <path d="M 192,192 L 272,192" fill="none" stroke="black"/>
                <path d="M 296,192 L 360,192" fill="none" stroke="black"/>
                <path d="M 200,206 L 360,206" fill="none" stroke="black"/>
                <path d="M 200,210 L 360,210" fill="none" stroke="black"/>
                <path d="M 8,224 L 192,224" fill="none" stroke="black"/>
                <path d="M 368,224 L 536,224" fill="none" stroke="black"/>
                <path d="M 24,32 C 15.16936,32 8,39.16936 8,48" fill="none" stroke="black"/>
                <path d="M 176,32 C 184.83064,32 192,39.16936 192,48" fill="none" stroke="black"/>
                <path d="M 384,32 C 375.16936,32 368,39.16936 368,48" fill="none" stroke="black"/>
                <path d="M 520,32 C 528.83064,32 536,39.16936 536,48" fill="none" stroke="black"/>
                <path d="M 24,96 C 15.16936,96 8,88.83064 8,80" fill="none" stroke="black"/>
                <path d="M 176,96 C 184.83064,96 192,88.83064 192,80" fill="none" stroke="black"/>
                <path d="M 384,96 C 375.16936,96 368,88.83064 368,80" fill="none" stroke="black"/>
                <path d="M 520,96 C 528.83064,96 536,88.83064 536,80" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="456,160 444,154.4 444,165.6" fill="black" transform="rotate(90,448,160)"/>
                <polygon class="arrowhead" points="456,96 444,90.4 444,101.6" fill="black" transform="rotate(270,448,96)"/>
                <polygon class="arrowhead" points="360,64 348,58.4 348,69.6" fill="black" transform="rotate(0,352,64)"/>
                <polygon class="arrowhead" points="216,64 204,58.4 204,69.6" fill="black" transform="rotate(180,208,64)"/>
                <polygon class="arrowhead" points="104,160 92,154.4 92,165.6" fill="black" transform="rotate(90,96,160)"/>
                <polygon class="arrowhead" points="104,96 92,90.4 92,101.6" fill="black" transform="rotate(270,96,96)"/>
                <g class="text">
                  <text x="264" y="36">Bearer/AC</text>
                  <text x="92" y="52">Customer</text>
                  <text x="256" y="52">Service</text>
                  <text x="316" y="52">Models</text>
                  <text x="444" y="52">Provider</text>
                  <text x="64" y="68">Service</text>
                  <text x="132" y="68">Ordering</text>
                  <text x="424" y="68">Service</text>
                  <text x="480" y="68">Order</text>
                  <text x="444" y="84">Handling</text>
                  <text x="100" y="132">Provisioning</text>
                  <text x="452" y="132">Provisioning</text>
                  <text x="284" y="180">Bearer</text>
                  <text x="76" y="196">Customer</text>
                  <text x="132" y="196">Site</text>
                  <text x="284" y="196">AC</text>
                  <text x="420" y="196">Provider</text>
                  <text x="488" y="196">Network</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
 .--------------------.     Bearer/AC         .------------------.
|      Customer        |    Service Models   |     Provider       |
|   Service Ordering   | <-----------------> |   Service Order    |
|                      |                     |     Handling       |
 '---------^----------'                       '--------^---------'
           |                                           |
      Provisioning                                Provisioning
           |                                           |
.----------v-----------.                     .---------v----------.
|                      |========Bearer=======|                    |
|    Customer Site     +----------AC---------|  Provider Network  |
|                      |=====================|                    |
'----------------------'                     '--------------------'
]]></artwork>
          </artset>
        </figure>
        <t><xref target="_u-ex-r"/> illustrates an example of how the bearer/AC service models involve a third party. This deployment model follows a recursive approach, but other client/server alternative modes with a third party can be considered. In a recursive deployment, the Service Broker
exposes a server to a customer for the ordering of AC services, but it also acts as a client when communicating with a provider. How the Service Broker
decides to terminate a recursion for a given service request or create child service requests is specific to each deployment.</t>
        <figure anchor="_u-ex-r">
          <name>Example of Recursive Deployment</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="144" width="584" viewBox="0 0 584 144" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,48 L 8,80" fill="none" stroke="black"/>
                <path d="M 96,48 L 96,80" fill="none" stroke="black"/>
                <path d="M 232,48 L 232,80" fill="none" stroke="black"/>
                <path d="M 320,48 L 320,80" fill="none" stroke="black"/>
                <path d="M 448,48 L 448,80" fill="none" stroke="black"/>
                <path d="M 576,48 L 576,80" fill="none" stroke="black"/>
                <path d="M 24,32 L 80,32" fill="none" stroke="black"/>
                <path d="M 248,32 L 304,32" fill="none" stroke="black"/>
                <path d="M 464,32 L 560,32" fill="none" stroke="black"/>
                <path d="M 104,64 L 224,64" fill="none" stroke="black"/>
                <path d="M 328,64 L 440,64" fill="none" stroke="black"/>
                <path d="M 24,96 L 80,96" fill="none" stroke="black"/>
                <path d="M 248,96 L 304,96" fill="none" stroke="black"/>
                <path d="M 464,96 L 560,96" fill="none" stroke="black"/>
                <path d="M 24,32 C 15.16936,32 8,39.16936 8,48" fill="none" stroke="black"/>
                <path d="M 80,32 C 88.83064,32 96,39.16936 96,48" fill="none" stroke="black"/>
                <path d="M 248,32 C 239.16936,32 232,39.16936 232,48" fill="none" stroke="black"/>
                <path d="M 304,32 C 312.83064,32 320,39.16936 320,48" fill="none" stroke="black"/>
                <path d="M 464,32 C 455.16936,32 448,39.16936 448,48" fill="none" stroke="black"/>
                <path d="M 560,32 C 568.83064,32 576,39.16936 576,48" fill="none" stroke="black"/>
                <path d="M 24,96 C 15.16936,96 8,88.83064 8,80" fill="none" stroke="black"/>
                <path d="M 80,96 C 88.83064,96 96,88.83064 96,80" fill="none" stroke="black"/>
                <path d="M 248,96 C 239.16936,96 232,88.83064 232,80" fill="none" stroke="black"/>
                <path d="M 304,96 C 312.83064,96 320,88.83064 320,80" fill="none" stroke="black"/>
                <path d="M 464,96 C 455.16936,96 448,88.83064 448,80" fill="none" stroke="black"/>
                <path d="M 560,96 C 568.83064,96 576,88.83064 576,80" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="448,64 436,58.4 436,69.6" fill="black" transform="rotate(0,440,64)"/>
                <polygon class="arrowhead" points="336,64 324,58.4 324,69.6" fill="black" transform="rotate(180,328,64)"/>
                <polygon class="arrowhead" points="232,64 220,58.4 220,69.6" fill="black" transform="rotate(0,224,64)"/>
                <polygon class="arrowhead" points="112,64 100,58.4 100,69.6" fill="black" transform="rotate(180,104,64)"/>
                <g class="text">
                  <text x="152" y="36">Bearer/AC</text>
                  <text x="376" y="36">Bearer/AC</text>
                  <text x="52" y="52">Customer</text>
                  <text x="136" y="52">Service</text>
                  <text x="196" y="52">Models</text>
                  <text x="272" y="52">Service</text>
                  <text x="360" y="52">Service</text>
                  <text x="416" y="52">Model</text>
                  <text x="508" y="52">Provider</text>
                  <text x="48" y="68">Service</text>
                  <text x="276" y="68">Broker</text>
                  <text x="488" y="68">Service</text>
                  <text x="544" y="68">Order</text>
                  <text x="52" y="84">Ordering</text>
                  <text x="264" y="84">B2B</text>
                  <text x="296" y="84">C/S</text>
                  <text x="516" y="84">Handling</text>
                  <text x="16" y="132">B2B</text>
                  <text x="52" y="132">C/S:</text>
                  <text x="124" y="132">Back-to-Back</text>
                  <text x="232" y="132">Client/Server</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
 .--------.   Bearer/AC      .--------.   Bearer/AC     .-------------.
| Customer | Service Models | Service  | Service Model |   Provider    |
| Service  |<-------------->|  Broker  |<------------->| Service Order |
| Ordering |                |  B2B C/S |               |    Handling   |
 '--------'                  '--------'                 '-------------'

B2B C/S: Back-to-Back Client/Server
]]></artwork>
          </artset>
        </figure>
        <t><xref target="_u-ex"/> shows the positioning of the AC service model in the overall service delivery process, with a focus on the provider.</t>
        <figure anchor="_u-ex">
          <name>An Example of AC Model Usage (Focus on the Provider's Internals)</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="688" width="512" viewBox="0 0 512 688" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,608 L 8,624" fill="none" stroke="black"/>
                <path d="M 48,592 L 48,608" fill="none" stroke="black"/>
                <path d="M 96,480 L 96,496" fill="none" stroke="black"/>
                <path d="M 104,368 L 104,384" fill="none" stroke="black"/>
                <path d="M 120,576 L 120,640" fill="none" stroke="black"/>
                <path d="M 136,400 L 136,464" fill="none" stroke="black"/>
                <path d="M 136,512 L 136,528" fill="none" stroke="black"/>
                <path d="M 176,320 L 176,352" fill="none" stroke="black"/>
                <path d="M 176,480 L 176,496" fill="none" stroke="black"/>
                <path d="M 208,144 L 208,160" fill="none" stroke="black"/>
                <path d="M 208,256 L 208,272" fill="none" stroke="black"/>
                <path d="M 208,400 L 208,568" fill="none" stroke="black"/>
                <path d="M 232,368 L 232,384" fill="none" stroke="black"/>
                <path d="M 272,64 L 272,128" fill="none" stroke="black"/>
                <path d="M 272,176 L 272,240" fill="none" stroke="black"/>
                <path d="M 272,288 L 272,320" fill="none" stroke="black"/>
                <path d="M 296,368 L 296,384" fill="none" stroke="black"/>
                <path d="M 336,144 L 336,160" fill="none" stroke="black"/>
                <path d="M 336,256 L 336,272" fill="none" stroke="black"/>
                <path d="M 368,320 L 368,352" fill="none" stroke="black"/>
                <path d="M 368,400 L 368,568" fill="none" stroke="black"/>
                <path d="M 384,576 L 384,640" fill="none" stroke="black"/>
                <path d="M 424,368 L 424,384" fill="none" stroke="black"/>
                <path d="M 456,608 L 456,624" fill="none" stroke="black"/>
                <path d="M 496,592 L 496,608" fill="none" stroke="black"/>
                <path d="M 224,32 L 320,32" fill="none" stroke="black"/>
                <path d="M 224,64 L 320,64" fill="none" stroke="black"/>
                <path d="M 224,128 L 320,128" fill="none" stroke="black"/>
                <path d="M 224,176 L 320,176" fill="none" stroke="black"/>
                <path d="M 224,240 L 320,240" fill="none" stroke="black"/>
                <path d="M 224,288 L 320,288" fill="none" stroke="black"/>
                <path d="M 176,320 L 368,320" fill="none" stroke="black"/>
                <path d="M 120,352 L 216,352" fill="none" stroke="black"/>
                <path d="M 312,352 L 408,352" fill="none" stroke="black"/>
                <path d="M 120,400 L 216,400" fill="none" stroke="black"/>
                <path d="M 312,400 L 408,400" fill="none" stroke="black"/>
                <path d="M 112,464 L 160,464" fill="none" stroke="black"/>
                <path d="M 112,512 L 160,512" fill="none" stroke="black"/>
                <path d="M 120,576 L 384,576" fill="none" stroke="black"/>
                <path d="M 24,592 L 48,592" fill="none" stroke="black"/>
                <path d="M 472,592 L 496,592" fill="none" stroke="black"/>
                <path d="M 48,608 L 120,608" fill="none" stroke="black"/>
                <path d="M 384,608 L 456,608" fill="none" stroke="black"/>
                <path d="M 8,624 L 32,624" fill="none" stroke="black"/>
                <path d="M 456,624 L 480,624" fill="none" stroke="black"/>
                <path d="M 120,640 L 384,640" fill="none" stroke="black"/>
                <path d="M 224,32 C 215.16936,32 208,39.16936 208,48" fill="none" stroke="black"/>
                <path d="M 320,32 C 328.83064,32 336,39.16936 336,48" fill="none" stroke="black"/>
                <path d="M 224,64 C 215.16936,64 208,56.83064 208,48" fill="none" stroke="black"/>
                <path d="M 320,64 C 328.83064,64 336,56.83064 336,48" fill="none" stroke="black"/>
                <path d="M 224,128 C 215.16936,128 208,135.16936 208,144" fill="none" stroke="black"/>
                <path d="M 320,128 C 328.83064,128 336,135.16936 336,144" fill="none" stroke="black"/>
                <path d="M 224,176 C 215.16936,176 208,168.83064 208,160" fill="none" stroke="black"/>
                <path d="M 320,176 C 328.83064,176 336,168.83064 336,160" fill="none" stroke="black"/>
                <path d="M 224,240 C 215.16936,240 208,247.16936 208,256" fill="none" stroke="black"/>
                <path d="M 320,240 C 328.83064,240 336,247.16936 336,256" fill="none" stroke="black"/>
                <path d="M 224,288 C 215.16936,288 208,280.83064 208,272" fill="none" stroke="black"/>
                <path d="M 320,288 C 328.83064,288 336,280.83064 336,272" fill="none" stroke="black"/>
                <path d="M 120,352 C 111.16936,352 104,359.16936 104,368" fill="none" stroke="black"/>
                <path d="M 216,352 C 224.83064,352 232,359.16936 232,368" fill="none" stroke="black"/>
                <path d="M 312,352 C 303.16936,352 296,359.16936 296,368" fill="none" stroke="black"/>
                <path d="M 408,352 C 416.83064,352 424,359.16936 424,368" fill="none" stroke="black"/>
                <path d="M 120,400 C 111.16936,400 104,392.83064 104,384" fill="none" stroke="black"/>
                <path d="M 216,400 C 224.83064,400 232,392.83064 232,384" fill="none" stroke="black"/>
                <path d="M 312,400 C 303.16936,400 296,392.83064 296,384" fill="none" stroke="black"/>
                <path d="M 408,400 C 416.83064,400 424,392.83064 424,384" fill="none" stroke="black"/>
                <path d="M 112,464 C 103.16936,464 96,471.16936 96,480" fill="none" stroke="black"/>
                <path d="M 160,464 C 168.83064,464 176,471.16936 176,480" fill="none" stroke="black"/>
                <path d="M 112,512 C 103.16936,512 96,504.83064 96,496" fill="none" stroke="black"/>
                <path d="M 160,512 C 168.83064,512 176,504.83064 176,496" fill="none" stroke="black"/>
                <path d="M 24,592 C 15.16936,592 8,599.16936 8,608" fill="none" stroke="black"/>
                <path d="M 472,592 C 463.16936,592 456,599.16936 456,608" fill="none" stroke="black"/>
                <path d="M 32,624 C 40.83064,624 48,616.83064 48,608" fill="none" stroke="black"/>
                <path d="M 480,624 C 488.83064,624 496,616.83064 496,608" fill="none" stroke="black"/>
                <g class="text">
                  <text x="268" y="52">Customer</text>
                  <text x="108" y="84">Customer</text>
                  <text x="176" y="84">Service</text>
                  <text x="236" y="84">Models</text>
                  <text x="72" y="100">ietf-l2vpn-svc,</text>
                  <text x="200" y="100">ietf-l3vpn-svc,</text>
                  <text x="392" y="100">ietf-network-slice-service,</text>
                  <text x="100" y="116">ietf-ac-svc,</text>
                  <text x="208" y="116">ietf-ac-glue,</text>
                  <text x="296" y="116">and</text>
                  <text x="376" y="116">ietf-bearer-svc</text>
                  <text x="272" y="148">Service</text>
                  <text x="272" y="164">Orchestration</text>
                  <text x="112" y="196">Network</text>
                  <text x="172" y="196">Models</text>
                  <text x="72" y="212">ietf-l2vpn-ntw,</text>
                  <text x="200" y="212">ietf-l3vpn-ntw,</text>
                  <text x="336" y="212">ietf-sap-ntw,</text>
                  <text x="448" y="212">ietf-ac-glue,</text>
                  <text x="96" y="228">and</text>
                  <text x="160" y="228">ietf-ac-ntw</text>
                  <text x="264" y="260">Network</text>
                  <text x="272" y="276">Orchestration</text>
                  <text x="56" y="308">Network</text>
                  <text x="144" y="308">Configuration</text>
                  <text x="224" y="308">Model</text>
                  <text x="164" y="372">Domain</text>
                  <text x="364" y="372">Domain</text>
                  <text x="168" y="388">Orchestration</text>
                  <text x="360" y="388">Orchestration</text>
                  <text x="36" y="420">Device</text>
                  <text x="64" y="436">Configuration</text>
                  <text x="36" y="452">Models</text>
                  <text x="132" y="484">Config</text>
                  <text x="136" y="500">Manager</text>
                  <text x="156" y="548">NETCONF/CLI.</text>
                  <text x="288" y="548">...................</text>
                  <text x="376" y="548">.</text>
                  <text x="136" y="564">|</text>
                  <text x="84" y="596">Bearer</text>
                  <text x="420" y="596">Bearer</text>
                  <text x="28" y="612">CE1</text>
                  <text x="248" y="612">Network</text>
                  <text x="476" y="612">CE2</text>
                  <text x="28" y="660">Site</text>
                  <text x="56" y="660">A</text>
                  <text x="476" y="660">Site</text>
                  <text x="504" y="660">B</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                           .-------------.
                          |   Customer    |
                           '------+------'
          Customer Service Models |
  ietf-l2vpn-svc, ietf-l3vpn-svc, | ietf-network-slice-service,
       ietf-ac-svc, ietf-ac-glue, | and ietf-bearer-svc
                           .------+------.
                          |    Service    |
                          | Orchestration |
                           '------+------'
           Network Models         |
  ietf-l2vpn-ntw, ietf-l3vpn-ntw, | ietf-sap-ntw, ietf-ac-glue,
           and ietf-ac-ntw        |
                           .------+------.
                          |   Network     |
                          | Orchestration |
                           '------+------'
    Network Configuration Model   |
                      .-----------+-----------.
                      |                       |
              .-------+-----.         .-------+-----.
             |    Domain     |       |     Domain    |
             | Orchestration |       | Orchestration |
              '--+--------+-'         '-------+-----'
  Device         |        |                   |
  Configuration  |        |                   |
  Models         |        |                   |
             .---+---.    |                   |
            | Config  |   |                   |
            | Manager |   |                   |
             '---+---'    |                   |
                 |        |                   |
              NETCONF/CLI.......................
                 |        |                   |
               .--------------------------------.
  .---. Bearer |                                | Bearer  .---.
 |CE1 +--------+            Network             +--------+ CE2|
 '---'         |                                |        '---'
               '--------------------------------'
  Site A                                                  Site B
]]></artwork>
          </artset>
        </figure>
        <t>In order to ease the mapping between the service model and underlying network models (e.g., the L3VPN Network Model (L3NM) and SAP), the name conventions used in existing network data models are reused as much as possible. For example, 'local-address' is used rather than 'provider-address' (or similar) to refer to an IP address used in the provider network. This approach is consistent with the automation framework defined in <xref target="RFC8969"/>.</t>
      </section>
    </section>
    <section anchor="description-of-the-data-models">
      <name>Description of the Data Models</name>
      <section anchor="sec-bearer">
        <name>The Bearer Service ("ietf-bearer-svc") YANG Module</name>
        <t><xref target="bearer-st"/> shows the tree for managing the bearers (that is, the properties of an attachment that are below Layer 3). A bearer can be a physical or logical link (e.g., LAG <xref target="IEEE802.1AX"/>). Also, a bearer can be a wireless or wired link. A reference to a bearer is generated by the operator.
Such a reference can be used, e.g., in a subsequent service request to create an AC. The anchoring of the AC can also be achieved by indicating (with or without a bearer reference) a peer SAP identifier (e.g., an identifier of an SF).</t>
        <figure anchor="bearer-st">
          <name>Bearer Service Tree Structure</name>
          <sourcecode type="yangtree"><![CDATA[
module: ietf-bearer-svc
  +--rw locations
  |  +--rw customer* [name peer-as]
  |     +--rw name        string
  |     +--rw peer-as     inet:as-number
  |     +--ro location* [name]
  |        +--ro name            string
  |        +--ro address?        string
  |        +--ro city?           string
  |        +--ro postal-code?    string
  |        +--ro state?          string
  |        +--ro country-code?   string
  +--rw bearers
     +--rw requested-start?         yang:date-and-time
     +--rw requested-stop?          yang:date-and-time
     +--ro actual-start?            yang:date-and-time
     +--ro actual-stop?             yang:date-and-time
     +--rw placement-constraints
     |  +--rw constraint* [constraint-type]
     |          {vpn-common:placement-diversity}?
     |     +--rw constraint-type    identityref
     |     +--rw target
     |        +--rw (target-flavor)?
     |           +--:(id)
     |           |  +--rw group* [group-id]
     |           |     +--rw group-id    string
     |           +--:(all-bearers)
     |           |  +--rw all-other-bearers?   empty
     |           +--:(all-groups)
     |              +--rw all-other-groups?    empty
     +--rw bearer* [name]
        +--rw name                           string
        +--rw description?                   string
        +--rw customer-name?                 string
        +--rw groups
        |  +--rw group* [group-id]
        |     +--rw group-id    string
        +--rw op-comment?                    string
        +--rw bearer-parent-ref?             bearer-svc:bearer-ref
        +--ro bearer-lag-member*             bearer-svc:bearer-ref
        +--ro sync-phy-capable?              boolean
        +--rw sync-phy-enabled?              boolean
        +--rw sync-phy-type?                 identityref
        +--rw provider-location-reference?   string
        +--rw customer-point
        |  +--rw identified-by?   identityref
        |  +--rw device
        |  |  +--rw device-id?   string
        |  |  +--rw location
        |  |     +--rw name?           string
        |  |     +--rw address?        string
        |  |     +--rw city?           string
        |  |     +--rw postal-code?    string
        |  |     +--rw state?          string
        |  |     +--rw country-code?   string
        |  +--rw site
        |  |  +--rw site-id?    string
        |  |  +--rw location
        |  |     +--rw name?           string
        |  |     +--rw address?        string
        |  |     +--rw city?           string
        |  |     +--rw postal-code?    string
        |  |     +--rw state?          string
        |  |     +--rw country-code?   string
        |  +--rw custom-id?       string
        +--rw type?                          identityref
        +--rw test-only?                     empty
        +--ro bearer-reference?              string
        |       {ac-common:server-assigned-reference}?
        +--ro ac-svc-ref*
        |       ac-svc:attachment-circuit-reference
        +--rw requested-start?               yang:date-and-time
        +--rw requested-stop?                yang:date-and-time
        +--ro actual-start?                  yang:date-and-time
        +--ro actual-stop?                   yang:date-and-time
        +--rw status
           +--rw admin-status
           |  +--rw status?        identityref
           |  +--ro last-change?   yang:date-and-time
           +--ro oper-status
              +--ro status?        identityref
              +--ro last-change?   yang:date-and-time
]]></sourcecode>
        </figure>
        <t>In some deployments, a customer may first retrieve a list of available presence locations before placing an order for a bearer creation. The request is filtered based upon a customer name and an Autonomous System Number (ASN). The reserved value "AS 0" <xref target="RFC7607"/> is used for customers with no ASN. The retrieved location names may then be referenced in a bearer creation request ('provider-location-reference'). See the example provided in <xref target="sec-ret-loc"/>.</t>
        <t>The same customer site (CE, SF, etc.) can terminate one or multiple bearers; each of them is uniquely identified by a reference that is assigned by the network provider. These bearers can terminate on the same or distinct network nodes. CEs that terminate multiple bearers are called multi-homed CEs.</t>
        <t>A bearer can be created, modified, or discovered from the network. For example, the following deployment options can be considered:</t>
        <dl spacing="normal" newline="false">
          <dt>Greenfield creation:</dt>
          <dd>
            <t>In this scenario, bearers are created from scratch using specific requests made to a network controller. This method  allows providers to tailor bearer creation to meet customer-specific needs. For example, a bearer request may indicate some hints about the placement constraints ('placement-constraints'). These constraints are used by a provider to determine how/where to terminate a bearer in the network side (e.g., Point of Presence (PoP) or PE selection).</t>
          </dd>
          <dt>Auto-discovery using network protocols:</dt>
          <dd>
            <t>Devices can use specific protocols (e.g., Link Layer Discovery Protocol (LLDP) <xref target="IEEE802.1AB"/>) to automatically discover and connect to available network resources. A network controller can use such reported information to expose discovered bearers from the network using the same bearer data model structure.</t>
          </dd>
        </dl>

        <t>A request to create a bearer may include a set of constraints ('placement-constraints') that are used by a controller to decide the network terminating side of a bearer (e.g., PE selection, PE redundancy, or PoP selection).
	Future placement criteria ('constraint-type') may be defined to accommodate specific deployment contexts. A request may also include some timing constraints ('requested-start', 'requested-stop') that are applicable for a set of bearers. The timing constraints can be adjusted at the 'bearer' level. These adjusted values take precedence over the global values.</t>
        <t>The descriptions of the bearer data nodes are as follows:</t>
        <dl spacing="normal" newline="false">
          <dt>'name':</dt>
          <dd>
            <t>Used to uniquely identify a bearer. This name is typically selected by the client when requesting a bearer.</t>
          </dd>
          <dt>'customer-name':</dt>
          <dd>
            <t>Indicates the name of the customer who ordered the bearer.</t>
          </dd>
          <dt>'description':</dt>
          <dd>
            <t>Includes a textual description of the bearer.</t>
          </dd>
          <dt>'group':</dt>
          <dd>
            <t>Tags a bearer with one or more identifiers that are used to group a set of bearers.</t>
          </dd>
          <dt>'op-comment':</dt>
          <dd>
            <t>Includes operational comments that may be useful for managing the bearer (building, level, etc.). No structure is associated with this data node to accommodate all deployments.</t>
          </dd>
          <dt>'bearer-parent-ref':</dt>
          <dd>
            <t>Specifies the parent bearer. This data node can be used, e.g., if a bearer is a member of a LAG.</t>
          </dd>
          <dt>'bearer-lag-member':</dt>
          <dd>
            <t>Lists the bearers that are members of a LAG. Members can be declared as part of a LAG using 'bearer-parent-ref'.</t>
          </dd>
          <dt>'sync-phy-capable':</dt>
          <dd>
            <t>Reports whether a synchronization physical (Sync PHY) mechanism is supported for this bearer.</t>
          </dd>
          <dt>'sync-phy-enabled':</dt>
          <dd>
            <t>Indicates whether a Sync PHY mechanism is enabled for a bearer. It only applies when 'sync-phy-capable' is set to 'true'.</t>
          </dd>
          <dt>'sync-phy-type':</dt>
          <dd>
            <t>Specifies the Sync PHY mechanism (e.g., SyncE <xref target="ITU-T-G.781"/>) enabled for the bearer.</t>
          </dd>
          <dt>'provider-location-reference':</dt>
          <dd>
            <t>Indicates a location identified by a provider-assigned reference.</t>
          </dd>
          <dt>'customer-point':</dt>
          <dd>
            <t>Specifies the customer termination point for the bearer. A bearer request can indicate a device, a site, a combination thereof, or custom information. All these schemes are supported in the model.</t>
          </dd>
          <dt>'type':</dt>
          <dd>
            <t>Specifies the bearer type (Ethernet, wireless, LAG, etc.).</t>
          </dd>
          <dt>'test-only':</dt>
          <dd>
            <t>Indicates that a request is only for test validation and not for enforcement, even if there are no errors. This is used for feasibility checks. This data node is applicable only when the data model is used with protocols that do not have built-in support of such option. For example, this data node is redundant with the "test-only" value of the <tt>&lt;test-option&gt;</tt> parameter in the NETCONF <tt>&lt;edit-config&gt;</tt> operation (<xref section="7.2" sectionFormat="of" target="RFC6241"/>).</t>
          </dd>
          <dt>'bearer-reference':</dt>
          <dd>
            <t>Returns an internal reference for the service provider to uniquely identify the bearer. This reference can be used when requesting services. <xref target="ex-create-bearer"/> provides an example about how this reference can be retrieved by a customer.</t>
            <t>Whether the 'bearer-reference' mirrors the content of the 'name' is deployment-specific. The module does not assume nor preclude such schemes.</t>
          </dd>
          <dt>'ac-svc-ref':</dt>
          <dd>
            <t>Specifies the set of ACs that are bound to the bearer.</t>
          </dd>
          <dt>'requested-start':</dt>
          <dd>
            <t>Specifies the requested date and time when the bearer is expected to be active.</t>
          </dd>
          <dt>'requested-stop':</dt>
          <dd>
            <t>Specifies the requested date and time when the bearer is expected to be disabled.</t>
          </dd>
          <dt>'actual-start':</dt>
          <dd>
            <t>Reports the actual date and time when the bearer was enabled.</t>
          </dd>
          <dt>'actual-stop':</dt>
          <dd>
            <t>Reports the actual date and time when the bearer was disabled.</t>
          </dd>
          <dt>'status':</dt>
          <dd>
            <t>Used to track the overall status of a given bearer. Both the operational and administrative status are maintained together with a timestamp.</t>
            <t>The 'admin-status' attribute is typically configured by a network operator to indicate whether the service is enabled, disabled, or subjected to additional testing or pre-deployment checks. These additional options, such as 'admin-testing' and 'admin-pre-deployment', provide the operators the flexibility to conduct additional validations on the bearer before deploying services over that connection.</t>
          </dd>
          <dt>'oper-status':</dt>
          <dd>
            <t>Reflects the operational state of a bearer as observed. As a bearer can contain multiple services, the operational status should only reflect the status of the bearer connection. To obtain network-level service status, specific network models, such as those in <xref section="7.3" sectionFormat="of" target="RFC9182"/>  or <xref section="7.3" sectionFormat="of" target="RFC9291"/>, should be consulted.</t>
            <t>It is important to note that the 'admin-status' attribute should remain independent of the 'oper-status'. In other words, the setting of the intended administrative state (e.g., 'admin-up' or 'admin-testing') <bcp14>MUST NOT</bcp14> be influenced by the current operational state. If the bearer is administratively set to 'admin-down', it is expected that the bearer will also be operationally 'op-down' as a result of this administrative decision.</t>
            <t>To assess the service delivery status for a given bearer comprehensively, it is recommended to consider both administrative and operational service status values in conjunction. This holistic approach  allows a network controller or operator to identify anomalies effectively.</t>
            <t>For instance, when a bearer is administratively enabled but the 'operational-status' of that bearer is reported as 'op-down', it should be expected that the 'oper-status' of services transported over that bearer is also down. These status values differing should trigger the detection of an anomaly condition.</t>
            <t>See "<xref target="RFC9181" format="title"/>" <xref target="RFC9181"/> for more details.</t>
          </dd>
        </dl>
      </section>
      <section anchor="the-attachment-circuit-service-ietf-ac-svc-yang-module">
        <name>The Attachment Circuit Service ("ietf-ac-svc") YANG Module</name>
        <t>The full tree diagram of the "ietf-ac-svc" module is provided in <xref target="AC-svc-Tree"/>. Subtrees are provided in the following subsections
for the reader's convenience.</t>
        <section anchor="overall-structure">
          <name>Overall Structure</name>
          <t>The overall tree structure of the AC service module is shown in <xref target="o-svc-tree"/>.</t>
          <figure anchor="o-svc-tree">
            <name>Overall AC Service Tree Structure</name>
            <sourcecode type="yangtree"><![CDATA[
  +--rw specific-provisioning-profiles
  |  ...
  +--rw service-provisioning-profiles
  |  ...
  +--rw attachment-circuits
     +--rw ac-group-profile* [name]
     |  ...
     +--rw placement-constraints
     |  ...
     +--rw ac* [name]
        ...
        +--rw l2-connection  {ac-common:layer2-ac}?
        |  ...
        +--rw ip-connection  {ac-common:layer3-ac}?
        |  ...
        +--rw routing-protocols
        |  ...
        +--rw oam
        |  ...
        +--rw security
        |  ...
        +--rw service
           ...
]]></sourcecode>
          </figure>
          <t>The rationale for deciding whether a reusable grouping is included in this document or moved into the AC common module <xref target="RFC9833"/> is as follows:</t>
          <ul spacing="normal">
            <li>
              <t>Groupings that are reusable among the AC service module, AC network module, and other service models and network models are included in the AC common module.</t>
            </li>
            <li>
              <t>Groupings that are reusable only by other service models are maintained in the "ietf-ac-svc" module.</t>
            </li>
          </ul>
          <t>Each AC is identified with a unique name ('../ac/name') within a domain. The mapping between this AC and a local PE that terminates the AC is hidden to the application that makes use of the AC service model. This information is internal to the network controller. As such, the details about the (node-specific) attachment interfaces are not exposed in this service model.</t>
          <t>The AC service model uses groupings and types defined in the AC common model <xref target="RFC9833"/> ('op-instructions', 'dot1q', 'qinq', 'priority-tagged', 'l2-tunnel-service', etc.). Therefore, the descriptions of these nodes are not reiterated in the following subsections.</t>
          <t>Features are used to tag conditional portions of the model in order to accommodate  various deployments (support of layer 2 ACs, Layer 3 ACs, IPv4, IPv6, routing protocols,  Bidirectional Forwarding Detection (BFD), etc.).</t>
        </section>
        <section anchor="sec-profiles">
          <name>Service Profiles</name>
          <section anchor="sec-profiles-desc">
            <name>Description</name>
            <t>The 'specific-provisioning-profiles' container (<xref target="gp-svc-tree"/>) can be used by a service provider to maintain a set of reusable profiles. The profiles definitions are similar to those defined in <xref target="RFC9181"/>, including: Quality of Service (QoS), BFD, forwarding, and routing profiles. The exact definition of the profiles is local to each service provider. The model only includes an identifier for these profiles in order to facilitate identifying and binding local policies when building an AC.</t>
            <figure anchor="gp-svc-tree">
              <name>Service Profiles</name>
              <sourcecode type="yangtree"><![CDATA[
module: ietf-ac-svc
  +--rw specific-provisioning-profiles
  |  +--rw valid-provider-identifiers
  |     +--rw encryption-profile-identifier* [id]
  |     |  +--rw id    string
  |     +--rw qos-profile-identifier* [id]
  |     |  +--rw id    string
  |     +--rw failure-detection-profile-identifier* [id]
  |     |  +--rw id    string
  |     +--rw forwarding-profile-identifier* [id]
  |     |  +--rw id    string
  |     +--rw routing-profile-identifier* [id]
  |        +--rw id    string
  +--rw service-provisioning-profiles
  |  +--rw service-profile-identifier* [id]
  |     +--rw id    string
  +--rw attachment-circuits
     +--rw ac-group-profile* [name]
     |  ...
     +--rw placement-constraints
     |  ...
     +--rw ac* [name]
        ...
        +--rw l2-connection  {ac-common:layer2-ac}? 
        |  ...
        +--rw ip-connection  {ac-common:layer3-ac}?
        |  ...
        +--rw routing-protocols
        |  ...
        +--rw oam
        |  ...
        +--rw security
        |  ...
        +--rw service
           ...
]]></sourcecode>
            </figure>
            <t>As shown in <xref target="gp-svc-tree"/>, two profile types can be defined: 'specific-provisioning-profiles' and 'service-provisioning-profiles'. Whether only specific profiles, service profiles, or a combination thereof are used is local to each service provider.</t>
            <t>The following specific provisioning profiles can be defined as follows:</t>
            <dl spacing="normal" newline="false">
              <dt>'encryption-profile-identifier':</dt>
              <dd>
                <t>Refers to a set of policies related to the encryption setup that can be applied when provisioning an AC.</t>
              </dd>
              <dt>'qos-profile-identifier':</dt>
              <dd>
                <t>Refers to a set of policies, such as classification, marking, and actions (e.g., <xref target="RFC3644"/>).</t>
              </dd>
              <dt>'failure-detection-profile-identifier':</dt>
              <dd>
                <t>Refers to a set of failure detection policies (e.g., BFD policies <xref target="RFC5880"/>) that can be invoked when building an AC.</t>
              </dd>
              <dt>'forwarding-profile-identifier':</dt>
              <dd>
                <t>Refers to the policies that apply to the forwarding of packets conveyed within an AC. Such policies may consist, for example, of applying Access Control Lists (ACLs).</t>
              </dd>
              <dt>'routing-profile-identifier':</dt>
              <dd>
                <t>Refers to a set of routing policies that will be invoked (e.g., BGP policies) when building an AC.</t>
              </dd>
            </dl>
          </section>
          <section anchor="referencing-servicespecific-profiles">
            <name>Referencing Service/Specific Profiles</name>
            <t>All the above mentioned profiles are uniquely identified by the provider server. To ease referencing these profiles by other data models, specific typedefs are defined for each of these profiles. Likewise, an AC reference typedef is defined when referencing a (global) AC by its name is required. These typedefs <bcp14>SHOULD</bcp14> be used when other modules need a reference to one of these profiles or ACs.</t>
          </section>
        </section>
        <section anchor="sec-acp">
          <name>Attachment Circuits Profiles</name>
          <t>The 'ac-group-profile' defines reusable parameters for a set of ACs. Each profile is identified by 'name'. Some of the data nodes can be adjusted at the 'ac' level.
These adjusted values take precedence over the global values.  The structure of 'ac-group-profile' is similar to the one used to model each 'ac' (<xref target="ac-svc-tree"/>).</t>
        </section>
        <section anchor="sec-pc">
          <name>AC Placement Constraints</name>
          <t>The 'placement-constraints' specifies the placement constraints of an AC. For example, this container can be used to request avoidance of connecting two ACs to the same PE. The full set of supported constraints is defined in <xref target="RFC9181"/> (see 'placement-diversity', in particular).</t>
          <t>The structure of 'placement-constraints' is shown in <xref target="precedence-tree"/>.</t>
          <figure anchor="precedence-tree">
            <name>Placement Constraints Subtree Structure</name>
            <sourcecode type="yangtree"><![CDATA[
  +--rw specific-provisioning-profiles
  |  ...
  +--rw service-provisioning-profiles
  |  ...
  +--rw attachment-circuits
     +--rw ac-group-profile* [name] 
     |  ...                                
     +--rw placement-constraints
     |  +--rw constraint* [constraint-type]
     |     +--rw constraint-type    identityref
     |     +--rw target
     |        +--rw (target-flavor)?
     |           +--:(id)
     |           |  +--rw group* [group-id]
     |           |     +--rw group-id    string
     |           +--:(all-accesses)
     |           |  +--rw all-other-accesses?   empty
     |           +--:(all-groups)
     |              +--rw all-other-groups?     empty
     +--rw ac* [name]
        ...
]]></sourcecode>
          </figure>
        </section>
        <section anchor="attachment-circuits">
          <name>Attachment Circuits</name>
          <t>The structure of 'attachment-circuits' is shown in <xref target="ac-svc-tree"/>.</t>
          <figure anchor="ac-svc-tree">
            <name>Attachment Circuits Tree Structure</name>
            <sourcecode type="yangtree"><![CDATA[
  +--rw specific-provisioning-profiles
  |  ...
  +--rw service-provisioning-profiles
  |  ...
  +--rw attachment-circuits
     +--rw ac-group-profile* [name]
     |  ...
     +--rw placement-constraints
     |  ...
     +--rw customer-name?           string
     +--rw requested-start?         yang:date-and-time
     +--rw requested-stop?          yang:date-and-time
     +--ro actual-start?            yang:date-and-time
     +--ro actual-stop?             yang:date-and-time
     +--rw ac* [name]
        +--rw customer-name?       string
        +--rw description?         string
        +--rw test-only?           empty
        +--rw requested-start?     yang:date-and-time
        +--rw requested-stop?      yang:date-and-time
        +--ro actual-start?        yang:date-and-time
        +--ro actual-stop?         yang:date-and-time
        +--rw role?                identityref
        +--rw peer-sap-id*         string
        +--rw group-profile-ref*    ac-group-reference
        +--rw parent-ref*       ac-svc:attachment-circuit-reference
        +--ro child-ref*        ac-svc:attachment-circuit-reference
        +--rw group* [group-id]
        |  +--rw group-id      string
        |  +--rw precedence?   identityref
        +--ro service-ref* [service-type service-id]
        |  +--ro service-type    identityref
        |  +--ro service-id      string
        +--ro server-reference?    string
        |       {ac-common:server-assigned-reference}?
        +--rw name                 string
        +--rw service-profile*     service-profile-reference     
        +--rw l2-connection  {ac-common:layer2-ac}?
        |  ...
        +--rw ip-connection  {ac-common:layer3-ac}?
        |  ...
        +--rw routing-protocols
        |  ...
        +--rw oam
        |  ...
        +--rw security
        |  ...
        +--rw service
           ...
]]></sourcecode>
          </figure>
          <t>A request may also include some timing constraints ('requested-start', 'requested-stop') that are applicable for a set of ACs. The timing constraints can be adjusted at the 'ac' level. These adjusted values take precedence over the global values.</t>
          <t>The 'ac' data nodes are described as follows:</t>
          <dl spacing="normal" newline="false">
            <dt>'customer-name':</dt>
            <dd>
              <t>Indicates the name of the customer who ordered the AC or a set of ACs.</t>
            </dd>
            <dt>'description':</dt>
            <dd>
              <t>Includes a textual description of the AC.</t>
            </dd>
            <dt>'test-only':</dt>
            <dd>
              <t>Indicates that a request is only for a validation test and not for enforcement, even if there are no errors. This is used for feasibility checks. This data node is applicable only when the data model is used with protocols that do not have built-in support of such option.</t>
            </dd>
            <dt>'requested-start':</dt>
            <dd>
              <t>Specifies the requested date and time when the AC is expected to be active.</t>
            </dd>
            <dt>'requested-stop':</dt>
            <dd>
              <t>Specifies the requested date and time when the AC is expected to be disabled.</t>
            </dd>
            <dt>'actual-start':</dt>
            <dd>
              <t>Reports the actual date and time when the AC was enabled.</t>
            </dd>
            <dt>'actual-stop':</dt>
            <dd>
              <t>Reports the actual date and time when the AC was disabled.</t>
            </dd>
            <dt>'role':</dt>
            <dd>
              <t>Specifies whether an AC is used, e.g., as User-to-Network Interface (UNI) or Network-to-Network Interface (NNI).</t>
            </dd>
            <dt>'peer-sap-id':</dt>
            <dd>
              <t>Includes references to the remote endpoints of an AC <xref target="RFC9408"/>. 'peer' is drawn here from the perspective of the provider network. That is, a 'peer-sap' will refer to a customer node.</t>
            </dd>
            <dt>'group-profile-ref':</dt>
            <dd>
              <t>Indicates references to one or more profiles that are defined in <xref target="sec-acp"/>.</t>
            </dd>
            <dt>'parent-ref':</dt>
            <dd>
              <t>Specifies an AC that is inherited by an AC.</t>
              <t>In contexts where dynamic termination points are managed for a given AC,
a Parent AC can be defined with a set of stable and common information, while
Child ACs are defined to track dynamic information. These Child ACs are bound to the Parent AC, which is exposed to services (as a stable reference).</t>
              <t>Whenever a Parent AC is deleted, all its Child ACs <bcp14>MUST</bcp14> be deleted.</t>
              <t>A Child AC <bcp14>MAY</bcp14> rely upon more than one Parent AC (e.g., parent Layer 2 AC and parent Layer 3 AC). In such cases, these ACs <bcp14>MUST NOT</bcp14> be overlapping. An example to illustrate the use of multiple Parent ACs is provided in  <xref target="sec-bfd-static"/>.</t>
            </dd>
            <dt>'child-ref':</dt>
            <dd>
              <t>Lists one or more references of Child ACs that rely upon this AC as a Parent AC.</t>
            </dd>
            <dt>'group':</dt>
            <dd>
              <t>Lists the groups to which an AC belongs <xref target="RFC9181"/>. For example, the 'group-id' is used to associate redundancy or protection constraints of ACs. An example is provided in <xref target="sec-ex-prec"/>.</t>
            </dd>
            <dt>'service-ref':</dt>
            <dd>
              <t>Reports the set of services that are bound to the AC. The services are indexed by their type.</t>
            </dd>
            <dt>'server-reference':</dt>
            <dd>
              <t>Reports the internal reference that is assigned by the provider for this AC. This reference is used to accommodate deployment contexts (e.g., <xref section="9.1.2" sectionFormat="of" target="RFC8921"/>) where an identifier is generated by the provider to identify a service order locally.</t>
            </dd>
            <dt>'name':</dt>
            <dd>
              <t>Associates a name that uniquely identifies an AC within a service provider network.</t>
            </dd>
            <dt>'service-profile':</dt>
            <dd>
              <t>References a set of service-specific profiles.</t>
            </dd>
            <dt>'l2-connection':</dt>
            <dd>
              <t>See <xref target="sec-l2"/>.</t>
            </dd>
            <dt>'ip-connection':</dt>
            <dd>
              <t>See <xref target="sec-l3"/>.</t>
            </dd>
            <dt>'routing':</dt>
            <dd>
              <t>See <xref target="sec-rtg"/>.</t>
            </dd>
            <dt>'oam':</dt>
            <dd>
              <t>See <xref target="sec-oam"/>.</t>
            </dd>
            <dt>'security':</dt>
            <dd>
              <t>See <xref target="sec-sec"/>.</t>
            </dd>
            <dt>'service':</dt>
            <dd>
              <t>See <xref target="sec-bw"/>.</t>
            </dd>
          </dl>
          <section anchor="sec-l2">
            <name>Layer 2 Connection Structure</name>
            <t>The 'l2-connection' container (<xref target="l2-svc-tree"/>) is used to configure the relevant Layer 2 properties of an AC, including encapsulation details and tunnel terminations. For the encapsulation details, the model supports the definition of the type as well as the identifiers (e.g., VLAN-IDs) of each of the encapsulation-type defined. For the second case, attributes for pseudowire, Virtual Private LAN Service (VPLS), and  Virtual eXtensible Local Area Network (VXLAN) tunnel terminations are included.</t>
            <t>'bearer-reference' is used to link an AC with a bearer over which the AC is instantiated.</t>
            <t>This structure relies upon the common groupings defined in <xref target="RFC9833"/>.</t>
            <figure anchor="l2-svc-tree">
              <name>Layer 2 Connection Tree Structure</name>
              <sourcecode type="yangtree"><![CDATA[
  +--rw specific-provisioning-profiles
  |  ...
  +--rw service-provisioning-profiles
  |  ...
  +--rw attachment-circuits
     +--rw ac-group-profile* [name]
     |  ...
     +--rw placement-constraints
     |  ...
     +--rw ac* [name]
        ...
        +--rw name                 string
        +--rw l2-connection  {ac-common:layer2-ac}?
        |  +--rw encapsulation
        |  |  +--rw type?              identityref
        |  |  +--rw dot1q
        |  |  |  +--rw tag-type?   identityref
        |  |  |  +--rw cvlan-id?   uint16
        |  |  +--rw priority-tagged
        |  |  |  +--rw tag-type?   identityref
        |  |  +--rw qinq
        |  |     +--rw tag-type?   identityref
        |  |     +--rw svlan-id?   uint16
        |  |     +--rw cvlan-id?   uint16
        |  +--rw (l2-service)?
        |  |  +--:(l2-tunnel-service)
        |  |  |  +--rw l2-tunnel-service
        |  |  |     +--rw type?         identityref
        |  |  |     +--rw pseudowire
        |  |  |     |  +--rw vcid?      uint32
        |  |  |     |  +--rw far-end?   union
        |  |  |     +--rw vpls
        |  |  |     |  +--rw vcid?      uint32
        |  |  |     |  +--rw far-end*   union
        |  |  |     +--rw vxlan
        |  |  |        +--rw vni-id?            uint32
        |  |  |        +--rw peer-mode?         identityref
        |  |  |        +--rw peer-ip-address*   inet:ip-address
        |  |  +--:(l2vpn)
        |  |     +--rw l2vpn-id?            vpn-common:vpn-id
        |  +--rw bearer-reference?          string
        |          {vpn-common:bearer-reference}?
        +--rw ip-connection  {ac-common:layer3-ac}?
        |  ...
        +--rw routing-protocols
        |  ...
        +--rw oam
        |  ...
        +--rw security
        |  ...
        +--rw service
           ...
]]></sourcecode>
            </figure>
          </section>
          <section anchor="sec-l3">
            <name>IP Connection Structure</name>
            <t>The 'ip-connection' container is used to configure the relevant IP properties of an AC. The model supports the usage of dynamic and static addressing. This structure relies upon the common groupings defined in <xref section="4.3" sectionFormat="of" target="RFC9833"/>. Both IPv4 and IPv6 parameters are supported.</t>
            <t>For ACs that require Layer 3 tunnel establishment, the ACaaS includes a provision for future augmentations to define
tunnel-specific data nodes ('l3-tunnel-service'). Such augmentations <bcp14>MUST</bcp14> be conditional based on the tunnel type ('type').</t>
            <t><xref target="ipv4-svc-tree"/> shows the structure of the IPv4 connection.</t>
            <figure anchor="ipv4-svc-tree">
              <name>Layer 3 Connection Tree Structure (IPv4)</name>
              <sourcecode type="yangtree"><![CDATA[
        | ...
        +--rw ip-connection {ac-common:layer3-ac}?
        |  +--rw ipv4 {vpn-common:ipv4}?
        |  |  +--rw local-address?
        |  |  |       inet:ipv4-address
        |  |  +--rw virtual-address?
        |  |  |       inet:ipv4-address
        |  |  +--rw prefix-length?                           uint8
        |  |  +--rw address-allocation-type?
        |  |  |       identityref
        |  |  +--rw (allocation-type)?
        |  |     +--:(dynamic)
        |  |     |  +--rw (address-assign)?
        |  |     |  |  +--:(number)
        |  |     |  |  |  +--rw number-of-dynamic-address?   uint16
        |  |     |  |  +--:(explicit)
        |  |     |  |     +--rw customer-addresses
        |  |     |  |        +--rw address-pool* [pool-id]
        |  |     |  |           +--rw pool-id          string
        |  |     |  |           +--rw start-address
        |  |     |  |           |       inet:ipv4-address
        |  |     |  |           +--rw end-address?
        |  |     |  |                   inet:ipv4-address
        |  |     |  +--rw (provider-dhcp)?
        |  |     |  |  +--:(dhcp-service-type)
        |  |     |  |     +--rw dhcp-service-type?
        |  |     |  |             enumeration
        |  |     |  +--rw (dhcp-relay)?
        |  |     |     +--:(customer-dhcp-servers)
        |  |     |        +--rw customer-dhcp-servers
        |  |     |           +--rw server-ip-address*
        |  |     |                   inet:ipv4-address
        |  |     +--:(static-addresses)
        |  |        +--rw address* [address-id]
        |  |           +--rw address-id          string
        |  |           +--rw customer-address?   inet:ipv4-address
        |  |           +--rw failure-detection-profile?
        |  |                   failure-detection-profile-reference
        |  |                   {vpn-common:bfd}?
        |  +--rw ipv6 {vpn-common:ipv6}?
        |  |  ...
        |  +--rw (l3-service)?
        |     +--:(l3-tunnel-service)
        |        +--rw l3-tunnel-service
        |           +--rw type?   identityref
]]></sourcecode>
            </figure>
            <t><xref target="ipv6-svc-tree"/> shows the structure of the IPv6 connection.</t>
            <figure anchor="ipv6-svc-tree">
              <name>Layer 3 Connection Tree Structure (IPv6)</name>
              <sourcecode type="yangtree"><![CDATA[
        | ...
        +--rw ip-connection  {ac-common:layer3-ac}?
        |  +--rw ipv4 {vpn-common:ipv4}?
        |  |  ...
        |  +--rw ipv6 {vpn-common:ipv6}?
        |  |  +--rw local-address?
        |  |  |       inet:ipv6-address
        |  |  +--rw virtual-address?
        |  |  |       inet:ipv6-address
        |  |  +--rw prefix-length?                           uint8
        |  |  +--rw address-allocation-type?
        |  |  |       identityref
        |  |  +--rw (allocation-type)?
        |  |     +--:(dynamic)
        |  |     |  +--rw (address-assign)?
        |  |     |  |  +--:(number)
        |  |     |  |  |  +--rw number-of-dynamic-address?   uint16
        |  |     |  |  +--:(explicit)
        |  |     |  |     +--rw customer-addresses
        |  |     |  |        +--rw address-pool* [pool-id]
        |  |     |  |           +--rw pool-id          string
        |  |     |  |           +--rw start-address
        |  |     |  |           |       inet:ipv6-address
        |  |     |  |           +--rw end-address? 
        |  |     |  |                   inet:ipv6-address
        |  |     |  +--rw (provider-dhcp)?
        |  |     |  |  +--:(dhcp-service-type)
        |  |     |  |     +--rw dhcp-service-type?
        |  |     |  |             enumeration
        |  |     |  +--rw (dhcp-relay)?
        |  |     |     +--:(customer-dhcp-servers)
        |  |     |        +--rw customer-dhcp-servers
        |  |     |           +--rw server-ip-address*
        |  |     |                   inet:ipv6-address
        |  |     +--:(static-addresses)
        |  |        +--rw address* [address-id]
        |  |           +--rw address-id          string
        |  |           +--rw customer-address?   inet:ipv6-address
        |  |           +--rw failure-detection-profile?
        |  |                   failure-detection-profile-reference
        |  |                   {vpn-common:bfd}?
        |  +--rw (l3-service)?
        |     +--:(l3-tunnel-service)
        |        +--rw l3-tunnel-service
        |           +--rw type?   identityref
        | ...
]]></sourcecode>
            </figure>
          </section>
          <section anchor="sec-rtg">
            <name>Routing</name>
            <t>As shown in the tree depicted in <xref target="rtg-svc-tree"/>, the 'routing-protocols' container defines the required parameters to enable the desired routing features for an AC. One or more routing protocols can be associated with an AC.  Such routing protocols will then be enabled between a PE and the customer termination points. Each routing instance is uniquely identified by the combination of the 'id' and 'type' to accommodate scenarios where multiple instances of the same routing protocol have to be configured on the same link.</t>
            <t>In addition to static routing (<xref target="sec-static-rtg"/>), the module supports BGP (<xref target="sec-bgp-rtg"/>), OSPF (<xref target="sec-ospf-rtg"/>), IS-IS (<xref target="sec-isis-rtg"/>), and RIP (<xref target="sec-rip-rtg"/>). It also includes a reference to the 'routing-profile-identifier' defined in <xref target="sec-profiles"/>, so that additional constraints can be applied to a specific instance of each routing protocol. Moreover, the module supports VRRP (<xref target="sec-vrrp-rtg"/>).</t>
            <figure anchor="rtg-svc-tree">
              <name>Routing Tree Structure</name>
              <sourcecode type="yangtree"><![CDATA[
  +--rw specific-provisioning-profiles
  |  ...
  +--rw service-provisioning-profiles
  |  ...
  +--rw attachment-circuits
     +--rw ac-group-profile* [name]
     |  ...
     +--rw placement-constraints
     |  ...
     +--rw ac* [name]
        ...
        +--rw l2-connection  {ac-common:layer2-ac}?
        | ...
        +--rw ip-connection  {ac-common:layer3-ac}?
        |  ...
        +--rw routing-protocols
        |  +--rw routing-protocol* [id]
        |     +--rw id                  string
        |     +--rw type?               identityref
        |     +--rw routing-profiles* [id]
        |     |  +--rw id      routing-profile-reference
        |     |  +--rw type?   identityref
        |     +--rw static
        |     |  ...
        |     +--rw bgp {vpn-common:rtg-bgp}?
        |     |  ...
        |     +--rw ospf {vpn-common:rtg-ospf}?
        |     |  ...
        |     +--rw isis {vpn-common:rtg-isis}?
        |     |  ...
        |     +--rw rip {vpn-common:rtg-rip}?
        |     |  ...
        |     +--rw vrrp {vpn-common:rtg-vrrp}?
        |        ...
        +--rw oam
        |  ...
        +--rw security
        |  ...
        +--rw service
           ...
]]></sourcecode>
            </figure>
            <section anchor="sec-static-rtg">
              <name>Static Routing</name>
              <t>The static tree structure is shown in <xref target="static-rtg-svc-tree"/>.</t>
              <figure anchor="static-rtg-svc-tree">
                <name>Static Routing Tree Structure</name>
                <sourcecode type="yangtree"><![CDATA[
        |  ...
        +--rw routing-protocols
        |  +--rw routing-protocol* [id]
        |     +--rw id                  string
        |     +--rw type?               identityref
        |     +--rw routing-profiles* [id]
        |     |  +--rw id      routing-profile-reference
        |     |  +--rw type?   identityref
        |     +--rw static
        |     |  +--rw cascaded-lan-prefixes
        |     |     +--rw ipv4-lan-prefix* [lan next-hop]
        |     |     |       {vpn-common:ipv4}?
        |     |     |  +--rw lan
        |     |     |  |       inet:ipv4-prefix
        |     |     |  +--rw lan-tag?                     string
        |     |     |  +--rw next-hop                     union
        |     |     |  +--rw metric?                      uint32
        |     |     |  +--rw failure-detection-profile?
        |     |     |  |       failure-detection-profile-reference
        |     |     |  |       {vpn-common:bfd}?
        |     |     |  +--rw status
        |     |     |     +--rw admin-status
        |     |     |     |  +--rw status?        identityref
        |     |     |     |  +--ro last-change?   yang:date-and-time
        |     |     |     +--ro oper-status
        |     |     |        +--ro status?        identityref
        |     |     |        +--ro last-change?   yang:date-and-time
        |     |     +--rw ipv6-lan-prefix* [lan next-hop]
        |     |             {vpn-common:ipv6}?
        |     |        +--rw lan
        |     |        |       inet:ipv6-prefix
        |     |        +--rw lan-tag?                     string
        |     |        +--rw next-hop                     union
        |     |        +--rw metric?                      uint32
        |     |        +--rw failure-detection-profile?
        |     |        |       failure-detection-profile-reference
        |     |        |       {vpn-common:bfd}?
        |     |        +--rw status
        |     |           +--rw admin-status
        |     |           |  +--rw status?        identityref
        |     |           |  +--ro last-change?   yang:date-and-time
        |     |           +--ro oper-status
        |     |              +--ro status?        identityref
        |     |              +--ro last-change?   yang:date-and-time
        |     +--rw bgp {vpn-common:rtg-bgp}?
        |     |  ...
        |     +--rw ospf {vpn-common:rtg-ospf}?
        |     |  ...
        |     +--rw isis {vpn-common:rtg-isis}?
        |     |  ...
        |     +--rw rip {vpn-common:rtg-rip}?
        |     |  ...
        |     +--rw vrrp {vpn-common:rtg-vrrp}?
        |        ...
]]></sourcecode>
              </figure>
              <t>As depicted in <xref target="static-rtg-svc-tree"/>, the following data nodes can be defined for a given IP prefix:</t>
              <dl spacing="normal" newline="false">
                <dt>'lan-tag':</dt>
                <dd>
                  <t>Indicates a local tag (e.g., "myfavorite-lan") that is used to enforce local policies.</t>
                </dd>
                <dt>'next-hop':</dt>
                <dd>
                  <t>Indicates the next hop to be used for the static route.</t>
                  <t>It can be identified by an IP address, a predefined next-hop type (e.g., 'discard' or 'local-link'), etc.</t>
                </dd>
                <dt>'metric':</dt>
                <dd>
                  <t>Indicates the metric associated with the static route entry. This metric is used when the route is exported into an IGP.</t>
                </dd>
                <dt>'failure-detection-profile':</dt>
                <dd>
                  <t>Indicates a failure detection profile (e.g., BFD) that applies for this entry.</t>
                </dd>
                <dt>'status':</dt>
                <dd>
                  <t>Used to convey the status of a static route entry. This data node can also be used to control the (de)activation of individual static route entries.</t>
                </dd>
              </dl>

            </section>
            <section anchor="sec-bgp-rtg">
              <name>BGP</name>
              <t>An AC service activation with BGP routing <xref target="RFC4271"/> <bcp14>SHOULD</bcp14> include at least the customer's AS Number (ASN) and the provider's ASN.
Additional information can be supplied by a customer in a request or exposed by a provider in a response to a query request
in order to ease the process of automating the provisioning of BGP sessions (the customer does not use the primary IP address
to establish the underlying BGP session, communicate the provider's IP address used to establish the BGP session,
share authentication parameters, bind the session to a forwarding protection profile, etc.).</t>
              <t>The BGP tree structure is shown in <xref target="bgp-rtg-svc-tree"/>.</t>
              <figure anchor="bgp-rtg-svc-tree">
                <name>BGP Tree Structure</name>
                <sourcecode type="yangtree"><![CDATA[
        |  ...
        +--rw routing-protocols
        |  +--rw routing-protocol* [id]
        |     +--rw id                  string
        |     +--rw type?               identityref
        |     +--rw routing-profiles* [id]
        |     |  +--rw id      routing-profile-reference
        |     |  +--rw type?   identityref
        |     +--rw static
        |     |  ...
        |     +--rw bgp {vpn-common:rtg-bgp}?
        |     |  +--rw peer-groups
        |     |  |  +--rw peer-group* [name]
        |     |  |     +--rw name              string
        |     |  |     +--rw local-as?         inet:as-number
        |     |  |     +--rw peer-as?          inet:as-number
        |     |  |     +--rw address-family?   identityref
        |     |  |     +--rw role?             identityref
        |     |  |     +--rw local-address?    inet:ip-address
        |     |  |     +--rw bgp-max-prefix
        |     |  |     |  +--rw max-prefix?   uint32
        |     |  |     +--rw authentication
        |     |  |        +--rw enabled?           boolean
        |     |  |        +--rw keying-material
        |     |  |           +--rw (option)?
        |     |  |              +--:(ao)
        |     |  |              |  +--rw enable-ao?          boolean
        |     |  |              |  +--rw ao-keychain?
        |     |  |              |          key-chain:key-chain-ref
        |     |  |              +--:(md5)
        |     |  |              |  +--rw md5-keychain?
        |     |  |              |          key-chain:key-chain-ref
        |     |  |              +--:(explicit)
        |     |  |                 +--rw key-id?             uint32
        |     |  |                 +--rw key?                string
        |     |  |                 +--rw crypto-algorithm?
        |     |  |                         identityref
        |     |  +--rw neighbor* [id]
        |     |     +--rw id                  string
        |     |     +--ro server-reference?   string
        |     |     |       {ac-common:server-assigned-reference}?
        |     |     +--rw remote-address?     inet:ip-address
        |     |     +--rw local-address?      inet:ip-address
        |     |     +--rw local-as?           inet:as-number
        |     |     +--rw peer-as?            inet:as-number
        |     |     +--rw address-family?     identityref
        |     |     +--rw role?               identityref
        |     |     +--rw bgp-max-prefix
        |     |     |  +--rw max-prefix?   uint32
        |     |     +--rw authentication
        |     |     |  +--rw enabled?           boolean
        |     |     |  +--rw keying-material
        |     |     |     +--rw (option)?
        |     |     |        +--:(ao)
        |     |     |        |  +--rw enable-ao?          boolean
        |     |     |        |  +--rw ao-keychain?
        |     |     |        |          key-chain:key-chain-ref
        |     |     |        +--:(md5)
        |     |     |        |  +--rw md5-keychain?
        |     |     |        |          key-chain:key-chain-ref
        |     |     |        +--:(explicit)
        |     |     |           +--rw key-id?             uint32
        |     |     |           +--rw key?                string
        |     |     |           +--rw crypto-algorithm?   identityref
        |     |     +--rw requested-start?    yang:date-and-time
        |     |     +--rw requested-stop?     yang:date-and-time
        |     |     +--ro actual-start?       yang:date-and-time
        |     |     +--ro actual-stop?        yang:date-and-time
        |     |     +--rw status
        |     |     |  +--rw admin-status
        |     |     |  |  +--rw status?        identityref
        |     |     |  |  +--ro last-change?   yang:date-and-time
        |     |     |  +--ro oper-status
        |     |     |     +--ro status?        identityref
        |     |     |     +--ro last-change?   yang:date-and-time
        |     |     +--rw peer-group?
        |     |     |       -> ../../peer-groups/peer-group/name
        |     |     +--rw failure-detection-profile? 
        |     |                   failure-detection-profile-reference
        |     |                   {vpn-common:bfd}?
        |     +--rw ospf {vpn-common:rtg-ospf}?
        |     |  ...
        |     +--rw isis {vpn-common:rtg-isis}?
        |     |  ...
        |     +--rw rip {vpn-common:rtg-rip}?
        |     |  ...
        |     +--rw vrrp {vpn-common:rtg-vrrp}?
        |        ...
]]></sourcecode>
              </figure>
              <t>For deployment cases where an AC service request includes a list of neighbors with redundant information,
the ACaaS allows factorizing shared data by means of 'peer-group'. Thus, the presence of 'peer-groups' in a service request is optional.</t>
              <t>The following data nodes are supported for each BGP 'peer-group':</t>
              <dl spacing="normal" newline="false">
                <dt>'name':</dt>
                <dd>
                  <t>Defines a name for the peer group.</t>
                </dd>
                <dt>'local-as':</dt>
                <dd>
                  <t>Reports the provider's ASN. This information is used at the customer side to configure the BGP session with the provider network.</t>
                </dd>
                <dt>'peer-as':</dt>
                <dd>
                  <t>Indicates the customer's ASN. This information is used at the provider side to configure the BGP session with the customer equipment.</t>
                </dd>
                <dt>'address-family':</dt>
                <dd>
                  <t>Indicates the address family of the peer. It can be set to 'ipv4', 'ipv6', or 'dual-stack'.</t>
                  <t>This address family might be used together with the service type that uses an AC (e.g., 'vpn-type' <xref target="RFC9182"/>) to derive the appropriate Address Family Identifiers (AFIs) / Subsequent Address Family Identifiers (SAFIs) that will be part of the derived device configurations (e.g., unicast IPv4 MPLS L3VPN (AFI,SAFI = 1,128) as defined in <xref section="4.3.4" sectionFormat="of" target="RFC4364"/>).</t>
                </dd>
                <dt>'role':</dt>
                <dd>
                  <t>Specifies the BGP role in a session. Role values are taken from the list defined in <xref section="4" sectionFormat="of" target="RFC9234"/>. This parameter is useful for interconnection scenarios.</t>
                  <t>This is an optional parameter.</t>
                </dd>
                <dt>'local-address':</dt>
                <dd>
                  <t>Reports a provider's IP address to use to establish the BGP transport session.</t>
                </dd>
                <dt>'bgp-max-prefix':</dt>
                <dd>
                  <t>Indicates the maximum number of BGP prefixes allowed in a session for this group.</t>
                </dd>
                <dt>'authentication':</dt>
                <dd>
                  <t>The module adheres to the recommendations in <xref section="13.2" sectionFormat="of" target="RFC4364"/>, as it allows enabling the TCP Authentication Option (TCP-AO) <xref target="RFC5925"/> and accommodates the installed base that makes use of MD5.</t>
                  <t>Similar to <xref target="RFC9182"/>, this version of the ACaaS assumes that parameters specific to the TCP-AO are preconfigured as part of the key chain that is referenced in the ACaaS. No assumption is made about how such a key chain is preconfigured. However, the structure of the key chain should cover data nodes beyond those in "YANG Data Model for Key Chains" <xref target="RFC8177"/>, mainly SendID and RecvID (<xref section="3.1" sectionFormat="of" target="RFC5925"/>).</t>
                </dd>
              </dl>

              <t>For each neighbor, the following data nodes are supported in addition to similar parameters that are provided for a peer group:</t>
              <dl>
                <dt>'server-reference':</dt>
                <dd>
                  <t>Reports the internal reference that is assigned by the provider for this BGP session. This is an optional parameter.</t>
                </dd>
                <dt>'remote-address':</dt>
                <dd>
                  <t>Specifies the customer's IP address used to establish this BGP session. If not present, this means that the primary
customer IP address is used as the remote IP address.</t>
                </dd>
                <dt>'requested-start':</dt>
                <dd>
                  <t>Specifies the requested date and time when the BGP session is expected to be active.</t>
                </dd>
                <dt>'requested-stop':</dt>
                <dd>
                  <t>Specifies the requested date and time when the BGP session is expected to be disabled.</t>
                </dd>
                <dt>'actual-start':</dt>
                <dd>
                  <t>Reports the actual date and time when the BGP session was enabled.</t>
                </dd>
                <dt>'actual-stop':</dt>
                <dd>
                  <t>Reports the actual date and time when the BGP session was disabled.</t>
                </dd>
                <dt>'status':</dt>
                <dd>
                  <t>Indicates the status of the BGP routing instance.</t>
                </dd>
                <dt>'peer-group':</dt>
                <dd>
                  <t>Specifies a name of a peer group.</t>
                  <t>Parameters that are provided at the 'neighbor' level take precedence over the ones provided in the peer group.</t>
                  <t>This is an optional parameter.</t>
                </dd>
                <dt>'failure-detection-profile':</dt>
                <dd>
                  <t>Indicates a failure detection profile (BFD) that applies for a BGP neighbor. This is an optional parameter.</t>
                </dd>
              </dl>
            </section>
            <section anchor="sec-ospf-rtg">
              <name>OSPF</name>
              <t>The OSPF tree structure is shown in <xref target="ospf-rtg-svc-tree"/>.</t>
              <figure anchor="ospf-rtg-svc-tree">
                <name>OSPF Tree Structure</name>
                <sourcecode type="yangtree"><![CDATA[
        |  ...
        +--rw routing-protocols
        |  +--rw routing-protocol* [id]
        |     +--rw id                  string
        |     +--rw type?               identityref
        |     +--rw routing-profiles* [id]
        |     |  +--rw id      routing-profile-reference
        |     |  +--rw type?   identityref
        |     +--rw static
        |     |  ...
        |     +--rw bgp {vpn-common:rtg-bgp}?
        |     |  ...
        |     +--rw ospf {vpn-common:rtg-ospf}?
        |     |  +--rw address-family?   identityref
        |     |  +--rw area-id           yang:dotted-quad
        |     |  +--rw metric?           uint16
        |     |  +--rw authentication
        |     |  |  +--rw enabled?            boolean
        |     |  |  +--rw keying-material
        |     |  |     +--rw (option)?
        |     |  |        +--:(auth-key-chain)
        |     |  |        |  +--rw key-chain?
        |     |  |        |          key-chain:key-chain-ref
        |     |  |        +--:(auth-key-explicit)
        |     |  |           +--rw key-id?             uint32
        |     |  |           +--rw key?                string
        |     |  |           +--rw crypto-algorithm?   identityref
        |     |  +--rw status
        |     |     +--rw admin-status
        |     |     |  +--rw status?        identityref
        |     |     |  +--ro last-change?   yang:date-and-time
        |     |     +--ro oper-status
        |     |        +--ro status?        identityref
        |     |        +--ro last-change?   yang:date-and-time
        |     +--rw isis {vpn-common:rtg-isis}?
        |     |  ...
        |     +--rw rip {vpn-common:rtg-rip}?
        |     |  ...
        |     +--rw vrrp {vpn-common:rtg-vrrp}?
        |        ...
]]></sourcecode>
              </figure>
              <t>The following OSPF data nodes are supported:</t>
              <dl spacing="normal" newline="false">
                <dt>'address-family':</dt>
                <dd>
                  <t>Indicates whether IPv4, IPv6, or both address families are to be activated.</t>
                </dd>
                <dt>'area-id':</dt>
                <dd>
                  <t>Indicates the OSPF Area ID.</t>
                </dd>
                <dt>'metric':</dt>
                <dd>
                  <t>Associates a metric with OSPF routes.</t>
                </dd>
                <dt>'sham-links':</dt>
                <dd>
                  <t>Used to create OSPF sham links between two ACs sharing the same area and having a backdoor link (<xref section="4.2.7" sectionFormat="of" target="RFC4577"/> and <xref section="5" sectionFormat="of" target="RFC6565"/>).</t>
                </dd>
                <dt>'authentication':</dt>
                <dd>
                  <t>Controls the authentication schemes to be enabled for the OSPF instance. The model supports authentication options that are common to both OSPF versions: the Authentication Trailer for OSPFv2 <xref target="RFC5709"/><xref target="RFC7474"/> and OSPFv3 <xref target="RFC7166"/>.</t>
                </dd>
                <dt>'status':</dt>
                <dd>
                  <t>Indicates the status of the OSPF routing instance.</t>
                </dd>
              </dl>
            </section>
            <section anchor="sec-isis-rtg">
              <name>IS-IS</name>
              <t>The IS-IS tree structure is shown in <xref target="isis-rtg-svc-tree"/>.</t>
              <figure anchor="isis-rtg-svc-tree">
                <name>IS-IS Tree Structure</name>
                <sourcecode type="yangtree"><![CDATA[
        |  ...
        +--rw routing-protocols
        |  +--rw routing-protocol* [id]
        |     +--rw id                  string
        |     +--rw type?               identityref
        |     +--rw routing-profiles* [id]
        |     |  +--rw id      routing-profile-reference
        |     |  +--rw type?   identityref
        |     +--rw static
        |     |  ...
        |     +--rw bgp {vpn-common:rtg-bgp}?
        |     |  ...
        |     +--rw ospf {vpn-common:rtg-ospf}?
        |     |  ...
        |     +--rw isis {vpn-common:rtg-isis}?
        |     |  +--rw address-family?   identityref
        |     |  +--rw area-address      area-address
        |     |  +--rw authentication
        |     |  |  +--rw enabled?            boolean
        |     |  |  +--rw keying-material
        |     |  |     +--rw (option)?
        |     |  |        +--:(auth-key-chain)
        |     |  |        |  +--rw key-chain?
        |     |  |        |          key-chain:key-chain-ref
        |     |  |        +--:(auth-key-explicit)
        |     |  |           +--rw key-id?             uint32
        |     |  |           +--rw key?                string
        |     |  |           +--rw crypto-algorithm?   identityref
        |     |  +--rw status
        |     |     +--rw admin-status
        |     |     |  +--rw status?        identityref
        |     |     |  +--ro last-change?   yang:date-and-time
        |     |     +--ro oper-status
        |     |        +--ro status?        identityref
        |     |        +--ro last-change?   yang:date-and-time
        |     +--rw rip {vpn-common:rtg-rip}?
        |     |  ...
        |     +--rw vrrp {vpn-common:rtg-vrrp}?
        |      ...
]]></sourcecode>
              </figure>
              <t>The following IS-IS data nodes are supported:</t>
              <dl spacing="normal" newline="false">
                <dt>'address-family':</dt>
                <dd>
                  <t>Indicates whether IPv4, IPv6, or both address families are to be activated.</t>
                </dd>
                <dt>'area-address':</dt>
                <dd>
                  <t>Indicates the IS-IS area address.</t>
                </dd>
                <dt>'authentication':</dt>
                <dd>
                  <t>Controls the authentication schemes to be enabled
   for the IS-IS instance.  Both the specification of a key chain
   <xref target="RFC8177"/> and the direct specification of key and authentication
   algorithms are supported.</t>
                </dd>
                <dt>'status':</dt>
                <dd>
                  <t>Indicates the status of the IS-IS routing instance.</t>
                </dd>
              </dl>
            </section>
            <section anchor="sec-rip-rtg">
              <name>RIP</name>
              <t>The RIP tree structure is shown in <xref target="rip-rtg-svc-tree"/>.</t>
              <figure anchor="rip-rtg-svc-tree">
                <name>RIP Tree Structure</name>
                <sourcecode type="yangtree"><![CDATA[
        |  ...
        +--rw routing-protocols
        |  +--rw routing-protocol* [id]
        |     +--rw id                  string
        |     +--rw type?               identityref
        |     +--rw routing-profiles* [id]
        |     |  +--rw id      routing-profile-reference
        |     |  +--rw type?   identityref
        |     +--rw static
        |     |  ...
        |     +--rw bgp {vpn-common:rtg-bgp}?
        |     |  ...
        |     +--rw ospf {vpn-common:rtg-ospf}?
        |     |  ...
        |     +--rw isis {vpn-common:rtg-isis}?
        |     |  ...
        |     +--rw rip {vpn-common:rtg-rip}?
        |     |  +--rw address-family?   identityref
        |     |  +--rw authentication
        |     |  |  +--rw enabled?            boolean
        |     |  |  +--rw keying-material
        |     |  |     +--rw (option)?
        |     |  |        +--:(auth-key-chain)
        |     |  |        |  +--rw key-chain?
        |     |  |        |          key-chain:key-chain-ref
        |     |  |        +--:(auth-key-explicit)
        |     |  |           +--rw key?                string
        |     |  |           +--rw crypto-algorithm?   identityref
        |     |  +--rw status
        |     |     +--rw admin-status
        |     |     |  +--rw status?        identityref
        |     |     |  +--ro last-change?   yang:date-and-time
        |     |     +--ro oper-status
        |     |        +--ro status?        identityref
        |     |        +--ro last-change?   yang:date-and-time
        |     +--rw vrrp {vpn-common:rtg-vrrp}?
        |      ...
]]></sourcecode>
              </figure>
              <t>'address-family' indicates whether IPv4, IPv6, or both address families are to be activated. For example, this parameter is used to determine whether RIPv2 <xref target="RFC2453"/>, RIP Next Generation (RIPng) <xref target="RFC2080"/>, or both are to be enabled.</t>
            </section>
            <section anchor="sec-vrrp-rtg">
              <name>VRRP</name>
              <t>The model supports the Virtual Router Redundancy Protocol (VRRP) <xref target="RFC9568"/> on an AC (<xref target="vrrp-rtg-svc-tree"/>).</t>
              <figure anchor="vrrp-rtg-svc-tree">
                <name>VRRP Tree Structure</name>
                <sourcecode type="yangtree"><![CDATA[
        |  ...
        +--rw routing-protocols
        |  +--rw routing-protocol* [id]
        |     +--rw id                  string
        |     +--rw type?               identityref
        |     +--rw routing-profiles* [id]
        |     |  +--rw id      routing-profile-reference
        |     |  +--rw type?   identityref
        |     +--rw static
        |     |  ...
        |     +--rw bgp {vpn-common:rtg-bgp}?
        |     |  ...
        |     +--rw ospf {vpn-common:rtg-ospf}?
        |     |  ...
        |     +--rw isis {vpn-common:rtg-isis}?
        |     |  ...
        |     +--rw rip {vpn-common:rtg-rip}?
        |     |  ...
        |     +--rw vrrp {vpn-common:rtg-vrrp}?
        |        +--rw address-family?   identityref
        |        +--rw status
        |           +--rw admin-status
        |           |  +--rw status?        identityref
        |           |  +--ro last-change?   yang:date-and-time
        |           +--ro oper-status
        |              +--ro status?        identityref
        |              +--ro last-change?   yang:date-and-time
]]></sourcecode>
              </figure>
              <t>The following data nodes are supported:</t>
              <dl newline="false" spacing="normal">
                <dt>'address-family':</dt>
                <dd>
                  <t>Indicates whether IPv4, IPv6, or both address families
                  are to be activated.  Note that VRRP version 3 <xref
                  target="RFC9568"/> supports both IPv4 and IPv6.</t>
                </dd>
                <dt>'status':</dt>
                <dd>
                  <t>Indicates the status of the VRRP instance.</t>
                </dd>
              </dl>
              <t>Note that no authentication data node is included for VRRP, as there
isn't any type of VRRP authentication at this time (see <xref section="9" sectionFormat="of" target="RFC9568"/>).</t>
            </section>
          </section>
          <section anchor="sec-oam">
            <name>Operations, Administration, and Maintenance (OAM)</name>
            <t>As shown in the tree depicted in <xref target="oam-svc-tree"/>, the 'oam' container defines OAM-related parameters of an AC.</t>
            <figure anchor="oam-svc-tree">
              <name>OAM Tree Structure</name>
              <sourcecode type="yangtree"><![CDATA[
  +--rw specific-provisioning-profiles
  |  ...
  +--rw service-provisioning-profiles
  |  ...
  +--rw attachment-circuits
     +--rw ac-group-profile* [name]
     |  ...
     +--rw placement-constraints
     |  ...
     +--rw ac* [name]
        ...
        +--rw l2-connection  {ac-common:layer2-ac}?
        |  ...
        +--rw ip-connection  {ac-common:layer3-ac}?
        |  ...
        +--rw routing-protocols
        |  ...
        +--rw oam
        |  +--rw bfd {vpn-common:bfd}?
        |     +--rw session* [id]
        |        +--rw id                string
        |        +--rw local-address?    inet:ip-address
        |        +--rw remote-address?   inet:ip-address
        |        +--rw profile?
        |        |       failure-detection-profile-reference
        |        +--rw holdtime?         uint32
        |        +--rw status
        |           +--rw admin-status
        |           |  +--rw status?        identityref
        |           |  +--ro last-change?   yang:date-and-time
        |           +--ro oper-status
        |              +--ro status?        identityref
        |              +--ro last-change?   yang:date-and-time
        +--rw security
        |  ...
        +--rw service
           ...
]]></sourcecode>
            </figure>
            <t>This version of the module supports BFD. The following BFD data nodes can be specified:</t>
            <dl spacing="normal" newline="false">
              <dt>'id':</dt>
              <dd>
                <t>An identifier that uniquely identifies a BFD session.</t>
              </dd>
              <dt>'local-address':</dt>
              <dd>
                <t>Indicates the provider's IP address used for a BFD session.</t>
              </dd>
              <dt>'remote-address':</dt>
              <dd>
                <t>Indicates the customer's IP address used for a BFD session.</t>
              </dd>
              <dt>'profile':</dt>
              <dd>
                <t>Refers to a BFD profile.</t>
              </dd>
              <dt>'holdtime':</dt>
              <dd>
                <t>Used to indicate the expected BFD holddown time, in milliseconds.</t>
              </dd>
              <dt>'status':</dt>
              <dd>
                <t>Indicates the status of the BFD session.</t>
              </dd>
            </dl>
          </section>
          <section anchor="sec-sec">
            <name>Security</name>
            <t>As shown in the tree depicted in <xref target="sec-svc-tree"/>, the 'security' container defines a set of AC security parameters.</t>
            <figure anchor="sec-svc-tree">
              <name>Security Tree Structure</name>
              <sourcecode type="yangtree"><![CDATA[
  +--rw specific-provisioning-profiles
  |  ...
  +--rw service-provisioning-profiles
  |  ...
  +--rw attachment-circuits
     +--rw ac-group-profile* [name]
     |  ...
     +--rw placement-constraints
     |  ...
     +--rw ac* [name]
        ...
        +--rw l2-connection  {ac-common:layer2-ac}?
        |  ...
        +--rw ip-connection  {ac-common:layer3-ac}?
        |  ...
        +--rw routing-protocols
        |  ...
        +--rw oam
        |  ...
        +--rw security
        |  +--rw encryption {vpn-common:encryption}?
        |  |  +--rw enabled?   boolean
        |  |  +--rw layer?     enumeration
        |  +--rw encryption-profile
        |     +--rw (profile)?
        |        +--:(provider-profile)
        |        |  +--rw provider-profile?
        |        |          encryption-profile-reference
        |        +--:(customer-profile)
        |           +--rw customer-key-chain?
        |                   key-chain:key-chain-ref
        +--rw service
           ...
]]></sourcecode>
            </figure>
            <t>The 'security' container specifies a minimum set of encryption-related parameters that can be requested to be applied to traffic for a given AC. Typically, the model can be used to directly control the encryption to be applied (e.g., Layer 2 or Layer 3 encryption) or invoke a local encryption profile (see  <xref target="sec-profiles-desc"/>). For example, a service provider may use IPsec when a customer requests Layer 3 encryption for an AC.</t>
          </section>
          <section anchor="sec-bw">
            <name>Service</name>
            <t>The structure of the 'service' container is depicted in <xref target="bw-tree"/>.</t>
            <figure anchor="bw-tree">
              <name>Bandwidth Tree Structure</name>
              <sourcecode type="yangtree"><![CDATA[
  +--rw specific-provisioning-profiles
  |  ...
  +--rw service-provisioning-profiles
  |  ...
  +--rw attachment-circuits
     +--rw ac-group-profile* [name]
     |  ...
     +--rw placement-constraints
     |  ...
     +--rw ac* [name]
        ...
        +--rw l2-connection  {ac-common:layer2-ac}?
        |  ...
        +--rw ip-connection  {ac-common:layer3-ac}?
        |  ...
        +--rw routing-protocols
        |  ...
        +--rw oam
        |  ...
        +--rw security
        |  ...
        +--rw service
           +--rw mtu?      uint32
           +--rw svc-pe-to-ce-bandwidth {vpn-common:inbound-bw}?
           |  +--rw bandwidth* [bw-type]
           |     +--rw bw-type      identityref
           |     +--rw (type)?
           |        +--:(per-cos)
           |        |  +--rw cos* [cos-id]
           |        |     +--rw cos-id    uint8
           |        |     +--rw cir?      uint64
           |        |     +--rw cbs?      uint64
           |        |     +--rw eir?      uint64
           |        |     +--rw ebs?      uint64
           |        |     +--rw pir?      uint64
           |        |     +--rw pbs?      uint64
           |        +--:(other)
           |           +--rw cir?   uint64
           |           +--rw cbs?   uint64
           |           +--rw eir?   uint64
           |           +--rw ebs?   uint64
           |           +--rw pir?   uint64
           |           +--rw pbs?   uint64
           +--rw svc-ce-to-pe-bandwidth {vpn-common:outbound-bw}?
           |  +--rw bandwidth* [bw-type]
           |     +--rw bw-type      identityref
           |     +--rw (type)?
           |        +--:(per-cos)
           |        |  +--rw cos* [cos-id]
           |        |     +--rw cos-id    uint8
           |        |     +--rw cir?      uint64
           |        |     +--rw cbs?      uint64
           |        |     +--rw eir?      uint64
           |        |     +--rw ebs?      uint64
           |        |     +--rw pir?      uint64
           |        |     +--rw pbs?      uint64
           |        +--:(other)
           |           +--rw cir?   uint64
           |           +--rw cbs?   uint64
           |           +--rw eir?   uint64
           |           +--rw ebs?   uint64
           |           +--rw pir?   uint64
           |           +--rw pbs?   uint64
           +--rw qos {vpn-common:qos}?
           |  +--rw qos-profiles
           |     +--rw qos-profile* [profile]
           |        +--rw profile      qos-profile-reference
           |        +--rw direction?   identityref
           +--rw access-control-list
              +--rw acl-profiles
                 +--rw acl-profile* [profile]
                    +--rw profile    forwarding-profile-reference
]]></sourcecode>
            </figure>
            <t>The 'service' container defines the following data nodes:</t>
            <dl spacing="normal" newline="false">
              <dt>'mtu':</dt>
              <dd>
                <t>Specifies the Layer 2 MTU, in bytes, for the AC.</t>
              </dd>
	    </dl>
	    <dl newline="true" spacing="normal">
	      <dt>'svc-pe-to-ce-bandwidth' and 'svc-ce-to-pe-bandwidth':</dt>
	      <dd>
		<dl newline="false" spacing="normal">
		  <dt>'svc-pe-to-ce-bandwidth':</dt>
		  <dd>Indicates the inbound bandwidth of the AC (i.e.,
		  download bandwidth from the service provider to the customer
		  site).</dd>
		  <dt>'svc-ce-to-pe-bandwidth':</dt>
		  <dd><t>Indicates the outbound bandwidth of the AC (i.e.,
		  upload bandwidth from the customer site to the service
		  provider).</t>
		  </dd>
		</dl>
                <t>Both 'svc-pe-to-ce-bandwidth' and 'svc-ce-to-pe-bandwidth'
                can be represented using the Committed Information Rate (CIR),
                the Excess Information Rate (EIR), or the Peak Information
                Rate (PIR). Both reuse the 'bandwidth-per-type' grouping
                defined in <xref
                target="RFC9833"/>.</t>
	      </dd>
	    </dl>
	    <dl newline="false" spacing="normal">
              <dt>'qos':</dt>
              <dd>
                <t>Specifies a list of QoS profiles to apply for this AC.</t>
              </dd>
              <dt>'access-control-list':</dt>
              <dd>
                <t>Specifies a list of ACL profiles to apply for this AC.</t>
              </dd>
            </dl>

          </section>
        </section>
      </section>
    </section>
    <section anchor="yang-modules">
      <name>YANG Modules</name>
      <section anchor="sec-bearer-module">
        <name>The Bearer Service ("ietf-bearer-svc") YANG Module</name>
        <t>This module uses types defined in <xref target="RFC6991"/>, <xref target="RFC9181"/>, and <xref target="RFC9833"/>.</t>	
        <sourcecode name="ietf-bearer-svc@2025-09-29.yang" type="yang" markers="true"><![CDATA[
module ietf-bearer-svc {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-bearer-svc";
  prefix bearer-svc;

  import ietf-inet-types {
    prefix inet;
    reference
      "RFC 6991: Common YANG Data Types, Section 4";
  }
  import ietf-vpn-common {
    prefix vpn-common;
    reference
      "RFC 9181: A Common YANG Data Model for Layer 2 and Layer 3
                 VPNs";
  }
  import ietf-ac-common {
    prefix ac-common;
    reference
      "RFC 9833: A Common YANG Data Model for Attachment Circuits";
  }
  import ietf-ac-svc {
    prefix ac-svc;
    reference
      "RFC 9834: YANG Data Models for Bearers and Attachment
                 Circuits as a Service (ACaaS)";
  }

  organization
    "IETF OPSAWG (Operations and Management Area Working Group)";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/opsawg/>
     WG List:  <mailto:opsawg@ietf.org>

     Editor:   Mohamed Boucadair
               <mailto:mohamed.boucadair@orange.com>
     Editor:   Richard Roberts
               <mailto:rroberts@juniper.net>
     Author:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>
     Author:   Samier Barguil
               <mailto:ssamier.barguil_giraldo@nokia.com>
     Author:   Bo Wu
               <mailto:lana.wubo@huawei.com>";
  description
    "This YANG module defines a generic YANG module for exposing
     network bearers as a service.

     Copyright (c) 2025 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Revised BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC xxx; see the
     RFC itself for full legal notices.";

  revision 2025-09-29 {
    description
      "Initial revision.";
    reference
      "RFC 9834: YANG Data Models for Bearers and Attachment
                 Circuits as a Service (ACaaS)";
  }

  // Identities 

  identity identification-type {
    description
      "Base identity for identification of bearers.";
  }

  identity device-id {
    base identification-type;
    description
      "Identification of bearers based on device.";
  }

  identity site-id {
    base identification-type;
    description
      "Identification of bearers based on site.";
  }

  identity site-and-device-id {
    base identification-type;
    description
      "Identification of bearers based on site and device.";
  }

  identity custom {
    base identification-type;
    description
      "Identification of bearers based on other custom criteria.";
  }

  identity bearer-type {
    description
      "Base identity for bearers type.";
  }

  identity ethernet {
    base bearer-type;
    description
      "Ethernet.";
  }

  identity wireless {
    base bearer-type;
    description
      "Wireless.";
  }

  identity lag {
    base bearer-type;
    description
      "Link Aggregation Group (LAG).";
  }

  identity network-termination-hint {
    base vpn-common:placement-diversity;
    description
      "A hint about the termination at the network side
       is provided (e.g., geoproximity).";
  }

  identity sync-phy-type {
    description
      "Base identity for physical layer synchronization.";
  }

  identity sync-e {
    base sync-phy-type;
    description
      "Sync Ethernet (SyncE).";
    reference
      "ITU-T G.781: Synchronization layer functions for frequency
                    synchronization based on the physical layer";
  }

  // Typedef to ease referencing cross-modules

  typedef bearer-ref {
    type leafref {
      path "/bearer-svc:bearers/bearer-svc:bearer/bearer-svc:name";
    }
    description
      "Defines a type to reference a bearer.";
  }

  // Reusable groupings

  grouping location-information {
    description
      "Basic location information.";
    leaf name {
      type string;
      description
        "Provides a location name.  This data node can be mapped,
         e.g., to the 3GPP NRM IOC ManagedElement.";
    }
    leaf address {
      type string;
      description
        "Address (number and street) of the device/site.";
    }
    leaf city {
      type string;
      description
        "City of the device/site.";
    }
    leaf postal-code {
      type string;
      description
        "Postal code of the device/site.";
    }
    leaf state {
      type string;
      description
        "State of the device/site.  This leaf can also be used to
         describe a region for a country that does not have
         states.";
    }
    leaf country-code {
      type string {
        pattern '[A-Z]{2}';
      }
      description
        "Country of the device/site.
         Expressed as ISO ALPHA-2 code.";
    }
  }

  grouping placement-constraints {
    description
      "Constraints related to placement of a bearer.";
    list constraint {
      if-feature "vpn-common:placement-diversity";
      key "constraint-type";
      description
        "List of constraints.";
      leaf constraint-type {
        type identityref {
          base vpn-common:placement-diversity;
        }
        must "not(derived-from-or-self(current(), "
           + "'vpn-common:bearer-diverse') or "
           + "derived-from-or-self(current(), "
           + "'vpn-common:same-bearer'))" {
          error-message "Only bearer-specific diversity"
                      + "constraints must be provided.";
        }
        description
          "Diversity constraint type for bearers.";
      }
      container target {
        description
          "The constraint will apply against this list of
           groups.";
        choice target-flavor {
          description
            "Choice for the group definition.";
          case id {
            list group {
              key "group-id";
              description
                "List of groups.";
              leaf group-id {
                type string;
                description
                  "The constraint will apply against this
                   particular group ID.";
              }
            }
          }
          case all-bearers {
            leaf all-other-bearers {
              type empty;
              description
                "The constraint will apply against all other
                 bearers of a site.";
            }
          }
          case all-groups {
            leaf all-other-groups {
              type empty;
              description
                "The constraint will apply against all other
                 groups managed by the customer.";
            }
          }
        }
      }
    }
  }

  container locations {
    description
      "Retrieves the available provider locations for terminating
       bearers for a given customer.";

    list customer {
      key "name peer-as";
      description
        "List of locations per customer.";
      leaf name {
        type string;
        description
          "Indicates the name of the customer.";
      }
      leaf peer-as {
        type inet:as-number;
        description
          "Indicates the customer's ASN.
           0 is used when the customer does not have an ASN.";
        reference
          "RFC 7607: Codification of AS 0 Processing";
      }
      list location {
        key "name";
        config false;
        description
          "Reports the list of available locations.";
        uses location-information;
      }
    }
  }
  container bearers {
    description
      "Main container for the bearers.  The timing constraints
       indicated at the bearer level take precedence over the
       global values indicated at the bearers level.";
    uses ac-common:op-instructions;
    container placement-constraints {
      description
        "Diversity constraint type.";
      uses placement-constraints;
    }
    list bearer {
      key "name";
      description
        "Maintains a list of bearers.";
      leaf name {
        type string;
        description
          "A name that uniquely identifies a bearer for
           a given customer.";
      }
      leaf description {
        type string;
        description
          "A description of this bearer.";
      }
      leaf customer-name {
        type string;
        description
          "Indicates the name of the customer that requested this
           bearer.";
      }
      uses vpn-common:vpn-components-group;
      leaf op-comment {
        type string;
        description
          "Includes comments that can be shared with operational
           teams and that may be useful for the activation of a
           bearer.  This may include, for example, information
           about the building, level, etc.";
      }
      leaf bearer-parent-ref {
        type bearer-svc:bearer-ref;
        description
          "Specifies the parent bearer.  This can be used, e.g.,
           for a Link Aggregation Group (LAG).";
      }
      leaf-list bearer-lag-member {
        type bearer-svc:bearer-ref;
        config false;
        description
          "Reports LAG members.";
      }
      leaf sync-phy-capable {
        type boolean;
        config false;
        description
          "Indicates, when set to true, that a mechanism for physical
           layer synchronization is supported for this bearer. 
           No such mechanism is supported if set to false.";
      }
      leaf sync-phy-enabled {
        type boolean;
        description
          "Indicates, when set to true, that a mechanism for physical
           layer synchronization is enabled for this bearer.  No such
           mechanism is enabled if set to false.";
      }
      leaf sync-phy-type {
        when "../sync-phy-enabled='true'";
        type identityref {
          base sync-phy-type;
        }
        description
          "Type of the physical layer synchronization that is enabled
           for this bearer.";
      }
      leaf provider-location-reference {
        type string;
        description
          "Specifies the provider's location reference.";
      }
      container customer-point {
        description
          "Base container to link the bearer existence.";
        leaf identified-by {
          type identityref {
            base identification-type;
          }
          description
            "Specifies how the customer point is identified.";
        }
        container device {
          when "derived-from-or-self(../identified-by, "
             + "'bearer-svc:device-id') or "
             + "derived-from-or-self(../identified-by, "
             + "'bearer-svc:site-and-device-id')" {
            description
              "Only applicable if identified-by is device.";
          }
          description
            "Bearer is linked to device.";
          leaf device-id {
            type string;
            description
              "Identifier for the device where that bearer belongs.";
          }
          container location {
            description
              "Location of the node.";
            uses location-information;
          }
        }
        container site {
          when "derived-from-or-self(../identified-by, "
             + "'bearer-svc:site-id') or "
             + "derived-from-or-self(../identified-by, "
             + "'bearer-svc:site-and-device-id')" {
            description
              "Only applicable if identified-by is site.";
          }
          description
            "Bearer is linked to a site.";
          leaf site-id {
            type string;
            description
              "Identifier for the site or sites where that bearer
               belongs.";
          }
          container location {
            description
              "Location of the node.";
            uses location-information;
          }
        }
        leaf custom-id {
          when "derived-from-or-self(../identified-by, "
             + "'bearer-svc:custom')" {
            description
              "Only enabled if identified-by is custom.";
          }
          type string;
          description
            "The semantics of this identifier is shared between the
             customer/provider using out-of-band means.";
        }
      }
      leaf type {
        type identityref {
          base bearer-type;
        }
        description
          "Type of the bearer (e.g., Ethernet or wireless).";
      }
      leaf test-only {
        type empty;
        description
          "When present, this indicates that this is a feasibility
           check request.  No resources are committed for such bearer
           requests.";
      }
      leaf bearer-reference {
        if-feature "ac-common:server-assigned-reference";
        type string;
        config false;
        description
          "This is an internal reference for the service provider
           to identify the bearers.";
      }
      leaf-list ac-svc-ref {
        type ac-svc:attachment-circuit-reference;
        config false;
        description
          "Specifies the set of ACs that are bound to the bearer.";
      }
      uses ac-common:op-instructions;
      uses ac-common:service-status;
    }
  }
}
]]></sourcecode>
      </section>
      <section anchor="sec-ac-module">
        <name>The AC Service ("ietf-ac-svc") YANG Module</name>
        <t>This module uses types defined in <xref target="RFC6991"/>, <xref target="RFC9181"/>, <xref target="RFC8177"/>, and <xref target="RFC9833"/>. Also, the module uses
	the extensions defined in <xref target="RFC8341"/>.</t>
        <sourcecode name="ietf-ac-svc@2025-09-29.yang" type="yang" markers="true"><![CDATA[
module ietf-ac-svc {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-ac-svc";
  prefix ac-svc;

  import ietf-ac-common {
    prefix ac-common;
    reference
      "RFC 9833: A Common YANG Data Model for Attachment Circuits";
  }
  import ietf-vpn-common {
    prefix vpn-common;
    reference
      "RFC 9181: A Common YANG Data Model for Layer 2 and Layer 3
                 VPNs";
  }
  import ietf-netconf-acm {
    prefix nacm;
    reference
      "RFC 8341: Network Configuration Access Control Model";
  }
  import ietf-inet-types {
    prefix inet;
    reference
      "RFC 6991: Common YANG Data Types, Section 4";
  }
  import ietf-key-chain {
    prefix key-chain;
    reference
      "RFC 8177: YANG Data Model for Key Chains";
  }

  organization
    "IETF OPSAWG (Operations and Management Area Working Group)";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/opsawg/>
     WG List:  <mailto:opsawg@ietf.org>

     Editor:   Mohamed Boucadair
               <mailto:mohamed.boucadair@orange.com>
     Editor:   Richard Roberts
               <mailto:rroberts@juniper.net>
     Author:   Oscar Gonzalez de Dios
               <mailto:oscar.gonzalezdedios@telefonica.com>
     Author:   Samier Barguil
               <mailto:ssamier.barguil_giraldo@nokia.com>
     Author:   Bo Wu
               <mailto:lana.wubo@huawei.com>";
  description
    "This YANG module defines a YANG module for exposing
     Attachment Circuits as a Service (ACaaS).

     Copyright (c) 2025 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Revised BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC 9834; see the
     RFC itself for full legal notices.";

  revision 2025-09-29 {
    description
      "Initial revision.";
    reference
      "RFC 9834: YANG Data Models for Bearers and Attachment
                 Circuits as a Service (ACaaS)";
  }

  /* A set of typedefs to ease referencing cross-modules */

  typedef attachment-circuit-reference {
    type leafref {
      path "/ac-svc:attachment-circuits/ac-svc:ac/ac-svc:name";
    }
    description
      "Defines a reference to an AC that can be used by other
       modules.";
  }

  typedef ac-group-reference {
    type leafref {
      path "/ac-svc:attachment-circuits/ac-svc:ac-group-profile"
         + "/ac-svc:name";
    }
    description
      "Defines a reference to an AC profile.";
  }

  typedef encryption-profile-reference {
    type leafref {
      path "/ac-svc:specific-provisioning-profiles"
         + "/ac-svc:valid-provider-identifiers"
         + "/ac-svc:encryption-profile-identifier/ac-svc:id";
    }
    description
      "Defines a reference to an encryption profile.";
  }

  typedef qos-profile-reference {
    type leafref {
      path "/ac-svc:specific-provisioning-profiles"
         + "/ac-svc:valid-provider-identifiers"
         + "/ac-svc:qos-profile-identifier/ac-svc:id";
    }
    description
      "Defines a reference to a QoS profile.";
  }

  typedef failure-detection-profile-reference {
    type leafref {
      path "/ac-svc:specific-provisioning-profiles"
         + "/ac-svc:valid-provider-identifiers"
         + "/ac-svc:failure-detection-profile-identifier"
         + "/ac-svc:id";
    }
    description
      "Defines a reference to a BFD profile.";
  }

  typedef forwarding-profile-reference {
    type leafref {
      path "/ac-svc:specific-provisioning-profiles"
         + "/ac-svc:valid-provider-identifiers"
         + "/ac-svc:forwarding-profile-identifier/ac-svc:id";
    }
    description
      "Defines a reference to a forwarding profile.";
  }

  typedef routing-profile-reference {
    type leafref {
      path "/ac-svc:specific-provisioning-profiles"
         + "/ac-svc:valid-provider-identifiers"
         + "/ac-svc:routing-profile-identifier/ac-svc:id";
    }
    description
      "Defines a reference to a routing profile.";
  }

  typedef service-profile-reference {
    type leafref {
      path "/ac-svc:service-provisioning-profiles"
         + "/ac-svc:service-profile-identifier"
         + "/ac-svc:id";
    }
    description
      "Defines a reference to a service profile.";
  }

  /******************** Reusable groupings ********************/
  // Basic Layer 2 connection

  grouping l2-connection-basic {
    description
      "Defines Layer 2 protocols and parameters that can be
       factorized when provisioning Layer 2 connectivity
       among multiple ACs.";
    container encapsulation {
      description
        "Container for Layer 2 encapsulation.";
      leaf type {
        type identityref {
          base vpn-common:encapsulation-type;
        }
        description
          "Encapsulation type.";
      }
      container dot1q {
        when "derived-from-or-self(../type, 'vpn-common:dot1q')" {
          description
            "Only applies when the type of the tagged interface
             is 'dot1q'.";
        }
        description
          "Tagged interface.";
        uses ac-common:dot1q;
      }
      container qinq {
        when "derived-from-or-self(../type, 'vpn-common:qinq')" {
          description
            "Only applies when the type of the tagged interface
             is 'qinq'.";
        }
        description
          "Includes QinQ parameters.";
        uses ac-common:qinq;
      }
    }
  }

  // Full Layer 2 connection

  grouping l2-connection {
    description
      "Defines Layer 2 protocols and parameters that are used to
       enable AC connectivity.";
    container encapsulation {
      description
        "Container for Layer 2 encapsulation.";
      leaf type {
        type identityref {
          base vpn-common:encapsulation-type;
        }
        description
          "Indicates the encapsulation type.";
      }
      container dot1q {
        when "derived-from-or-self(../type, 'vpn-common:dot1q')" {
          description
            "Only applies when the type of the tagged interface
             is 'dot1q'.";
        }
        description
          "Tagged interface.";
        uses ac-common:dot1q;
      }
      container priority-tagged {
        when "derived-from-or-self(../type, "
           + "'vpn-common:priority-tagged')" {
          description
            "Only applies when the type of the tagged interface is
             'priority-tagged'.";
        }
        description
          "Priority-tagged interface.";
        uses ac-common:priority-tagged;
      }
      container qinq {
        when "derived-from-or-self(../type, 'vpn-common:qinq')" {
          description
            "Only applies when the type of the tagged interface
             is 'qinq'.";
        }
        description
          "Includes QinQ parameters.";
        uses ac-common:qinq;
      }
    }
    choice l2-service {
      description
        "The Layer 2 connectivity service can be provided by
         indicating a pointer to an L2VPN or by specifying a
         Layer 2 tunnel service.";
      container l2-tunnel-service {
        description
          "Defines a Layer 2 tunnel termination.
           It is only applicable when a tunnel is required.";
        uses ac-common:l2-tunnel-service;
      }
      case l2vpn {
        leaf l2vpn-id {
          type vpn-common:vpn-id;
          description
            "Indicates the L2VPN service associated with an
             Integrated Routing and Bridging (IRB) interface.";
        }
      }
    }
    leaf bearer-reference {
      if-feature "ac-common:server-assigned-reference";
      type string;
      description
        "This is an internal reference for the service provider
         to identify the bearer associated with this AC.";
    }
  }

  // Basic IP connection

  grouping ip-connection-basic {
    description
      "Defines basic IP connection parameters.";
    container ipv4 {
      if-feature "vpn-common:ipv4";
      description
        "IPv4-specific parameters.";
      uses ac-common:ipv4-connection-basic;
    }
    container ipv6 {
      if-feature "vpn-common:ipv6";
      description
        "IPv6-specific parameters.";
      uses ac-common:ipv6-connection-basic;
    }
  }

  // Full IP connection

  grouping ip-connection {
    description
      "Defines IP connection parameters.";
    container ipv4 {
      if-feature "vpn-common:ipv4";
      description
        "IPv4-specific parameters.";
      uses ac-common:ipv4-connection {
        augment "ac-svc:allocation-type/static-addresses/address" {
          leaf failure-detection-profile {
            if-feature "vpn-common:bfd";
            type failure-detection-profile-reference;
            description
              "Points to a failure detection profile.";
          }
          description
            "Adds a failure detection profile.";
        }
      }
    }
    container ipv6 {
      if-feature "vpn-common:ipv6";
      description
        "IPv6-specific parameters.";
      uses ac-common:ipv6-connection {
        augment "ac-svc:allocation-type/static-addresses/address" {
          leaf failure-detection-profile {
            if-feature "vpn-common:bfd";
            type failure-detection-profile-reference;
            description
              "Points to a failure detection profile.";
          }
          description
            "Adds a failure detection profile.";
        }
      }
    }
    choice l3-service {
      description
        "The Layer 3 connectivity service can be provided by
         specifying a Layer 3 tunnel service.";
      container l3-tunnel-service {
        description
          "Defines a Layer 3 tunnel termination.
           It is only applicable when a tunnel is required.";
        leaf type {
          type identityref {
            base ac-common:l3-tunnel-type;
          }
          description
            "Selects the tunnel termination type for an AC.";
        }
      }
    }
  }

  // Routing protocol list

  grouping routing-protocol-list {
    description
      "List of routing protocols used on the AC.";
    leaf type {
      type identityref {
        base vpn-common:routing-protocol-type;
      }
      description
        "Type of routing protocol.";
    }
    list routing-profiles {
      key "id";
      description
        "Routing profiles.";
      leaf id {
        type routing-profile-reference;
        description
          "Reference to the routing profile to be used.";
      }
      leaf type {
        type identityref {
          base vpn-common:ie-type;
        }
        description
          "Import, export, or both.";
      }
    }
  }

  // Static routing with BFD

  grouping ipv4-static-rtg-with-bfd {
    description
      "Configuration specific to IPv4 static routing with
       failure protection (e.g., BFD).";
    list ipv4-lan-prefix {
      if-feature "vpn-common:ipv4";
      key "lan next-hop";
      description
        "List of LAN prefixes for the site.";
      uses ac-common:ipv4-static-rtg-entry;
      leaf failure-detection-profile {
        if-feature "vpn-common:bfd";
        type failure-detection-profile-reference;
        description
          "Points to a failure detection profile.";
      }
      uses ac-common:service-status;
    }
  }

  grouping ipv6-static-rtg-with-bfd {
    description
      "Configuration specific to IPv6 static routing with
       failure protection (e.g., BFD).";
    list ipv6-lan-prefix {
      if-feature "vpn-common:ipv6";
      key "lan next-hop";
      description
        "List of LAN prefixes for the site.";
      uses ac-common:ipv6-static-rtg-entry;
      leaf failure-detection-profile {
        if-feature "vpn-common:bfd";
        type failure-detection-profile-reference;
        description
          "Points to a failure detection profile.";
      }
      uses ac-common:service-status;
    }
  }

  //  BGP Service 

  grouping bgp-neighbor-without-name {
    description
      "A grouping with generic parameters for configuring a BGP 
       neighbor.";
    leaf remote-address {
      type inet:ip-address;
      description
        "The remote IP address of this entry's BGP peer.  This is
         a customer IP address.

         If this leaf is not present, this means that the primary
         customer IP address is used as the remote IP address.";
    }
    leaf local-address {
      type inet:ip-address;
      description
        "The provider's IP address that will be used to establish
         the BGP session.";
    }
    uses ac-common:bgp-peer-group-without-name;
    container bgp-max-prefix {
      description
        "A container for the maximum number of BGP prefixes
         allowed in the BGP session.";
      leaf max-prefix {
        type uint32;
        description
          "Indicates the maximum number of BGP prefixes allowed
           in the BGP session.

           It allows control of how many prefixes can be received
           from a neighbor.";
        reference
          "RFC 4271: A Border Gateway Protocol 4 (BGP-4),
                     Section 8.2.2";
      }
    }
    uses ac-common:bgp-authentication;
    uses ac-common:op-instructions;
    uses ac-common:service-status;
  }

  grouping bgp-neighbor-with-name {
    description
      "A grouping with generic parameters for configuring a BGP 
       neighbor with an identifier.";
    leaf id {
      type string;
      description
        "An identifier that uniquely identifies a neighbor.";
    }
    uses ac-svc:bgp-neighbor-without-name;
  }

  grouping bgp-neighbor-with-server-reference {
    description
      "A grouping with generic parameters for configuring a BGP 
       neighbor with a reference generated by the provider.";
    leaf server-reference {
      if-feature "ac-common:server-assigned-reference";
      type string;
      config false;
      description
        "This is an internal reference for the service provider
         to identify the BGP session.";
    }
    uses ac-svc:bgp-neighbor-without-name;
  }

  grouping bgp-neighbor-with-name-server-reference {
    description
      "A grouping with generic parameters for configuring a BGP 
       neighbor with an identifier and a reference generated by 
       the provider.";
    leaf id {
      type string;
      description
        "An identifier that uniquely identifiers a neighbor.";
    }
    uses ac-svc:bgp-neighbor-with-server-reference;
  }

  grouping bgp-svc {
    description
      "Configuration specific to BGP.";
    container peer-groups {
      description
        "Configuration for BGP peer-groups";
      list peer-group {
        key "name";
        description
          "List of BGP peer-groups configured on the local 
           system -- uniquely identified by peer-group name.";
        uses ac-common:bgp-peer-group-with-name;
        leaf local-address {
          type inet:ip-address;
          description
            "The provider's local IP address that will be used to
             establish the BGP session.";
        }
        container bgp-max-prefix {
          description
            "A container for the maximum number of BGP prefixes
             allowed in the BGP session.";
          leaf max-prefix {
            type uint32;
            description
              "Indicates the maximum number of BGP prefixes allowed
               in the BGP session.

               It allows control of how many prefixes can be received
               from a neighbor.";
            reference
              "RFC 4271: A Border Gateway Protocol 4 (BGP-4),
                         Section 8.2.2";
          }
        }
        uses ac-common:bgp-authentication;
      }
    }
    list neighbor {
      key "id";
      description
        "List of BGP neighbors.";
      uses ac-svc:bgp-neighbor-with-name-server-reference;
      leaf peer-group {
        type leafref {
          path "../../peer-groups/peer-group/name";
        }
        description
          "The peer-group with which this neighbor is associated.";
      }
      leaf failure-detection-profile {
        if-feature "vpn-common:bfd";
        type failure-detection-profile-reference;
        description
          "Points to a failure detection profile.";
      }
    }
  }

  //  OSPF Service 

  grouping ospf-svc {
    description
      "Service configuration specific to OSPF.";
    uses ac-common:ospf-basic;
    uses ac-common:ospf-authentication;
    uses ac-common:service-status;
  }

  //  IS-IS Service 

  grouping isis-svc {
    description
      "Service configuration specific to IS-IS.";
    uses ac-common:isis-basic;
    uses ac-common:isis-authentication;
    uses ac-common:service-status;
  }

  //  RIP Service 

  grouping rip-svc {
    description
      "Service configuration specific to RIP routing.";
    leaf address-family {
      type identityref {
        base vpn-common:address-family;
      }
      description
        "Indicates whether IPv4, IPv6, or both address families
         are to be activated.";
    }
    uses ac-common:rip-authentication;
    uses ac-common:service-status;
  }

  //  VRRP Service 

  grouping vrrp-svc {
    description
      "Service configuration specific to VRRP.";
    reference
      "RFC 9568: Virtual Router Redundancy Protocol (VRRP)
                 Version 3 for IPv4 and IPv6";
    leaf address-family {
      type identityref {
        base vpn-common:address-family;
      }
      description
        "Indicates whether IPv4, IPv6, or both
         address families are to be enabled.";
    }
    uses ac-common:service-status;
  }

  // Basic routing parameters

  grouping routing-basic {
    description
      "Defines basic parameters for routing protocols.";
    list routing-protocol {
      key "id";
      description
        "List of routing protocols used on the AC.";
      leaf id {
        type string;
        description
          "Unique identifier for the routing protocol.";
      }
      uses routing-protocol-list;
      container bgp {
        when
          "derived-from-or-self(../type, 'vpn-common:bgp-routing')" {
          description
            "Only applies when the protocol is BGP.";
        }
        if-feature "vpn-common:rtg-bgp";
        description
          "Configuration specific to BGP.";
        container peer-groups {
          description
            "Configuration for BGP peer-groups";
          list peer-group {
            key "name";
            description
              "List of BGP peer-groups configured on the local
               system -- uniquely identified by peer-group
               name.";
            uses ac-common:bgp-peer-group-with-name;
          }
        }
      }
      container ospf {
        when "derived-from-or-self(../type, "
           + "'vpn-common:ospf-routing')" {
          description
            "Only applies when the protocol is OSPF.";
        }
        if-feature "vpn-common:rtg-ospf";
        description
          "Configuration specific to OSPF.";
        uses ac-common:ospf-basic;
      }
      container isis {
        when "derived-from-or-self(../type, "
           + "'vpn-common:isis-routing')" {
          description
            "Only applies when the protocol is IS-IS.";
        }
        if-feature "vpn-common:rtg-isis";
        description
          "Configuration specific to IS-IS.";
        uses ac-common:isis-basic;
      }
      container rip {
        when "derived-from-or-self(../type, "
           + "'vpn-common:rip-routing')" {
          description
            "Only applies when the protocol is RIP.
             For IPv4, the model assumes that RIP version 2 is
             used.";
        }
        if-feature "vpn-common:rtg-rip";
        description
          "Configuration specific to RIP routing.";
        leaf address-family {
          type identityref {
            base vpn-common:address-family;
          }
          description
            "Indicates whether IPv4, IPv6, or both address families
             are to be activated.";
        }
      }
      container vrrp {
        when "derived-from-or-self(../type, "
           + "'vpn-common:vrrp-routing')" {
          description
            "Only applies when the protocol is the Virtual Router
             Redundancy Protocol (VRRP).";
        }
        if-feature "vpn-common:rtg-vrrp";
        description
          "Configuration specific to VRRP.";
        leaf address-family {
          type identityref {
            base vpn-common:address-family;
          }
          description
            "Indicates whether IPv4, IPv6, or both address families
             are to be enabled.";
        }
      }
    }
  }

  // Full routing parameters

  grouping routing {
    description
      "Defines routing protocols.";
    list routing-protocol {
      key "id";
      description
        "List of routing protocols used on the AC.";
      leaf id {
        type string;
        description
          "Unique identifier for the routing protocol.";
      }
      uses routing-protocol-list;
      container static {
        when "derived-from-or-self(../type, "
           + "'vpn-common:static-routing')" {
          description
            "Only applies when the protocol is the static
             routing protocol.";
        }
        description
          "Configuration specific to static routing.";
        container cascaded-lan-prefixes {
          description
            "LAN prefixes from the customer.";
          uses ipv4-static-rtg-with-bfd;
          uses ipv6-static-rtg-with-bfd;
        }
      }
      container bgp {
        when "derived-from-or-self(../type, "
           + "'vpn-common:bgp-routing')" {
          description
            "Only applies when the protocol is BGP.";
        }
        if-feature "vpn-common:rtg-bgp";
        description
          "Configuration specific to BGP.";
        uses bgp-svc;
      }
      container ospf {
        when "derived-from-or-self(../type, "
           + "'vpn-common:ospf-routing')" {
          description
            "Only applies when the protocol is OSPF.";
        }
        if-feature "vpn-common:rtg-ospf";
        description
          "Configuration specific to OSPF.";
        uses ospf-svc;
      }
      container isis {
        when "derived-from-or-self(../type, "
           + "'vpn-common:isis-routing')" {
          description
            "Only applies when the protocol is IS-IS.";
        }
        if-feature "vpn-common:rtg-isis";
        description
          "Configuration specific to IS-IS.";
        uses isis-svc;
      }
      container rip {
        when "derived-from-or-self(../type, "
           + "'vpn-common:rip-routing')" {
          description
            "Only applies when the protocol is RIP.
             For IPv4, the model assumes that RIP version 2 is
             used.";
        }
        if-feature "vpn-common:rtg-rip";
        description
          "Configuration specific to RIP routing.";
        uses rip-svc;
      }
      container vrrp {
        when "derived-from-or-self(../type, "
           + "'vpn-common:vrrp-routing')" {
          description
            "Only applies when the protocol is the Virtual Router
             Redundancy Protocol (VRRP).";
        }
        if-feature "vpn-common:rtg-vrrp";
        description
          "Configuration specific to VRRP.";
        uses vrrp-svc;
      }
    }
  }

  // Encryption choice

  grouping encryption-choice {
    description
      "Container for the encryption profile.";
    choice profile {
      description
        "Choice for the encryption profile.";
      case provider-profile {
        leaf provider-profile {
          type encryption-profile-reference;
          description
            "Reference to a provider encryption profile.";
        }
      }
      case customer-profile {
        leaf customer-key-chain {
          type key-chain:key-chain-ref;
          description
            "Customer-supplied key chain.";
        }
      }
    }
  }

  // Basic security parameters

  grouping ac-security-basic {
    description
      "AC-specific security parameters.";
    container encryption {
      if-feature "vpn-common:encryption";
      description
        "Container for AC security encryption.";
      leaf enabled {
        type boolean;
        description
          "If set to 'true', traffic encryption on the connection
           is required.  Otherwise, it is disabled.";
      }
      leaf layer {
        when "../enabled = 'true'" {
          description
            "Included only when encryption is enabled.";
        }
        type enumeration {
          enum layer2 {
            description
              "Encryption occurs at Layer 2.";
          }
          enum layer3 {
            description
              "Encryption occurs at Layer 3.
               For example, IPsec may be used when a customer 
               requests Layer 3 encryption.";
          }
        }
        description
          "Indicates the layer on which encryption is applied.";
      }
    }
    container encryption-profile {
      when "../encryption/enabled = 'true'" {
        description
          "Indicates the layer on which encryption is enabled.";
      }
      description
        "Container for the encryption profile.";
      uses encryption-choice;
    }
  }

  // Bandwidth parameters

  grouping bandwidth {
    description
      "Container for bandwidth.";
    container svc-pe-to-ce-bandwidth {
      if-feature "vpn-common:inbound-bw";
      description
        "From the customer site's perspective, the inbound
         bandwidth of the AC or download bandwidth from the
         service provider to the site.";
      uses ac-common:bandwidth-per-type;
    }
    container svc-ce-to-pe-bandwidth {
      if-feature "vpn-common:outbound-bw";
      description
        "From the customer site's perspective, the outbound
         bandwidth of the AC or upload bandwidth from
         the CE to the PE.";
      uses ac-common:bandwidth-per-type;
    }
  }

  // Basic AC parameters

  grouping ac-basic {
    description
      "Grouping for basic parameters for an AC.";
    leaf name {
      type string;
      description
        "A name that uniquely identifies the AC.";
    }
    container l2-connection {
      if-feature "ac-common:layer2-ac";
      description
        "Defines Layer 2 protocols and parameters that are required 
         to enable AC connectivity.";
      uses l2-connection-basic;
    }
    container ip-connection {
      if-feature "ac-common:layer3-ac";
      description
        "Defines IP connection parameters.";
      uses ip-connection-basic;
    }
    container routing-protocols {
      description
        "Defines routing protocols.";
      uses routing-basic;
    }
    container oam {
      description
        "Defines the Operations, Administration, and Maintenance
         (OAM) mechanisms used.";
      container bfd {
        if-feature "vpn-common:bfd";
        description
          "Container for BFD.";
        uses ac-common:bfd;
      }
    }
    container security {
      description
        "AC-specific security parameters.";
      uses ac-security-basic;
    }
    container service {
      description
        "AC-specific bandwidth parameters.";
      leaf mtu {
        type uint32;
        units "bytes";
        description
          "Layer 2 MTU.";
      }
      uses bandwidth;
    }
  }


  // Full AC parameters

  grouping ac {
    description
      "Grouping for an AC.";
    leaf name {
      type string;
      description
        "A name of the AC.  Data models that need to reference
         an AC should use 'attachment-circuit-reference'.";
    }
    leaf-list service-profile {
      type service-profile-reference;
      description
        "A reference to a service profile.";
    }
    container l2-connection {
      if-feature "ac-common:layer2-ac";
      description
        "Defines Layer 2 protocols and parameters that are required 
         to enable AC connectivity.";
      uses l2-connection;
    }
    container ip-connection {
      if-feature "ac-common:layer3-ac";
      description
        "Defines IP connection parameters.";
      uses ip-connection;
    }
    container routing-protocols {
      description
        "Defines routing protocols.";
      uses routing;
    }
    container oam {
      description
        "Defines the OAM mechanisms used.";
      container bfd {
        if-feature "vpn-common:bfd";
        description
          "Container for BFD.";
        list session {
          key "id";
          description
            "List of BFD sessions.";
          leaf id {
            type string;
            description
              "A unique identifier for the BFD session.";
          }
          leaf local-address {
            type inet:ip-address;
            description
              "Provider's IP address of the BFD session.";
          }
          leaf remote-address {
            type inet:ip-address;
            description
              "Customer's IP address of the BFD session.";
          }
          leaf profile {
            type failure-detection-profile-reference;
            description
              "Points to a BFD profile.";
          }
          uses ac-common:bfd;
          uses ac-common:service-status;
        } 
      }
    }
    container security {
      description
        "AC-specific security parameters.";
      uses ac-security-basic;
    }
    container service {
      description
        "AC-specific bandwidth parameters.";
      leaf mtu {
        type uint32;
        units "bytes";
        description
          "Layer 2 MTU.";
      }
      uses bandwidth;
      container qos {
        if-feature "vpn-common:qos";
        description
          "QoS configuration.";
        container qos-profiles {
          description
            "QoS profile configuration.";
          list qos-profile {
            key "profile";
            description
              "Points to a QoS profile.";
            leaf profile {
              type qos-profile-reference;
              description
                "QoS profile to be used.";
            }
            leaf direction {
              type identityref {
                base vpn-common:qos-profile-direction;
              }
              description
                "The direction to which the QoS profile is applied.";
            }
          }
        }
      }
      container access-control-list {
        description
          "Container for the Access Control List (ACL).";
        container acl-profiles {
          description
            "ACL profile configuration.";
          list acl-profile {
            key "profile";
            description
              "Points to an ACL profile.";
            leaf profile {
              type forwarding-profile-reference;
              description
                "Forwarding profile to be used.";
            }
          }
        }
      }
    }
  }

  // Parent and Child ACs

  grouping ac-hierarchy {
    description
      "Container for parent and Child AC references.";
    leaf-list parent-ref {
      type ac-svc:attachment-circuit-reference;
      description
        "Specifies a Parent AC that is inherited by an AC.
         In contexts where dynamic termination points are 
         bound to the same AC, a Parent AC with stable
         information is created with a set of Child ACs
         to track dynamic AC information.";
    }
    leaf-list child-ref {
      type ac-svc:attachment-circuit-reference;
      config false;
      description
        "Specifies a Child AC that relies upon a Parent AC.";
    }
  }

  /******************** Main AC containers ********************/

  container specific-provisioning-profiles {
    description
      "Contains a set of valid profiles to reference for an AC.";
    uses ac-common:ac-profile-cfg;
  }
  container service-provisioning-profiles {
    description
      "Contains a set of valid profiles to reference for an AC.";
    list service-profile-identifier {
      key "id";
      description
        "List of generic service profile identifiers.";
      leaf id {
        type string;
        description
          "Identification of the service profile to be used.
           The profile only has significance within the service
           provider's administrative domain.";
      }
    }
    nacm:default-deny-write;
  }
  container attachment-circuits {
    description
      "Main container for the ACs.
       The timing constraints indicated at the 'ac' level take
       precedence over the values indicated at the
       'attachment-circuits' level.";
    list ac-group-profile {
      key "name";
      description
        "Maintains a list of profiles that are shared among
         a set of ACs.";
      uses ac;
    }
    container placement-constraints {
      description
        "Diversity constraint type.";
      uses vpn-common:placement-constraints;
    }
    leaf customer-name {
      type string;
      description
        "Indicates the name of the customer that requested these
         ACs.";
    }
    uses ac-common:op-instructions;
    list ac {
      key "name";
      description
        "Provisioning of an AC.";
      leaf customer-name {
        type string;
        description
          "Indicates the name of the customer that requested this
           AC.";
      }
      leaf description {
        type string;
        description
          "Associates a description with an AC.";
      }
      leaf test-only {
        type empty;
        description
          "When present, this indicates that this is a feasibility
           check request.  No resources are committed for such AC 
           requests.";
      }
      uses ac-common:op-instructions;
      leaf role {
        type identityref {
          base ac-common:role;
        }
        description
          "Indicates whether this AC is used as UNI, NNI, etc.";
      }
      leaf-list peer-sap-id {
        type string;
        description
          "One or more peer SAPs can be indicated.";
      }
      leaf-list group-profile-ref {
        type ac-group-reference;
        description
          "A reference to an AC profile.";
      }
      uses ac-hierarchy;
      uses ac-common:redundancy-group;
      list service-ref {
        key "service-type service-id";
        config false;
        description
          "Reports the set of services that are bound to the AC.";
        leaf service-type {
          type identityref {
            base vpn-common:service-type;
          }
          description
            "Indicates the service type (e.g., L3VPN or RFC 9543 
             Network Slice Service).";
          reference
            "RFC 9408: A YANG Network Data Model for Service 
                       Attachment Points (SAPs), Section 5";
        }
        leaf service-id {
          type string;
          description
            "Indicates an identifier of a service instance
             of a given type that uses the AC.";
        }
      }
      leaf server-reference {
        if-feature "ac-common:server-assigned-reference";
        type string;
        config false;
        description
          "Reports an internal reference for the service provider
           to identify the AC.";
      }
      uses ac;
    }
  }
}
]]></sourcecode>
      </section>
    </section>
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <t>This section is modeled after the template described in <xref section="3.7.1" sectionFormat="of" target="I-D.ietf-netmod-rfc8407bis"/>.</t>
      <t>The "ietf-bearer-svc" and "ietf-ac-svc" YANG modules define data models that are
designed to be accessed via YANG-based management protocols, such as
   NETCONF <xref target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>. These protocols have to
   use a secure transport layer (e.g., SSH <xref target="RFC4252"/>, TLS <xref target="RFC8446"/>, and
      QUIC <xref target="RFC9000"/>) and have to use mutual authentication.</t>
      <t>Servers <bcp14>MUST</bcp14> verify that requesting clients are entitled to access
   and manipulate a given bearer or AC. For example, a given customer must not have access to bearers/ACs of other customers.
   The Network Configuration Access Control Model (NACM) <xref target="RFC8341"/>
   provides the means to restrict access for particular NETCONF or
   RESTCONF users to a preconfigured subset of all available NETCONF or
   RESTCONF protocol operations and content.</t>
      <t>There are a number of data nodes defined in these YANG modules that are
   writable/creatable/deletable (i.e., "config true", which is the
   default).  All writable data nodes are likely to be reasonably sensitive or vulnerable
   in some network environments.  Write operations (e.g., edit-config)
   and delete operations to these data nodes without proper protection
   or authentication can have a negative effect on network operations.
   The following subtrees and data nodes have particular
sensitivities/vulnerabilities in the "ietf-bearer-svc" module:</t>
      <dl spacing="normal" newline="false">
        <dt>'placement-constraints':</dt>
        <dd>
          <t>An attacker who is able to access this data node can modify the
   attributes to influence how a service is delivered to a customer, and
   this leads to Service Level Agreement (SLA) violations.</t>
        </dd>
        <dt>'bearer':</dt>
        <dd>
          <t>An attacker who is able to access this data node can modify
	  the attributes of bearer and thus hinder how ACs are built.</t>	  
          <t>In addition, an attacker could attempt to add a new bearer or
   delete existing ones. An attacker may also change the requested
   type, whether it is for test-only, or the activation scheduling.</t>
        </dd>
      </dl>

      <t>The following subtrees and data nodes have particular
sensitivities/vulnerabilities in the "ietf-ac-svc" module:</t>
      <dl spacing="normal" newline="false">
        <dt>'specific-provisioning-profiles':</dt>
        <dd>
          <t>This container includes a set of sensitive data that influences
          how an AC will be delivered. For example, an attacker who has access
          to these data nodes may be able to manipulate routing policies, QoS
          policies, or encryption properties.</t>
          <t>These profiles are defined with "nacm:default-deny-write" tagging
          <xref target="RFC9833"/>.</t>
        </dd>
        <dt>'service-provisioning-profiles':</dt>
        <dd>
          <t>An attacker who has access to these data nodes may be able to
          manipulate service-specific policies to be applied for an AC.</t>
          <t>This container is defined with "nacm:default-deny-write" tagging.</t>
        </dd>
        <dt>'ac':</dt>
        <dd>
          <t>An attacker who is able to access this data node can modify the
          attributes of an AC (e.g., QoS, bandwidth, routing protocols, keying
          material), leading to malfunctioning of services that will be
          delivered over that AC and therefore to SLA violations.  In
          addition, an attacker could attempt to add a new AC.</t>
        </dd>
      </dl>
      <t>Some of the readable data nodes in these YANG modules may be considered
   sensitive or vulnerable in some network environments.  It is thus
   important to control read access (e.g., via get, get-config, or
   notification) to these data nodes. Specifically, the following subtrees and data nodes have particular
sensitivities/vulnerabilities in the "ietf-bearer-svc" module:</t>
      <dl spacing="normal" newline="false">
        <dt>'customer-name', 'customer-point' and 'locations':</dt>
        <dd>
          <t>An attacker can retrieve privacy-related information about
          locations from where the customer is connected or can be
          serviced. Disclosing such information may be used to infer the
          identity of the customer.</t>
        </dd>
      </dl>

      <t>The following subtrees and data nodes have particular
sensitivities/vulnerabilities in the "ietf-ac-svc" module:</t>
      <dl spacing="normal" newline="false">
        <dt>'customer-name', 'l2-connection', and 'ip-connection':</dt>
        <dd>
          <t>An attacker can retrieve privacy-related information, which can
          be used to track a customer.  Disclosing such information may be
          considered a violation of the customer-provider trust
          relationship.</t>
        </dd>
        <dt>'keying-material':</dt>
        <dd>
          <t>An attacker can retrieve the cryptographic keys protecting the
          underlying connectivity services (routing, in particular).  These
          keys could be used to inject spoofed routing advertisements.</t>
        </dd>
      </dl>
      <t>There are no particularly sensitive RPC or action operations.</t>
      <t>Several data nodes ('bgp', 'ospf', 'isis', 'rip', and 'customer-key-chain') rely
   upon the key chains described in <xref target="RFC8177"/> for authentication purposes.  As such, the AC service module
   inherits the security considerations discussed in
   <xref section="5" sectionFormat="of" target="RFC8177"/>.  Also, these data nodes support supplying explicit keys as
   strings in ASCII format.  The use of keys in hexadecimal string
   format would afford greater key entropy with the same number of
   key-string octets.  However, such a format is not included in this
   version of the AC service model because it is not supported by the underlying
   device modules (e.g., <xref target="RFC8695"/>).</t>
   <t><xref target="sec-sec"/> specifies a set of encryption-related parameters that can be applied to traffic for a given AC.</t>      
    </section>
    <section anchor="iana-considerations">
      <name>IANA Considerations</name>
      <t>IANA has registered the following URIs in the "ns" subregistry within
   the "IETF XML Registry" <xref target="RFC3688"/>:</t>
   <dl spacing="compact" newline="false">
     <dt>URI:</dt><dd>urn:ietf:params:xml:ns:yang:ietf-bearer-svc</dd>
     <dt>Registrant Contact:</dt><dd>The IESG.</dd>
     <dt>XML:</dt><dd>N/A; the requested URI is an XML namespace.</dd>
   </dl>
   <dl spacing="compact" newline="false">
     <dt>URI:</dt><dd>urn:ietf:params:xml:ns:yang:ietf-ac-svc</dd>
     <dt>Registrant Contact:</dt><dd>The IESG.</dd>
     <dt>XML:</dt><dd>N/A; the requested URI is an XML namespace.</dd>
   </dl>
      <t>IANA has registered the following YANG modules in the "YANG Module
   Names" registry <xref target="RFC6020"/> within the "YANG Parameters" registry group.</t>

   <dl spacing="compact" newline="false">
     <dt>Name:</dt><dd>ietf-bearer-svc</dd>
     <dt>Maintained by IANA?</dt><dd>N</dd>
     <dt>Namespace:</dt><dd>urn:ietf:params:xml:ns:yang:ietf-bearer-svc</dd>
     <dt>Prefix:</dt><dd>bearer-svc</dd>
     <dt>Reference:</dt><dd>RFC 9834</dd>
   </dl>
   <dl spacing="compact" newline="false">
     <dt>Name:</dt><dd>ietf-ac-svc</dd>
     <dt>Maintained by IANA?</dt><dd>N</dd>
     <dt>Namespace:</dt><dd>urn:ietf:params:xml:ns:yang:ietf-ac-svc</dd>
     <dt>Prefix:</dt><dd>ac-svc</dd>
     <dt>Reference:</dt><dd>RFC 9834</dd>
   </dl>
    </section>
  </middle>
  <back>
    <displayreference target="I-D.ietf-grow-peering-api" to ="PEERING-API"/>
    <displayreference target="I-D.ietf-idr-bgp-model" to="BGP4-YANG"/>
    <displayreference target="I-D.ietf-netmod-rfc8407bis" to="YANG-GUIDELINES"/>
    <displayreference target="I-D.ietf-teas-ietf-network-slice-nbi-yang" to="NSSM"/>
    <references anchor="sec-combined-references">
      <name>References</name>
      <references anchor="sec-normative-references">
        <name>Normative References</name>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4271.xml"/>	
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9408.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8342.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9181.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8341.xml"/>	

<reference anchor="RFC9833" target="https://www.rfc-editor.org/info/rfc9833">
  <front>
      <title>A Common YANG Data Model for Attachment Circuits</title>
      <author initials="M." surname="Boucadair" fullname="Mohamed Boucadair" role="editor">
         <organization>Orange</organization>
      </author>
      <author initials="R." surname="Roberts" fullname="Richard Roberts" role="editor">
         <organization>Juniper</organization>
      </author>
      <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
         <organization>Telefonica</organization>
      </author>
      <author initials="S." surname="Barguil" fullname="Samier Barguil">
         <organization>Nokia</organization>
      </author>
      <author initials="B." surname="Wu" fullname="Bo Wu">
         <organization>Huawei Technologies</organization>
      </author>
    <date month='September' year='2025'/>
  </front>
  <seriesInfo name="RFC" value="9833"/>
  <seriesInfo name="DOI" value="10.17487/RFC9833"/>
</reference>

        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6991.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8177.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4364.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9568.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9182.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9291.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5880.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4577.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6565.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5709.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7474.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7166.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3688.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6020.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8792.xml"/>
      </references>
      <references anchor="sec-informative-references">
        <name>Informative References</name>

        <reference anchor="Instance-Data" target="https://github.com/boucadair/attachment-circuit-model/blob/main/xml-examples/svc-full-instance.xml">
          <front>
            <title>Example of AC SVC Instance Data</title>
            <author>
              <organization/>
            </author>
            <date month="August" year="2024"/>
          </front>
          <refcontent>Commit 8081bb7</refcontent>
        </reference>

        <reference anchor="IEEE802.1AB" target="">
          <front>
            <title>IEEE Standard for Local and metropolitan area networks - Station and Media Access Control Connectivity Discovery</title>
            <author>
              <organization>IEEE</organization>
            </author>
            <date year="2016" month="January"/>
          </front>
          <seriesInfo name="IEEE Std" value="802.1AB-2016"/>
          <seriesInfo name="DOI" value="10.1109/IEEESTD.2016.7433915"/>
        </reference>

        <reference anchor="IEEE802.1AX" target="https://doi.org/10.1109/IEEESTD.2020.9105034">
          <front>
            <title>IEEE Standard for Local and Metropolitan Area Networks--Link Aggregation</title>
            <author>
              <organization>IEEE</organization>
            </author>
            <date year="2020" month="May"/>
          </front>
          <seriesInfo name="IEEE Std" value="802.1AX-2020"/>
          <seriesInfo name="DOI" value="10.1109/IEEESTD.2020.9105034"/>
        </reference>

        <reference anchor="ITU-T-G.781" target="https://www.itu.int/rec/T-REC-G.781">
          <front>
            <title>Synchronization layer functions for frequency synchronization based on the physical layer</title>
            <author>
              <organization>ITU-T</organization>
            </author>
            <date year="2024" month="January"/>
          </front>
          <seriesInfo name="ITU-T Recommendation" value="G.781"/>
        </reference>

        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7665.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9543.xml"/>

<reference anchor="RFC9835" target="https://www.rfc-editor.org/info/rfc9835">
   <front>
      <title>A Network YANG Data Model for Attachment Circuits</title>
      <author initials="M." surname="Boucadair" fullname="Mohamed Boucadair" role="editor">
         <organization>Orange</organization>
      </author>
      <author initials="R." surname="Roberts" fullname="Richard Roberts">
         <organization>Juniper</organization>
      </author>
      <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
         <organization>Telefonica</organization>
      </author>
      <author initials="S." surname="Barguil" fullname="Samier Barguil">
         <organization>Nokia</organization>
      </author>
      <author initials="B." surname="Wu" fullname="Bo Wu">
         <organization>Huawei Technologies</organization>
      </author>
      <date month="September" year="2025" />
   </front>
   <seriesInfo name="RFC" value="9835" />
   <seriesInfo name="DOI" value="10.17487/RFC9835"/>
</reference>

<reference anchor="RFC9836" target="https://datatracker.ietf.org/doc/html/draft-ietf-opsawg-ac-lxsm-lxnm-glue-14">
   <front>
      <title>A YANG Data Model for Augmenting VPN Service and Network Models with Attachment Circuits</title>
      <author initials="M." surname="Boucadair" fullname="Mohamed Boucadair" role="editor">
         <organization>Orange</organization>
      </author>
      <author initials="R." surname="Roberts" fullname="Richard Roberts">
         <organization>Juniper</organization>
      </author>
      <author initials="S." surname="Barguil" fullname="Samier Barguil">
         <organization>Nokia</organization>
      </author>
      <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
         <organization>Telefonica</organization>
      </author>
      <date month="September" year="2025" />
   </front>
   <seriesInfo name="RFC" value="9836" />   
  <seriesInfo name="DOI" value="10.17487/RFC9836"/>
</reference>

        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8466.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8299.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8921.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-grow-peering-api.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8309.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8969.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8349.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-idr-bgp-model.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8340.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4026.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7607.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3644.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9234.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5925.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2453.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2080.xml"/>

<reference anchor="I-D.ietf-netmod-rfc8407bis" target="https://datatracker.ietf.org/doc/html/draft-ietf-netmod-rfc8407bis-28">
   <front>
      <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
      <author initials="A." surname="Bierman" fullname="Andy Bierman">
         <organization>YumaWorks</organization>
      </author>
      <author initials="M." surname="Boucadair" fullname="Mohamed Boucadair" role="editor">
         <organization>Orange</organization>
      </author>
      <author initials="Q." surname="Wu" fullname="Qin Wu">
         <organization>Huawei</organization>
      </author>
      <date month="June" day="5" year="2025" />
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netmod-rfc8407bis-28"/>   
</reference>

        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8695.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-teas-ietf-network-slice-nbi-yang.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6151.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6952.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.0826.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4861.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6241.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8040.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4252.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml"/>	
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9000.xml"/>	
      </references>
    </references>
    <?line 3692?>

<section anchor="examples">
      <name>Examples</name>
      <t>This section includes a non-exhaustive list of examples to illustrate the use of the service models defined in this document. An example of instance data can also be found at <xref target="Instance-Data"/>.</t>
      <t>Some of the examples below use line wrapping per <xref target="RFC8792"/>.</t>
      <section anchor="ex-create-bearer">
        <name>Create a New Bearer</name>
        <t>An example of a request message body to create a bearer is shown in <xref target="create-bearer"/>.</t>
        <figure anchor="create-bearer">
          <name>Example of a Message Body to Create a New Bearer</name>
          <sourcecode type="json"><![CDATA[
{
  "ietf-bearer-svc:bearers": {
    "bearer": [
      {
        "name": "a-name-chosen-by-client",
        "description": "A bearer example",
        "customer-point": {
          "identified-by": "ietf-bearer-svc:device-id",
          "device": {
            "device-id": "CE_X_SITE_Y"
          }
        },
        "type": "ietf-bearer-svc:ethernet"
      }
    ]
  }
}
]]></sourcecode>
        </figure>
        <t>A 'bearer-reference' is then generated by the controller for this bearer. <xref target="get-bearer"/> shows the example of a response message body that is sent by the controller to reply to a GET request:</t>
        <figure anchor="get-bearer">
          <name>Example of a Response Message Body with the Bearer Reference</name>
          <sourcecode type="json"><![CDATA[
{
  "ietf-bearer-svc:bearers": {
    "bearer": [
      {
        "name": "a-name-chosen-by-client",
        "description": "A bearer example",
        "sync-phy-capable": true,
        "customer-point": {
          "identified-by": "ietf-bearer-svc:device-id",
          "device": {
            "device-id": "CE_X_SITE_Y"
          }
        },
        "type": "ietf-bearer-svc:ethernet",
        "bearer-reference": "line-156"
      }
    ]
  }
}
  
]]></sourcecode>
        </figure>
        <t>Note that the response also indicates that Sync Phy mechanism is supported for this bearer.</t>
      </section>
      <section anchor="ac-bearer-exist">
        <name>Create an AC over an Existing Bearer</name>
        <t>An example of a request message body to create a simple AC over an existing bearer is shown in <xref target="ac-b"/>. The bearer reference is assumed to be known to both the customer and the network provider. Such a reference can be retrieved, e.g., following the example described in <xref target="ex-create-bearer"/> or using other means (including exchanged out-of-band or via proprietary APIs).</t>
        <figure anchor="ac-b">
          <name>Example of a Message Body to Request an AC over an Existing Bearer</name>
          <sourcecode type="json"><![CDATA[
{
  "ietf-ac-svc:attachment-circuits": {
    "ac": [
      {
        "name": "ac4585",
        "description": "An AC on an existing bearer",
        "requested-start": "2023-12-12T05:00:00.00Z",
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q"
          },
          "bearer-reference": "line-156"
        }
      }
    ]
  }
}
]]></sourcecode>
        </figure>
        <t><xref target="ac-br"/> shows the message body of a GET response received from the controller and that indicates the 'cvlan-id' that was assigned for the requested AC.</t>
        <figure anchor="ac-br">
          <name>Example of a Message Body of a Response to Assign a Customer VLAN (C-VLAN) ID</name>
          <sourcecode type="json"><![CDATA[
{
  "ietf-ac-svc:attachment-circuits": {
    "ac": [
      {
        "name": "ac4585",
        "description": "An AC on an existing bearer",
        "actual-start": "2023-12-12T05:00:00.00Z",
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "tag-type": "ietf-vpn-common:c-vlan",
              "cvlan-id": 550
            }
          },
          "bearer-reference": "line-156"
        }
      }
    ]
  }
}
]]></sourcecode>
        </figure>
      </section>
      <section anchor="ac-no-bearer-peer-sap">
        <name>Create an AC for a Known Peer SAP</name>
        <t>An example of a request to create a simple AC, when the peer SAP is known, is shown in <xref target="ac-known-ps"/>. In this example, the peer SAP identifier points to an identifier of an SF. The (topological) location of that SF is assumed to be known to the network controller. For example, this can be determined as part of an on-demand procedure to instantiate an SF in a cloud. That instantiated SF can be granted a connectivity service via the provider network.</t>
        <figure anchor="ac-known-ps">
          <name>Example of a Message Body to Request an AC with a Peer SAP</name>
          <sourcecode type="json"><![CDATA[
{
  "ietf-ac-svc:attachment-circuits": {
    "ac": [
      {
        "name": "ac4585",
        "description": "An AC for a known peer SAP",
        "requested-start": "2025-12-12T05:00:00.00Z",
        "peer-sap-id": [
          "nf-termination-ip"
        ]
      }
    ]
  }
}
]]></sourcecode>
        </figure>
        <t><xref target="ac-known-ps-res"/> shows the received GET response with the required information to connect the SF.</t>
        <figure anchor="ac-known-ps-res">
          <name>Example of a Message Body of a Response to Create an AC with a Peer SAP</name>
          <sourcecode type="json"><![CDATA[
{
  "ietf-ac-svc:attachment-circuits": {
    "ac": [
      {
        "name": "ac4585",
        "description": "An AC for a known peer SAP",
        "actual-start": "2025-12-12T05:00:00.00Z",
        "peer-sap-id": [
          "nf-termination-ip"
        ],
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "tag-type": "ietf-vpn-common:c-vlan",
              "cvlan-id": 550
            }
          }
        }
      }
    ]
  }
}
]]></sourcecode>
        </figure>
      </section>
      <section anchor="sec-ex-one-ce-multi-acs">
        <name>One CE, Two ACs</name>
        <t>Let us consider the example of an eNodeB (CE) that is directly connected to the access routers of the mobile backhaul (see <xref target="enodeb"/>). In this example, two ACs are needed to service the eNodeB (e.g., distinct VLANs for control and user planes).</t>
        <figure anchor="enodeb">
          <name>Example of CE-PE ACs</name>
          <artset>
            <artwork type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="240" width="432" viewBox="0 0 432 240" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,160" fill="none" stroke="black"/>
                <path d="M 120,32 L 120,160" fill="none" stroke="black"/>
                <path d="M 272,32 L 272,224" fill="none" stroke="black"/>
                <path d="M 424,32 L 424,224" fill="none" stroke="black"/>
                <path d="M 8,32 L 120,32" fill="none" stroke="black"/>
                <path d="M 272,32 L 424,32" fill="none" stroke="black"/>
                <path d="M 120,64 L 184,64" fill="none" stroke="black"/>
                <path d="M 216,64 L 272,64" fill="none" stroke="black"/>
                <path d="M 120,112 L 184,112" fill="none" stroke="black"/>
                <path d="M 216,112 L 272,112" fill="none" stroke="black"/>
                <path d="M 8,160 L 120,160" fill="none" stroke="black"/>
                <path d="M 272,224 L 424,224" fill="none" stroke="black"/>
                <g class="text">
                  <text x="292" y="52">PE</text>
                  <text x="200" y="68">ac1</text>
                  <text x="328" y="68">192.0.2.1</text>
                  <text x="60" y="84">eNodeB</text>
                  <text x="220" y="84">VLAN</text>
                  <text x="248" y="84">1</text>
                  <text x="336" y="84">2001:db8::1</text>
                  <text x="220" y="100">VLAN</text>
                  <text x="248" y="100">2</text>
                  <text x="200" y="116">ac2</text>
                  <text x="156" y="148">Direct</text>
                  <text x="160" y="164">Routing</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art"><![CDATA[
.-------------.                  .------------------.
|             |                  | PE               |
|             +--------ac1-------+  192.0.2.1       |
|   eNodeB    |          VLAN 1  |  2001:db8::1     |
|             |          VLAN 2  |                  |
|             +--------ac2-------+                  |
|             |                  |                  |
|             | Direct           |                  |
'-------------' Routing          |                  |
                                 |                  |
                                 |                  |
                                 |                  |
                                 '------------------'
]]></artwork>
          </artset>
        </figure>
        <t>An example of a request to create the ACs to service the eNodeB is shown in <xref target="two-acs-same-ce"/>. This example assumes that static addressing is used for both ACs.</t>
        <figure anchor="two-acs-same-ce">
          <name>Example of a Message Body to Request Two ACs on the Same Link (Not Recommended)</name>
          <sourcecode type="json"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "ietf-ac-svc:attachment-circuits": {
    "ac": [
      {
        "name": "ac1",
        "description": "a first AC with a same peer node",
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q"
          },
          "bearer-reference": "line-156"
        },
        "ip-connection": {
          "ipv4": {
            "address-allocation-type": "ietf-ac-common:static-\
                                                             address"
          },
          "ipv6": {
            "address-allocation-type": "ietf-ac-common:static-\
                                                             address"
          }
        },
        "routing-protocols": {
          "routing-protocol": [
            {
              "id": "1",
              "type": "ietf-vpn-common:direct-routing"
            }
          ]
        }
      },
      {
        "name": "ac2",
        "description": "a second AC with a same peer node",
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q"
          },
          "bearer-reference": "line-156"
        },
        "ip-connection": {
          "ipv4": {
            "address-allocation-type": "ietf-ac-common:static-\
                                                             address"
          },
          "ipv6": {
            "address-allocation-type": "ietf-ac-common:static-\
                                                             address"
          }
        },
        "routing-protocols": {
          "routing-protocol": [
            {
              "id": "1",
              "type": "ietf-vpn-common:direct-routing"
            }
          ]
        }
      }
    ]
  }
}
]]></sourcecode>
        </figure>
        <t><xref target="two-acs-same-ce-res"/> shows the message body of a GET response received from the controller.</t>
        <figure anchor="two-acs-same-ce-res">
          <name>Example of a Message Body of a Response to Create Two ACs on the Same Link (Not Recommended)</name>
          <sourcecode type="json"><![CDATA[
{
  "ietf-ac-svc:attachment-circuits": {
    "ac": [
      {
        "name": "ac1",
        "description": "a first AC with a same peer node",
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "cvlan-id": 1
            }
          },
          "bearer-reference": "line-156"
        },
        "ip-connection": {
          "ipv4": {
            "local-address": "192.0.2.1",
            "prefix-length": 30,
            "address": [
              {
                "address-id": "1",
                "customer-address": "192.0.2.2"
              }
            ]
          },
          "ipv6": {
            "local-address": "2001:db8::1",
            "prefix-length": 64,
            "address": [
              {
                "address-id": "1",
                "customer-address": "2001:db8::2"
              }
            ]
          }
        },
        "routing-protocols": {
          "routing-protocol": [
            {
              "id": "1",
              "type": "ietf-vpn-common:direct-routing"
            }
          ]
        }
      },
      {
        "name": "ac2",
        "description": "a second AC with a same peer node",
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "cvlan-id": 2
            }
          },
          "bearer-reference": "line-156"
        },
        "ip-connection": {
          "ipv4": {
            "local-address": "192.0.2.1",
            "prefix-length": 30,
            "address": [
              {
                "address-id": "1",
                "customer-address": "192.0.2.2"
              }
            ]
          },
          "ipv6": {
            "local-address": "2001:db8::1",
            "prefix-length": 64,
            "address": [
              {
                "address-id": "1",
                "customer-address": "2001:db8::2"
              }
            ]
          }
        },
        "routing-protocols": {
          "routing-protocol": [
            {
              "id": "1",
              "type": "ietf-vpn-common:direct-routing"
            }
          ]
        }
      }
    ]
  }
}
]]></sourcecode>
        </figure>
        <t>The example shown <xref target="two-acs-same-ce-res"/> is not optimal as it includes many redundant data. <xref target="two-acs-same-ce-node-profile"/> shows a more compact request that factorizes all the redundant data.</t>
        <figure anchor="two-acs-same-ce-node-profile">
          <name>Example of a Message Body to Request Two ACs on the Same Link (Node Profile)</name>
          <sourcecode type="json"><![CDATA[
{
  "ietf-ac-svc:attachment-circuits": {
    "ac-group-profile": [
      {
        "name": "simple-node-profile",
        "l2-connection": {
          "bearer-reference": "line-156"
        },
        "ip-connection": {
          "ipv4": {
            "local-address": "192.0.2.1",
            "prefix-length": 30,
            "address": [
              {
                "address-id": "1",
                "customer-address": "192.0.2.2"
              }
            ]
          },
          "ipv6": {
            "local-address": "2001:db8::1",
            "prefix-length": 64,
            "address": [
              {
                "address-id": "1",
                "customer-address": "2001:db8::2"
              }
            ]
          }
        },
        "routing-protocols": {
          "routing-protocol": [
            {
              "id": "1",
              "type": "ietf-vpn-common:direct-routing"
            }
          ]
        }
      }
    ],
    "ac": [
      {
        "name": "ac1",
        "description": "a first AC with a same peer node",
        "group-profile-ref": ["simple-node-profile"],
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "cvlan-id": 1
            }
          }
        }
      },
      {
        "name": "ac2",
        "description": "a second AC with a same peer node",
        "group-profile-ref": ["simple-node-profile"],
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "cvlan-id": 2
            }
          }
        }
     }
    ]
  }
}
]]></sourcecode>
        </figure>
        <t>A customer may request adding a new AC by simply referring to an existing per-node AC profile as shown in <xref target="add-ac-same-ce-node-profile"/>. This AC inherits all the data that was enclosed in the indicated per-node AC profile (IP addressing, routing, etc.).</t>
        <figure anchor="add-ac-same-ce-node-profile">
          <name>Example of a Message Body to Add a New AC over an Existing Link (Node Profile)</name>
          <sourcecode type="json"><![CDATA[
{
  "ietf-ac-svc:attachment-circuits": {
    "ac-group-profile": [
      {
        "name": "simple-node-profile"
      }
    ],
    "ac": [
      {
        "name": "ac3",
        "description": "a third AC with a same peer node",
        "group-profile-ref": [
          "simple-node-profile"
        ],
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "cvlan-id": 3
            }
          },
          "bearer-reference": "line-156"
        }
      }
    ]
  }
}
]]></sourcecode>
        </figure>
      </section>
      <section anchor="sec-ex-prec">
        <name>Control Precedence over Multiple ACs</name>
        <t>When multiple ACs are requested by the same customer for the same site, the request can tag one of these ACs as 'primary' and the other ones as 'secondary'. An example of such a request is shown in <xref target="ac-precedence"/>. In this example, both ACs are bound to the same 'group-id', and the 'precedence' data node is set as a function of the intended role of each AC (primary or secondary).</t>
        <figure anchor="multipleac">
          <name>An Example Topology for AC Precedence Enforcement</name>
          <artset>
            <artwork type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="208" width="312" viewBox="0 0 312 208" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,96 L 8,144" fill="none" stroke="black"/>
                <path d="M 40,80 L 40,128" fill="none" stroke="black"/>
                <path d="M 104,64 L 104,96" fill="none" stroke="black"/>
                <path d="M 104,128 L 104,160" fill="none" stroke="black"/>
                <path d="M 272,32 L 272,96" fill="none" stroke="black"/>
                <path d="M 272,128 L 272,192" fill="none" stroke="black"/>
                <path d="M 304,32 L 304,96" fill="none" stroke="black"/>
                <path d="M 304,128 L 304,192" fill="none" stroke="black"/>
                <path d="M 272,32 L 304,32" fill="none" stroke="black"/>
                <path d="M 104,64 L 272,64" fill="none" stroke="black"/>
                <path d="M 24,80 L 40,80" fill="none" stroke="black"/>
                <path d="M 40,96 L 104,96" fill="none" stroke="black"/>
                <path d="M 272,96 L 304,96" fill="none" stroke="black"/>
                <path d="M 40,128 L 104,128" fill="none" stroke="black"/>
                <path d="M 272,128 L 304,128" fill="none" stroke="black"/>
                <path d="M 8,144 L 24,144" fill="none" stroke="black"/>
                <path d="M 104,160 L 272,160" fill="none" stroke="black"/>
                <path d="M 272,192 L 304,192" fill="none" stroke="black"/>
                <path d="M 24,80 C 15.16936,80 8,87.16936 8,96" fill="none" stroke="black"/>
                <path d="M 24,144 C 32.83064,144 40,136.83064 40,128" fill="none" stroke="black"/>
                <g class="text">
                  <text x="156" y="52">ac1:</text>
                  <text x="208" y="52">primary</text>
                  <text x="288" y="68">PE1</text>
                  <text x="192" y="84">bearerX@site1</text>
                  <text x="20" y="116">CE</text>
                  <text x="156" y="148">ac2:</text>
                  <text x="216" y="148">secondary</text>
                  <text x="288" y="164">PE2</text>
                  <text x="192" y="180">bearerY@site1</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art"><![CDATA[
                                 .---.
                 ac1: primary    |   |
            .--------------------+PE1|
 .--.       |    bearerX@site1   |   |
|   +-------'                    '---'
|CE |
|   +-------.                    .---.
'--'        |    ac2: secondary  |   |
            '--------------------+PE2|
                 bearerY@site1   |   |
                                 '---'
]]></artwork>
          </artset>
        </figure>
        <figure anchor="ac-precedence">
          <name>Example of a Message Body to Associate a Precedence Level with ACs</name>
          <sourcecode type="json"><![CDATA[
{
  "ietf-ac-svc:attachment-circuits": {
    "ac": [
      {
        "name": "ac1",
        "description": "A primary AC",
        "group": [
          {
            "group-id": "1",
            "precedence": "ietf-ac-common:primary"
          }
        ],
        "l2-connection": {
          "bearer-reference": "bearerX@site1"
        }
      },
      {
        "name": "ac2",
        "description": "A secondary AC",
        "group": [
          {
            "group-id": "1",
            "precedence": "ietf-ac-common:secondary"
          }
        ],
        "l2-connection": {
          "bearer-reference": "bearerY@site1"
        }
      }
    ]
  }
}
]]></sourcecode>
        </figure>
      </section>
      <section anchor="sec-multiple-ces">
        <name>Create Multiple ACs Bound to Multiple CEs</name>
        <t><xref target="network-example"/> shows an example of CEs that are interconnected by a service provider network.</t>
        <figure anchor="network-example">
          <name>Network Topology Example</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="192" width="504" viewBox="0 0 504 192" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,64 L 8,80" fill="none" stroke="black"/>
                <path d="M 8,128 L 8,144" fill="none" stroke="black"/>
                <path d="M 48,48 L 48,64" fill="none" stroke="black"/>
                <path d="M 48,112 L 48,128" fill="none" stroke="black"/>
                <path d="M 112,32 L 112,160" fill="none" stroke="black"/>
                <path d="M 392,32 L 392,160" fill="none" stroke="black"/>
                <path d="M 456,64 L 456,80" fill="none" stroke="black"/>
                <path d="M 456,128 L 456,144" fill="none" stroke="black"/>
                <path d="M 496,48 L 496,64" fill="none" stroke="black"/>
                <path d="M 496,112 L 496,128" fill="none" stroke="black"/>
                <path d="M 112,32 L 392,32" fill="none" stroke="black"/>
                <path d="M 24,48 L 48,48" fill="none" stroke="black"/>
                <path d="M 472,48 L 496,48" fill="none" stroke="black"/>
                <path d="M 48,64 L 112,64" fill="none" stroke="black"/>
                <path d="M 392,64 L 456,64" fill="none" stroke="black"/>
                <path d="M 8,80 L 32,80" fill="none" stroke="black"/>
                <path d="M 456,80 L 480,80" fill="none" stroke="black"/>
                <path d="M 24,112 L 48,112" fill="none" stroke="black"/>
                <path d="M 472,112 L 496,112" fill="none" stroke="black"/>
                <path d="M 48,128 L 112,128" fill="none" stroke="black"/>
                <path d="M 392,128 L 456,128" fill="none" stroke="black"/>
                <path d="M 8,144 L 32,144" fill="none" stroke="black"/>
                <path d="M 456,144 L 480,144" fill="none" stroke="black"/>
                <path d="M 112,160 L 392,160" fill="none" stroke="black"/>
                <path d="M 24,48 C 15.16936,48 8,55.16936 8,64" fill="none" stroke="black"/>
                <path d="M 472,48 C 463.16936,48 456,55.16936 456,64" fill="none" stroke="black"/>
                <path d="M 32,80 C 40.83064,80 48,72.83064 48,64" fill="none" stroke="black"/>
                <path d="M 480,80 C 488.83064,80 496,72.83064 496,64" fill="none" stroke="black"/>
                <path d="M 24,112 C 15.16936,112 8,119.16936 8,128" fill="none" stroke="black"/>
                <path d="M 472,112 C 463.16936,112 456,119.16936 456,128" fill="none" stroke="black"/>
                <path d="M 32,144 C 40.83064,144 48,136.83064 48,128" fill="none" stroke="black"/>
                <path d="M 480,144 C 488.83064,144 496,136.83064 496,128" fill="none" stroke="black"/>
                <g class="text">
                  <text x="80" y="52">ac1</text>
                  <text x="424" y="52">ac3</text>
                  <text x="32" y="68">CE1</text>
                  <text x="480" y="68">CE3</text>
                  <text x="256" y="100">Network</text>
                  <text x="80" y="116">ac2</text>
                  <text x="424" y="116">ac4</text>
                  <text x="24" y="132">CE2</text>
                  <text x="480" y="132">CE4</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
                   .----------------------------------.
       .---.  ac1  |                                  |  ac3   .---.
      | CE1+-------+                                  +-------+ CE3|
      '---'        |                                  |       '---'
                   |              Network             |
       .---.  ac2  |                                  |  ac4   .---.
      |CE2 +-------+                                  +-------+ CE4|
      '---'        |                                  |       '---'
                   '----------------------------------'
]]></artwork>
          </artset>
        </figure>
        <t>Let's assume that a request to instantiate the various ACs that are shown in <xref target="network-example"/> is sent by the customer. <xref target="multiple-sites"/> depicts the example of the message body of a GET response that is received from the controller.</t>
        <figure anchor="multiple-sites">
          <name>Example of a Message Body of a Request to Create Multiple ACs Bound to Multiple CEs</name>
          <sourcecode type="json"><![CDATA[
{
  "ietf-ac-svc:attachment-circuits": {
    "ac-group-profile": [
      {
        "name": "simple-profile",
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "cvlan-id": 1
            }
          }
        }
      }
    ],
    "ac": [
      {
        "name": "ac1",
        "description": "First site",
        "group-profile-ref": [
          "simple-profile"
        ],
        "l2-connection": {
          "bearer-reference": "ce1-network"
        }
      },
      {
        "name": "ac2",
        "description": "Second Site",
        "group-profile-ref": [
          "simple-profile"
        ],
        "l2-connection": {
          "bearer-reference": "ce2-network"
        }
      },
      {
        "name": "ac3",
        "description": "Third site",
        "group-profile-ref": [
          "simple-profile"
        ],
        "l2-connection": {
          "bearer-reference": "ce3-network"
        }
      },
      {
        "name": "ac4",
        "description": "Another site",
        "group-profile-ref": [
          "simple-profile"
        ],
        "l2-connection": {
          "bearer-reference": "ce4-network"
        }
      }
    ]
  }
}
]]></sourcecode>
        </figure>
      </section>
      <section anchor="sec-ex-slice">
        <name>Binding Attachment Circuits to an IETF Network Slice</name>
        <t>This example shows how the AC service model complements the model defined in "A YANG Data Model for the RFC 9543 Network Slice Service" <xref target="I-D.ietf-teas-ietf-network-slice-nbi-yang"/> to connect a site to an RFC 9543 Network Slice Service.</t>
        <t>First, <xref target="slice-vlan-1"/> describes the end-to-end network topology as well as the orchestration scopes:</t>
        <ul spacing="normal">
          <li>
            <t>The topology is made up of two sites ("site1" and "site2"), interconnected via a Transport Network (e.g., IP/MPLS network). An SF is deployed within each site in a dedicated IP subnet.</t>
          </li>
          <li>
            <t>A 5G Service Management and Orchestration (SMO) is responsible for the deployment of SFs and the indirect management of a local gateway (i.e., CE).</t>
          </li>
          <li>
            <t>An IETF Network Slice Controller (NSC) <xref target="RFC9543"/> is responsible for the deployment of IETF Network Slices across the Transport Network.</t>
          </li>
        </ul>
        <t>SFs are deployed within each site.</t>
        <figure anchor="slice-vlan-1">
          <name>An Example of a Network Topology Used to Deploy Slices</name>
          <artset>
            <artwork type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="520" viewBox="0 0 520 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 32,112 L 32,144" fill="none" stroke="black"/>
                <path d="M 48,144 L 48,176" fill="none" stroke="black"/>
                <path d="M 64,112 L 64,144" fill="none" stroke="black"/>
                <path d="M 64,184 L 64,240" fill="none" stroke="black"/>
                <path d="M 80,48 L 80,80" fill="none" stroke="black"/>
                <path d="M 96,144 L 96,208" fill="none" stroke="black"/>
                <path d="M 128,144 L 128,208" fill="none" stroke="black"/>
                <path d="M 168,184 L 168,304" fill="none" stroke="black"/>
                <path d="M 200,144 L 200,208" fill="none" stroke="black"/>
                <path d="M 216,112 L 216,136" fill="none" stroke="black"/>
                <path d="M 216,208 L 216,240" fill="none" stroke="black"/>
                <path d="M 232,144 L 232,208" fill="none" stroke="black"/>
                <path d="M 280,64 L 280,80" fill="none" stroke="black"/>
                <path d="M 320,144 L 320,208" fill="none" stroke="black"/>
                <path d="M 336,112 L 336,136" fill="none" stroke="black"/>
                <path d="M 336,208 L 336,240" fill="none" stroke="black"/>
                <path d="M 352,144 L 352,208" fill="none" stroke="black"/>
                <path d="M 384,184 L 384,304" fill="none" stroke="black"/>
                <path d="M 424,144 L 424,208" fill="none" stroke="black"/>
                <path d="M 456,144 L 456,208" fill="none" stroke="black"/>
                <path d="M 464,48 L 464,80" fill="none" stroke="black"/>
                <path d="M 480,112 L 480,144" fill="none" stroke="black"/>
                <path d="M 480,184 L 480,240" fill="none" stroke="black"/>
                <path d="M 496,144 L 496,176" fill="none" stroke="black"/>
                <path d="M 512,112 L 512,144" fill="none" stroke="black"/>
                <path d="M 32,80 L 128,80" fill="none" stroke="black"/>
                <path d="M 200,80 L 352,80" fill="none" stroke="black"/>
                <path d="M 424,80 L 504,80" fill="none" stroke="black"/>
                <path d="M 32,112 L 64,112" fill="none" stroke="black"/>
                <path d="M 216,112 L 336,112" fill="none" stroke="black"/>
                <path d="M 480,112 L 512,112" fill="none" stroke="black"/>
                <path d="M 32,144 L 64,144" fill="none" stroke="black"/>
                <path d="M 96,144 L 128,144" fill="none" stroke="black"/>
                <path d="M 200,144 L 232,144" fill="none" stroke="black"/>
                <path d="M 320,144 L 352,144" fill="none" stroke="black"/>
                <path d="M 424,144 L 456,144" fill="none" stroke="black"/>
                <path d="M 480,144 L 512,144" fill="none" stroke="black"/>
                <path d="M 32,176 L 96,176" fill="none" stroke="black"/>
                <path d="M 128,176 L 200,176" fill="none" stroke="black"/>
                <path d="M 352,176 L 424,176" fill="none" stroke="black"/>
                <path d="M 456,176 L 512,176" fill="none" stroke="black"/>
                <path d="M 96,208 L 128,208" fill="none" stroke="black"/>
                <path d="M 200,208 L 232,208" fill="none" stroke="black"/>
                <path d="M 320,208 L 352,208" fill="none" stroke="black"/>
                <path d="M 424,208 L 456,208" fill="none" stroke="black"/>
                <path d="M 216,240 L 336,240" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="512,80 500,74.4 500,85.6" fill="black" transform="rotate(0,504,80)"/>
                <polygon class="arrowhead" points="488,184 476,178.4 476,189.6" fill="black" transform="rotate(270,480,184)"/>
                <polygon class="arrowhead" points="432,80 420,74.4 420,85.6" fill="black" transform="rotate(180,424,80)"/>
                <polygon class="arrowhead" points="392,184 380,178.4 380,189.6" fill="black" transform="rotate(270,384,184)"/>
                <polygon class="arrowhead" points="360,80 348,74.4 348,85.6" fill="black" transform="rotate(0,352,80)"/>
                <polygon class="arrowhead" points="208,80 196,74.4 196,85.6" fill="black" transform="rotate(180,200,80)"/>
                <polygon class="arrowhead" points="176,184 164,178.4 164,189.6" fill="black" transform="rotate(270,168,184)"/>
                <polygon class="arrowhead" points="136,80 124,74.4 124,85.6" fill="black" transform="rotate(0,128,80)"/>
                <polygon class="arrowhead" points="72,184 60,178.4 60,189.6" fill="black" transform="rotate(270,64,184)"/>
                <polygon class="arrowhead" points="40,80 28,74.4 28,85.6" fill="black" transform="rotate(180,32,80)"/>
                <g class="text">
                  <text x="60" y="36">5G</text>
                  <text x="88" y="36">SMO</text>
                  <text x="252" y="36">IETF</text>
                  <text x="288" y="36">NSC</text>
                  <text x="444" y="36">5G</text>
                  <text x="472" y="36">SMO</text>
                  <text x="216" y="52">(TN</text>
                  <text x="288" y="52">Orchestrator)</text>
                  <text x="80" y="100">Site1</text>
                  <text x="240" y="100">Transport</text>
                  <text x="312" y="100">Network</text>
                  <text x="472" y="100">Site2</text>
                  <text x="48" y="132">SF1</text>
                  <text x="496" y="132">SF2</text>
                  <text x="112" y="180">GW1</text>
                  <text x="216" y="180">PE1</text>
                  <text x="336" y="180">PE2</text>
                  <text x="440" y="180">GW2</text>
                  <text x="60" y="260">LAN1</text>
                  <text x="484" y="260">LAN2</text>
                  <text x="64" y="276">198.51.100.0/24</text>
                  <text x="460" y="276">203.0.113.0/24</text>
                  <text x="132" y="324">Physical</text>
                  <text x="188" y="324">Link</text>
                  <text x="224" y="324">ID:</text>
                  <text x="356" y="324">Physical</text>
                  <text x="412" y="324">Link</text>
                  <text x="448" y="324">ID:</text>
                  <text x="168" y="340">bearerX@site1</text>
                  <text x="392" y="340">bearerX@site2</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art"><![CDATA[
      5G SMO                 IETF NSC                 5G SMO
         |               (TN Orchestrator)               |
         |                        |                      |
   <-----+----->        <---------+-------->        <----+---->
       Site1             Transport Network              Site2
   .---.                  .--------------.                 .---.
   |SF1|                  |              |                 |SF2|
   '-+-'   .---.        .---.          .---.        .---.  '-+-'
     |     |   |        |   |          |   |        |   |    |
   --+-----+GW1+--------+PE1|          |PE2+--------+GW2+----+--
       ^   |   |    ^   |   |          |   |   ^    |   |  ^
       |   '---'    |   '-+-'          '-+-'   |    '---'  |
       |            |     |              |     |           |
       |            |     '--------------'     |           |
     LAN1           |                          |          LAN2
198.51.100.0/24     |                          |  203.0.113.0/24
                    |                          |
                    |                          |
            Physical Link ID:           Physical Link ID:
              bearerX@site1               bearerX@site2

]]></artwork>
          </artset>
        </figure>
        <t><xref target="slice-vlan-2"/> describes the logical connectivity enforced thanks to both IETF Network Slice and ACaaS models.</t>
        <figure anchor="slice-vlan-2">
          <name>Logical Overview</name>
          <artset>
            <artwork type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="528" width="504" viewBox="0 0 504 528" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 16,48 L 16,80" fill="none" stroke="black"/>
                <path d="M 32,80 L 32,112" fill="none" stroke="black"/>
                <path d="M 48,48 L 48,80" fill="none" stroke="black"/>
                <path d="M 80,80 L 80,144" fill="none" stroke="black"/>
                <path d="M 112,80 L 112,144" fill="none" stroke="black"/>
                <path d="M 208,80 L 208,144" fill="none" stroke="black"/>
                <path d="M 224,48 L 224,80" fill="none" stroke="black"/>
                <path d="M 224,144 L 224,176" fill="none" stroke="black"/>
                <path d="M 240,80 L 240,144" fill="none" stroke="black"/>
                <path d="M 280,80 L 280,144" fill="none" stroke="black"/>
                <path d="M 296,48 L 296,80" fill="none" stroke="black"/>
                <path d="M 296,144 L 296,176" fill="none" stroke="black"/>
                <path d="M 312,80 L 312,144" fill="none" stroke="black"/>
                <path d="M 400,80 L 400,144" fill="none" stroke="black"/>
                <path d="M 432,80 L 432,144" fill="none" stroke="black"/>
                <path d="M 464,48 L 464,80" fill="none" stroke="black"/>
                <path d="M 480,80 L 480,112" fill="none" stroke="black"/>
                <path d="M 496,48 L 496,80" fill="none" stroke="black"/>
                <path d="M 320,32 L 352,32" fill="none" stroke="black"/>
                <path d="M 384,32 L 400,32" fill="none" stroke="black"/>
                <path d="M 16,48 L 48,48" fill="none" stroke="black"/>
                <path d="M 224,48 L 296,48" fill="none" stroke="black"/>
                <path d="M 464,48 L 496,48" fill="none" stroke="black"/>
                <path d="M 16,80 L 48,80" fill="none" stroke="black"/>
                <path d="M 80,80 L 112,80" fill="none" stroke="black"/>
                <path d="M 208,80 L 240,80" fill="none" stroke="black"/>
                <path d="M 280,80 L 312,80" fill="none" stroke="black"/>
                <path d="M 400,80 L 432,80" fill="none" stroke="black"/>
                <path d="M 464,80 L 496,80" fill="none" stroke="black"/>
                <path d="M 16,112 L 80,112" fill="none" stroke="black"/>
                <path d="M 112,112 L 208,112" fill="none" stroke="black"/>
                <path d="M 312,112 L 400,112" fill="none" stroke="black"/>
                <path d="M 432,112 L 496,112" fill="none" stroke="black"/>
                <path d="M 80,144 L 112,144" fill="none" stroke="black"/>
                <path d="M 208,144 L 240,144" fill="none" stroke="black"/>
                <path d="M 280,144 L 312,144" fill="none" stroke="black"/>
                <path d="M 400,144 L 432,144" fill="none" stroke="black"/>
                <path d="M 224,176 L 296,176" fill="none" stroke="black"/>
                <path d="M 112,208 L 200,208" fill="none" stroke="black"/>
                <path d="M 216,208 L 312,208" fill="none" stroke="black"/>
                <path d="M 328,208 L 392,208" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="408,32 396,26.4 396,37.6" fill="black" transform="rotate(0,400,32)"/>
                <polygon class="arrowhead" points="400,208 388,202.4 388,213.6" fill="black" transform="rotate(0,392,208)"/>
                <polygon class="arrowhead" points="336,208 324,202.4 324,213.6" fill="black" transform="rotate(180,328,208)"/>
                <polygon class="arrowhead" points="328,32 316,26.4 316,37.6" fill="black" transform="rotate(180,320,32)"/>
                <polygon class="arrowhead" points="320,208 308,202.4 308,213.6" fill="black" transform="rotate(0,312,208)"/>
                <polygon class="arrowhead" points="224,208 212,202.4 212,213.6" fill="black" transform="rotate(180,216,208)"/>
                <polygon class="arrowhead" points="208,208 196,202.4 196,213.6" fill="black" transform="rotate(0,200,208)"/>
                <polygon class="arrowhead" points="120,208 108,202.4 108,213.6" fill="black" transform="rotate(180,112,208)"/>
                <circle cx="16" cy="272" r="6" class="closeddot" fill="black"/>
                <circle cx="16" cy="400" r="6" class="closeddot" fill="black"/>
                <g class="text">
                  <text x="244" y="36">AS</text>
                  <text x="280" y="36">65536</text>
                  <text x="368" y="36">BGP</text>
                  <text x="420" y="36">AS</text>
                  <text x="456" y="36">65550</text>
                  <text x="32" y="68">SF1</text>
                  <text x="156" y="68">192.0.2.0/30</text>
                  <text x="372" y="68">192.0.2.4/30</text>
                  <text x="480" y="68">SF2</text>
                  <text x="124" y="100">.1</text>
                  <text x="196" y="100">.2</text>
                  <text x="324" y="100">.6</text>
                  <text x="388" y="100">.5</text>
                  <text x="96" y="116">GW1</text>
                  <text x="224" y="116">PE1</text>
                  <text x="296" y="116">PE2</text>
                  <text x="416" y="116">GW2</text>
                  <text x="152" y="132">vlan-id</text>
                  <text x="352" y="132">vlan-id</text>
                  <text x="152" y="148">100</text>
                  <text x="352" y="148">200</text>
                  <text x="64" y="164">198.51.100.0/24</text>
                  <text x="444" y="164">203.0.113.0/24</text>
                  <text x="212" y="196">sdp1</text>
                  <text x="292" y="196">sdp2</text>
                  <text x="148" y="228">Attachment</text>
                  <text x="240" y="228">Network</text>
                  <text x="296" y="228">Slice</text>
                  <text x="372" y="228">Attachment</text>
                  <text x="136" y="244">Circuit</text>
                  <text x="192" y="244">"ac1"</text>
                  <text x="272" y="244">EMBB_UP</text>
                  <text x="360" y="244">Circuit</text>
                  <text x="416" y="244">"ac2"</text>
                  <text x="48" y="276">"ac1"</text>
                  <text x="120" y="276">properties:</text>
                  <text x="16" y="292">-</text>
                  <text x="96" y="292">bearer-reference:</text>
                  <text x="224" y="292">bearerX@site1</text>
                  <text x="16" y="308">-</text>
                  <text x="60" y="308">vlan-id:</text>
                  <text x="112" y="308">100</text>
                  <text x="16" y="324">-</text>
                  <text x="36" y="324">CE</text>
                  <text x="80" y="324">address</text>
                  <text x="140" y="324">(GW1):</text>
                  <text x="220" y="324">192.0.2.1/30</text>
                  <text x="16" y="340">-</text>
                  <text x="36" y="340">PE</text>
                  <text x="84" y="340">address:</text>
                  <text x="172" y="340">192.0.2.2/30</text>
                  <text x="16" y="356">-</text>
                  <text x="60" y="356">Routing:</text>
                  <text x="124" y="356">static</text>
                  <text x="216" y="356">198.51.100.0/24</text>
                  <text x="296" y="356">via</text>
                  <text x="136" y="372">192.0.2.1</text>
                  <text x="192" y="372">tag</text>
                  <text x="276" y="372">primary_UP_slice</text>
                  <text x="48" y="404">"ac2"</text>
                  <text x="120" y="404">properties:</text>
                  <text x="16" y="420">-</text>
                  <text x="96" y="420">bearer-reference:</text>
                  <text x="224" y="420">bearerY@site2</text>
                  <text x="16" y="436">-</text>
                  <text x="60" y="436">vlan-id:</text>
                  <text x="112" y="436">200</text>
                  <text x="16" y="452">-</text>
                  <text x="36" y="452">CE</text>
                  <text x="80" y="452">address</text>
                  <text x="140" y="452">(GW2):</text>
                  <text x="220" y="452">192.0.2.5/30</text>
                  <text x="16" y="468">-</text>
                  <text x="36" y="468">PE</text>
                  <text x="84" y="468">address:</text>
                  <text x="172" y="468">192.0.2.6/30</text>
                  <text x="16" y="484">-</text>
                  <text x="60" y="484">Routing:</text>
                  <text x="112" y="484">BGP</text>
                  <text x="168" y="484">local-as:</text>
                  <text x="232" y="484">65536</text>
                  <text x="296" y="484">(Provider</text>
                  <text x="356" y="484">ASN)</text>
                  <text x="164" y="500">peer-as:</text>
                  <text x="224" y="500">65550</text>
                  <text x="288" y="500">(customer</text>
                  <text x="348" y="500">ASN)</text>
                  <text x="192" y="516">remote-address:</text>
                  <text x="296" y="516">192.0.2.5</text>
                  <text x="376" y="516">(Customer</text>
                  <text x="452" y="516">address)</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art"><![CDATA[
                             AS 65536  <----BGP--> AS 65550
 .---.                     .--------.                    .---.
 |SF1|       192.0.2.0/30  |        |   192.0.2.4/30     |SF2|
 '-+-'   .---.           .-+-.    .-+-.          .---.   '-+-'
   |     |   |.1       .2|   |    |   |.6      .5|   |     |
 --+-----+GW1+-----------+PE1|    |PE2+----------+GW2+-----+--
         |   | vlan-id   |   |    |   | vlan-id  |   |
         '---'   100     '-+-'    '-+-'   200    '---'
198.51.100.0/24            |        |           203.0.113.0/24
                           '--------'
                        sdp1      sdp2
             <----------> <-----------> <------->
             Attachment   Network Slice  Attachment
             Circuit "ac1"    EMBB_UP    Circuit "ac2"

 * "ac1" properties:
 - bearer-reference: bearerX@site1
 - vlan-id: 100
 - CE address (GW1): 192.0.2.1/30
 - PE address: 192.0.2.2/30
 - Routing: static 198.51.100.0/24 via
            192.0.2.1 tag primary_UP_slice

 * "ac2" properties:
 - bearer-reference: bearerY@site2
 - vlan-id: 200
 - CE address (GW2): 192.0.2.5/30
 - PE address: 192.0.2.6/30
 - Routing: BGP local-as: 65536 (Provider ASN)
                peer-as: 65550 (customer ASN)
                remote-address: 192.0.2.5 (Customer address)
]]></artwork>
          </artset>
        </figure>
        <t><xref target="slice-acs"/> shows the message body of the request to create the required ACs using the ACaaS module.</t>
        <figure anchor="slice-acs">
          <name>Message Body of a Request to Create Required ACs</name>
          <sourcecode type="json"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "ietf-ac-svc:attachment-circuits": {
    "ac": [
      {
        "name": "ac1",
        "description": "Connection to site1 on vlan 100",
        "requested-start": "2023-12-12T05:00:00.00Z",
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "tag-type": "ietf-vpn-common:c-vlan"
            }
          },
          "bearer-reference": "bearerX@site1"
        },
        "ip-connection": {
          "ipv4": {
            "address-allocation-type": "ietf-ac-common:static-\
                                                             address"
          }
        },
        "routing-protocols": {
          "routing-protocol": [
            {
              "id": "1",
              "type": "ietf-vpn-common:static-routing",
              "static": {
                "cascaded-lan-prefixes": {
                  "ipv4-lan-prefix": [
                    {
                      "lan": "198.51.100.0/24",
                      "next-hop": "192.0.2.1",
                      "lan-tag": "primary_UP_slice"
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      {
        "name": "ac2",
        "description": "Connection to site2 on vlan 200",
        "requested-start": "2023-12-12T05:00:00.00Z",
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "tag-type": "ietf-vpn-common:c-vlan"
            }
          },
          "bearer-reference": "bearerY@site2"
        },
        "ip-connection": {
          "ipv4": {
            "address-allocation-type": "ietf-ac-common:static-\
                                                             address"
          }
        },
        "routing-protocols": {
          "routing-protocol": [
            {
              "id": "1",
              "type": "ietf-vpn-common:bgp-routing",
              "bgp": {
                "neighbor": [
                  {
                    "id": "1",
                    "peer-as": 65550
                  }
                ]
              }
            }
          ]
        }
      }
    ]
  }
}
]]></sourcecode>
        </figure>
        <t><xref target="slice-acs-res"/> shows the message body of a response to a GET request received from the controller.</t>
        <figure anchor="slice-acs-res">
          <name>Example of a Message Body of a Response Indicating the Creation of the ACs</name>
          <sourcecode type="json"><![CDATA[
{
  "ietf-ac-svc:attachment-circuits": {
    "ac": [
      {
        "name": "ac1",
        "description": "Connection to site1 on vlan 100",
        "actual-start": "2023-12-12T05:00:00.00Z",
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "tag-type": "ietf-vpn-common:c-vlan",
              "cvlan-id": 100
            }
          },
          "bearer-reference": "bearerX@site1"
        },
        "ip-connection": {
          "ipv4": {
            "local-address": "192.0.2.2",
            "prefix-length": 30,
            "address": [
              {
                "address-id": "1",
                "customer-address": "192.0.2.1"
              }
            ]
          }
        },
        "routing-protocols": {
          "routing-protocol": [
            {
              "id": "1",
              "type": "ietf-vpn-common:static-routing",
              "static": {
                "cascaded-lan-prefixes": {
                  "ipv4-lan-prefix": [
                    {
                      "lan": "198.51.100.0/24",
                      "next-hop": "192.0.2.1",
                      "lan-tag": "primary_UP_slice"
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      {
        "name": "ac2",
        "description": "Connection to site2 on vlan 200",
        "actual-start": "2023-12-12T05:00:00.00Z",
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "tag-type": "ietf-vpn-common:c-vlan",
              "cvlan-id": 200
            }
          },
          "bearer-reference": "bearerY@site2"
        },
        "ip-connection": {
          "ipv4": {
            "local-address": "192.0.2.6",
            "prefix-length": 30,
            "address": [
              {
                "address-id": "1",
                "customer-address": "192.0.2.5"
              }
            ]
          }
        },
        "routing-protocols": {
          "routing-protocol": [
            {
              "id": "1",
              "type": "ietf-vpn-common:bgp-routing",
              "bgp": {
                "neighbor": [
                  {
                    "id": "1",
                    "peer-as": 65550,
                    "local-as": 65536 
                  }
                ]
              }
            }
          ]
        }
      }
    ]
  }
}
]]></sourcecode>
        </figure>
        <t><xref target="slice-prov"/> shows the message body of the request to create an RFC 9543 Network Slice Service bound to the ACs created using <xref target="slice-acs"/>. Only references to these ACs are included in the RFC 9543 Network Slice Service request.</t>
        <figure anchor="slice-prov">
          <name>Message Body of a Request to Create an RFC 9543 Network Slice Service Referring to the ACs</name>
          <sourcecode type="json"><![CDATA[
{
  "ietf-network-slice-service:network-slice-services": {
    "slo-sle-templates": {
      "slo-sle-template": [
        {
          "id": "low-latency-template",
          "description": "Lowest latency forwarding behavior"
        }
      ]
    },
    "slice-service": [
      {
        "id": "Slice URLLC_UP",
        "description": "Dedicated TN Slice for URLLC-UP",
        "slo-sle-template": "low-latency-template",
        "status": {},
        "sdps": {
          "sdp": [
            {
              "id": "sdp1",
              "ac-svc-name": [
                "ac1"
              ]
            },
            {
              "id": "sdp2",
              "ac-svc-name": [
                "ac2"
              ]
            }
          ]
        }
      }
    ]
  }
}
]]></sourcecode>
        </figure>
      </section>
      <section anchor="sec-ex-cloud">
        <name>Connecting a Virtualized Environment Running in a Cloud Provider</name>
        <t>This example (<xref target="cloud-provider-1"/>) shows how the AC service model can be used to connect a Cloud Infrastructure to a service provider network. This example makes the following assumptions:</t>
        <ol spacing="normal" type="1">
	  <li>A customer (e.g., Mobile Network Team or partner) has a
	  virtualized infrastructure running in a Cloud Provider. A simplistic
	  deployment is represented here with a set of Virtual Machines (VMs)
	  running in a Virtual Private Environment. The deployment and
	  management of this infrastructure is achieved via private APIs that
	  are supported by the Cloud Provider; this realization is out of the
	  scope of this document.</li>
          <li>The connectivity to the data center is achieved thanks to a
          service based on direct attachment (physical connection), which is
          delivered upon ordering via an API exposed by the Cloud
          Provider. When ordering that connection, a unique "Connection
          Identifier" is generated and returned via the API.</li>
          <li>The customer provisions the networking logic
          within the Cloud Provider based on that unique Connection Identifier
          (i.e., logical interfaces, IP addressing, and routing).</li>
        </ol>
        <figure anchor="cloud-provider-1">
          <name>An Example of Realization for Connecting a Cloud Site</name>
          <artset>
            <artwork type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="560" width="496" viewBox="0 0 496 560" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 32,32 L 32,272" fill="none" stroke="black"/>
                <path d="M 32,384 L 32,528" fill="none" stroke="black"/>
                <path d="M 56,80 L 56,112" fill="none" stroke="black"/>
                <path d="M 72,112 L 72,144" fill="none" stroke="black"/>
                <path d="M 88,80 L 88,112" fill="none" stroke="black"/>
                <path d="M 104,80 L 104,112" fill="none" stroke="black"/>
                <path d="M 120,112 L 120,144" fill="none" stroke="black"/>
                <path d="M 136,80 L 136,112" fill="none" stroke="black"/>
                <path d="M 152,80 L 152,112" fill="none" stroke="black"/>
                <path d="M 168,112 L 168,144" fill="none" stroke="black"/>
                <path d="M 168,176 L 168,240" fill="none" stroke="black"/>
                <path d="M 176,400 L 176,464" fill="none" stroke="black"/>
                <path d="M 184,80 L 184,112" fill="none" stroke="black"/>
                <path d="M 200,144 L 200,176" fill="none" stroke="black"/>
                <path d="M 200,240 L 200,400" fill="none" stroke="black"/>
                <path d="M 216,248 L 216,304" fill="none" stroke="black"/>
                <path d="M 216,336 L 216,392" fill="none" stroke="black"/>
                <path d="M 224,400 L 224,464" fill="none" stroke="black"/>
                <path d="M 240,176 L 240,240" fill="none" stroke="black"/>
                <path d="M 488,32 L 488,272" fill="none" stroke="black"/>
                <path d="M 488,384 L 488,528" fill="none" stroke="black"/>
                <path d="M 32,32 L 488,32" fill="none" stroke="black"/>
                <path d="M 56,80 L 88,80" fill="none" stroke="black"/>
                <path d="M 104,80 L 136,80" fill="none" stroke="black"/>
                <path d="M 152,80 L 184,80" fill="none" stroke="black"/>
                <path d="M 56,112 L 88,112" fill="none" stroke="black"/>
                <path d="M 104,112 L 136,112" fill="none" stroke="black"/>
                <path d="M 152,112 L 184,112" fill="none" stroke="black"/>
                <path d="M 64,144 L 384,144" fill="none" stroke="black"/>
                <path d="M 168,176 L 240,176" fill="none" stroke="black"/>
                <path d="M 168,240 L 240,240" fill="none" stroke="black"/>
                <path d="M 32,272 L 192,272" fill="none" stroke="black"/>
                <path d="M 224,272 L 488,272" fill="none" stroke="black"/>
                <path d="M 32,384 L 192,384" fill="none" stroke="black"/>
                <path d="M 224,384 L 488,384" fill="none" stroke="black"/>
                <path d="M 176,400 L 224,400" fill="none" stroke="black"/>
                <path d="M 176,464 L 224,464" fill="none" stroke="black"/>
                <path d="M 32,528 L 488,528" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="224,392 212,386.4 212,397.6" fill="black" transform="rotate(90,216,392)"/>
                <polygon class="arrowhead" points="224,248 212,242.4 212,253.6" fill="black" transform="rotate(270,216,248)"/>
                <g class="text">
                  <text x="360" y="52">Cloud</text>
                  <text x="420" y="52">Provider</text>
                  <text x="468" y="52">DC</text>
                  <text x="72" y="100">VM1</text>
                  <text x="120" y="100">VM2</text>
                  <text x="168" y="100">VM3</text>
                  <text x="232" y="100">Virtual</text>
                  <text x="296" y="100">Private</text>
                  <text x="352" y="100">Cloud</text>
                  <text x="84" y="132">.2</text>
                  <text x="132" y="132">.5</text>
                  <text x="184" y="132">.12</text>
                  <text x="304" y="132">198.51.100.0/24</text>
                  <text x="212" y="164">.1</text>
                  <text x="200" y="196">Cloud</text>
                  <text x="284" y="196">BGP_ASN:</text>
                  <text x="344" y="196">65536</text>
                  <text x="204" y="212">Provider</text>
                  <text x="264" y="212">BGP</text>
                  <text x="300" y="212">md5:</text>
                  <text x="204" y="228">GW</text>
                  <text x="372" y="228">"nyxNER_c5sdn608fFQl3331d"</text>
                  <text x="236" y="260">.2</text>
                  <text x="208" y="276">-</text>
                  <text x="28" y="308">Direct</text>
                  <text x="120" y="308">Interconnection</text>
                  <text x="60" y="324">connection_id:</text>
                  <text x="216" y="324">BGP</text>
                  <text x="324" y="324">vlan-id:50</text>
                  <text x="60" y="340">1234-56789</text>
                  <text x="332" y="340">192.0.2.0/24</text>
                  <text x="236" y="372">.1</text>
                  <text x="208" y="388">-</text>
                  <text x="156" y="404">If-A</text>
                  <text x="312" y="404">Service</text>
                  <text x="380" y="404">Provider</text>
                  <text x="448" y="404">Network</text>
                  <text x="200" y="436">PE1</text>
                  <text x="268" y="436">BGP_ASN:</text>
                  <text x="328" y="436">65550</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art"><![CDATA[
    .--------------------------------------------------------.
    |                                      Cloud Provider DC |
    |                                                        |
    |  .---. .---. .---.                                     |
    |  |VM1| |VM2| |VM3|  Virtual Private Cloud              |
    |  '-+-' '-+-' '-+-'                                     |
    |    |.2   |.5   |.12      198.51.100.0/24               |
    |   -+-----+-----+---+-----------------------            |
    |                    |.1                                 |
    |                .---+----.                              |
    |                | Cloud  | BGP_ASN: 65536               |
    |                |Provider| BGP md5:                     |
    |                |   GW   |   "nyxNER_c5sdn608fFQl3331d" |
    |                '---+----'                              |
    |                    | ^ .2                              |
    '--------------------|-|---------------------------------'
                         | |
 Direct Interconnection  | |
 connection_id:          |BGP       vlan-id:50
   1234-56789            | |        192.0.2.0/24
                         | |
                         | | .1
    .--------------------|-v---------------------------------.
    |             If-A.--+--.       Service Provider Network |
    |                 |     |                                |
    |                 | PE1 | BGP_ASN: 65550                 |
    |                 |     |                                |
    |                 '-----'                                |
    |                                                        |
    |                                                        |
    |                                                        |
    '--------------------------------------------------------'
]]></artwork>
          </artset>
        </figure>
        <t><xref target="cloud-provider-2"/> illustrates the pre-provisioning logic for the physical connection to the Cloud Provider. After this connection is delivered to the service provider, the network inventory is updated with 'bearer-reference' set to the value of the Connection Identifier.</t>	
        <figure anchor="cloud-provider-2">
          <name>Illustration of Pre-Provisioning</name>
          <artset>
            <artwork type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="288" width="584" viewBox="0 0 584 288" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 136,64 L 520,64" fill="none" stroke="black"/>
                <path d="M 128,112 L 512,112" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="528,64 516,58.4 516,69.6" fill="black" transform="rotate(0,520,64)"/>
                <polygon class="arrowhead" points="136,112 124,106.4 124,117.6" fill="black" transform="rotate(180,128,112)"/>
                <g class="text">
                  <text x="52" y="36">Customer</text>
                  <text x="544" y="36">Cloud</text>
                  <text x="56" y="52">Orchestration</text>
                  <text x="188" y="52">DIRECT</text>
                  <text x="280" y="52">INTERCONNECTION</text>
                  <text x="380" y="52">ORDERING</text>
                  <text x="440" y="52">(API)</text>
                  <text x="548" y="52">Provider</text>
                  <text x="164" y="100">Connection</text>
                  <text x="240" y="100">Created</text>
                  <text x="292" y="100">with</text>
                  <text x="360" y="100">"Connection</text>
                  <text x="468" y="100">ID:1234-56789"</text>
                  <text x="328" y="132">x</text>
                  <text x="328" y="148">x</text>
                  <text x="328" y="164">x</text>
                  <text x="328" y="180">x</text>
                  <text x="92" y="212">Physical</text>
                  <text x="172" y="212">Connection</text>
                  <text x="260" y="212">1234-56789</text>
                  <text x="316" y="212">is</text>
                  <text x="368" y="212">delivered</text>
                  <text x="424" y="212">and</text>
                  <text x="240" y="228">connected</text>
                  <text x="292" y="228">to</text>
                  <text x="320" y="228">PE1</text>
                  <text x="88" y="260">Network</text>
                  <text x="160" y="260">Inventory</text>
                  <text x="232" y="260">Updated</text>
                  <text x="288" y="260">with:</text>
                  <text x="144" y="276">bearer-reference:</text>
                  <text x="260" y="276">1234-56789</text>
                  <text x="320" y="276">for</text>
                  <text x="392" y="276">PE1/Interface</text>
                  <text x="476" y="276">"If-A"</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art"><![CDATA[
  Customer                                                       Cloud
Orchestration       DIRECT INTERCONNECTION ORDERING (API)       Provider
                ------------------------------------------------>

               Connection Created with "Connection ID:1234-56789"
               <------------------------------------------------
                                        x
                                        x
                                        x
                                        x

       Physical Connection 1234-56789 is delivered and
                         connected to PE1

       Network Inventory Updated with:
         bearer-reference: 1234-56789 for PE1/Interface "If-A"
]]></artwork>
          </artset>
        </figure>
        <t>Next, API workflows can be initiated by:</t>
        <ul spacing="normal">
          <li>
            <t>The Cloud Provider for the configuration per item 3 above.</t>
          </li>
          <li>
            <t>The service provider network via the ACaaS model. This request can be used in conjunction with additional requests based on the L3SM (VPN provisioning) or RFC 9543 Network Slice Service model (5G hybrid cloud deployment).</t>
          </li>
        </ul>
        <t><xref target="cloud-provider-ac"/> shows the message body of the request to create the required ACs to connect the virtualized Cloud Provider (VM) using the ACaaS module.</t>
        <figure anchor="cloud-provider-ac">
          <name>Message Body of a Request to Create the ACs for Connecting to the Cloud Provider</name>
          <sourcecode type="json"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "ietf-ac-svc:attachment-circuits": {
    "ac": [
      {
        "name": "ac--BXT-DC-customer-VPC-foo",
        "description": "Connection to Cloud Provider BXT on \
                                              connection 1234-56789",
        "requested-start": "2023-12-12T05:00:00.00Z",
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q"
          },
          "bearer-reference": "1243-56789"
        },
        "ip-connection": {
          "ipv4": {
            "address-allocation-type": "ietf-ac-common:static-\
                                                             address"
          }
        },
        "routing-protocols": {
          "routing-protocol": [
            {
              "id": "1",
              "type": "ietf-vpn-common:bgp-routing",
              "bgp": {
                "neighbor": [
                  {
                    "id": "1",
                    "peer-as": 65536
                  }
                ]
              }
            }
          ]
        }
      }
    ]
  }
}
]]></sourcecode>
        </figure>
        <t><xref target="cloud-provider-ac-res"/> shows the message body of the response received from the provider as a response to a query message. Note that this Cloud Provider mandates the use of MD5 authentication for establishing BGP connections.</t>
        <aside><t>The module supports MD5 to basically accommodate the installed BGP base (including by some Cloud Providers). Note that MD5 suffers from the security weaknesses discussed in <xref section="2" sectionFormat="of" target="RFC6151"/> and <xref section="2.1" sectionFormat="of" target="RFC6952"/>.</t></aside>

        <figure anchor="cloud-provider-ac-res">
          <name>Message Body of a Response to the Request to Create ACs for Connecting to the Cloud Provider</name>
          <sourcecode type="json"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "ietf-ac-svc:attachment-circuits": {
    "ac": [
      {
        "name": "ac--BXT-DC-customer-VPC-foo",
        "description": "Connection to Cloud Provider BXT on \
                                              connection 1234-56789",
        "actual-start": "2023-12-12T05:00:00.00Z",
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "tag-type": "ietf-vpn-common:c-vlan",
              "cvlan-id": 50
            }
          },
          "bearer-reference": "1243-56789"
        },
        "ip-connection": {
          "ipv4": {
            "local-address": "192.0.2.1",
            "prefix-length": 24,
            "address": [
              {
                "address-id": "1",
                "customer-address": "192.0.2.2"
              }
            ]
          }
        },
        "routing-protocols": {
          "routing-protocol": [
            {
              "id": "1",
              "type": "ietf-vpn-common:bgp-routing",
              "bgp": {
                "neighbor": [
                  {
                    "id": "1",
                    "peer-as": 65536,
                    "local-as": 65550,
                    "authentication": {
                      "enabled": true,
                      "keying-material": {
                        "md5-keychain": "nyxNER_c5sdn608fFQl3331d"
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    ]
  }
}
]]></sourcecode>
        </figure>
      </section>
      <section anchor="sec-cus-bgp">
        <name>Connect Customer Network Through BGP</name>
        <t>CE-PE routing using BGP is a common scenario in the context of MPLS VPNs and is widely used in enterprise networks. In the example depicted in <xref target="provider-network"/>, the CE routers are customer-owned devices belonging to an AS (ASN 65536). CEs are located at the edge of the provider's network (PE) and use point-to-point interfaces to establish BGP sessions. The point-to-point interfaces rely upon a physical bearer ("line-113") to reach the provider network.</t>
        <figure anchor="provider-network">
          <name>Illustration of Provider Network Scenario</name>
          <artset>
            <artwork type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="552" viewBox="0 0 552 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,32 L 8,352" fill="none" stroke="black"/>
                <path d="M 80,80 L 80,176" fill="none" stroke="black"/>
                <path d="M 80,208 L 80,240" fill="none" stroke="black"/>
                <path d="M 80,304 L 80,336" fill="none" stroke="black"/>
                <path d="M 184,80 L 184,176" fill="none" stroke="black"/>
                <path d="M 184,208 L 184,240" fill="none" stroke="black"/>
                <path d="M 184,304 L 184,336" fill="none" stroke="black"/>
                <path d="M 208,32 L 208,88" fill="none" stroke="black"/>
                <path d="M 208,104 L 208,352" fill="none" stroke="black"/>
                <path d="M 392,32 L 392,80" fill="none" stroke="black"/>
                <path d="M 392,112 L 392,144" fill="none" stroke="black"/>
                <path d="M 464,80 L 464,96" fill="none" stroke="black"/>
                <path d="M 544,32 L 544,144" fill="none" stroke="black"/>
                <path d="M 8,32 L 208,32" fill="none" stroke="black"/>
                <path d="M 392,32 L 544,32" fill="none" stroke="black"/>
                <path d="M 80,80 L 184,80" fill="none" stroke="black"/>
                <path d="M 416,80 L 464,80" fill="none" stroke="black"/>
                <path d="M 184,96 L 352,96" fill="none" stroke="black"/>
                <path d="M 408,112 L 448,112" fill="none" stroke="black"/>
                <path d="M 392,144 L 544,144" fill="none" stroke="black"/>
                <path d="M 80,176 L 184,176" fill="none" stroke="black"/>
                <path d="M 80,208 L 184,208" fill="none" stroke="black"/>
                <path d="M 80,240 L 184,240" fill="none" stroke="black"/>
                <path d="M 80,304 L 184,304" fill="none" stroke="black"/>
                <path d="M 80,336 L 184,336" fill="none" stroke="black"/>
                <path d="M 8,352 L 208,352" fill="none" stroke="black"/>
                <path d="M 448,112 C 456.83064,112 464,104.83064 464,96" fill="none" stroke="black"/>
                <g class="text">
                  <text x="60" y="52">Provider</text>
                  <text x="128" y="52">Network</text>
                  <text x="436" y="52">Customer</text>
                  <text x="504" y="52">Network</text>
                  <text x="300" y="68">CE-PE-AC</text>
                  <text x="220" y="84">.2</text>
                  <text x="372" y="84">.1</text>
                  <text x="504" y="84">ASN</text>
                  <text x="132" y="100">PE1(VRF11)</text>
                  <text x="384" y="100">sap#113</text>
                  <text x="432" y="100">CE1</text>
                  <text x="504" y="100">65536</text>
                  <text x="296" y="116">Bearer=line-113</text>
                  <text x="132" y="132">PE1(VRF12)</text>
                  <text x="300" y="132">192.0.2.1/30</text>
                  <text x="132" y="164">PE1(VRF1n)</text>
                  <text x="32" y="196">AS1</text>
                  <text x="132" y="228">PE2(VRF21)</text>
                  <text x="128" y="260">.</text>
                  <text x="128" y="276">.</text>
                  <text x="128" y="292">.</text>
                  <text x="132" y="324">PEm(VRFmn)</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art"><![CDATA[
.------------------------.                      .------------------.
|  Provider Network      |                      | Customer Network |
|                        |       CE-PE-AC       |                  |
|        .------------.  |.2                 .1 |  .-----.   ASN   |
|        | PE1(VRF11) +---------------------sap#113 CE1  |  65536  |
|        |            |  |   Bearer=line-113    | '-----'          |
|        | PE1(VRF12) |  |     192.0.2.1/30     |                  |
|        |            |  |                      '------------------'
|        | PE1(VRF1n) |  |
|        '------------'  |
| AS1                    |
|        .------------.  |
|        | PE2(VRF21) |  |
|        '------------'  |
|              .         |
|              .         |
|              .         |
|        .------------.  |
|        | PEm(VRFmn) |  |
|        '------------'  |
'------------------------'
]]></artwork>
          </artset>
        </figure>
        <t>The AC in this case uses a SAP identifier to refer to the physical interface used for the connection between the PE and the CE. The AC includes all the additional logical attributes to describe the connection between the two ends, including VLAN information and IP addressing. Also, the configuration details of the BGP session make use of peer group details instead of defining the entire configuration inside the 'neighbor' data node.</t>
        <figure anchor="add-attachment-circuit-bgp-routing">
          <name>Message Body of a Request to Create ACs for Connecting CEs to a Provider Network</name>
          <sourcecode type="json"><![CDATA[
{
  "ietf-ac-svc:attachment-circuits": {
    "ac": [
      {
        "name": "CE-PE-AC",
        "customer-name": "Customer-4875",
        "description": "An AC between a CP and a PE",
        "peer-sap-id": [
          "sap#113"
        ],
        "ip-connection": {
          "ipv4": {
            "prefix-length": 30,
            "address": [
              {
                "address-id": "1",
                "customer-address": "192.0.2.1"
              }
            ]
          }
        },
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q"
          },
          "bearer-reference": "line-113"
        },
        "routing-protocols": {
          "routing-protocol": [
            {
              "id": "BGP-Single-Access",
              "type": "ietf-vpn-common:bgp-routing",
              "bgp": {
                "peer-groups": {
                  "peer-group": [
                    {
                      "name": "first-peer-group",
                      "peer-as": 65536,
                      "address-family": "ietf-vpn-common:ipv4"
                    }
                  ]
                },
                "neighbor": [
                  {
                    "id": "session#57",
                    "remote-address": "192.0.2.1",
                    "peer-group": "first-peer-group",
                    "status": {
                      "admin-status": {
                        "status": "ietf-vpn-common:admin-up"
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    ]
  }
}
]]></sourcecode>
        </figure>
        <t>This scenario allows the provider to maintain a list of ACs belonging to the same customer without requiring the full service configuration.</t>
      </section>
      <section anchor="sec-peering">
        <name>Interconnection via Internet Exchange Points (IXPs)</name>
        <t>This section illustrates how to use the AC service model for interconnection purposes. To that aim, the document assumes a simplified IXP configuration without zooming into IXP deployment specifics. Let us assume that networks are interconnected via a Layer 2 facility. Let us also assume a deployment context where selective peering is in place between these networks. Networks that are interested in establishing selective BGP peerings expose a dedicated ACaaS server to the IXP to behave as an ACaaS provider. BGP is used to exchange routing information and reachability announcements between those networks. Any network operator connected to an IXP can behave as a client (i.e., initiate a BGP peering request).</t>
        <t>This example follows the recursive deployment model depicted in <xref target="_u-ex-r"/>. Specifically, base AC service requests are handled locally by the IXP. However, binding BGP sessions to existing ACs involves a recursion step.</t>
        <figure anchor="_u-ex-rb">
          <name>Recursive Deployment Example</name>
          <artset>
            <artwork type="svg" align="center"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="320" width="584" viewBox="0 0 584 320" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,48 L 8,80" fill="none" stroke="black"/>
                <path d="M 8,176 L 8,272" fill="none" stroke="black"/>
                <path d="M 64,96 L 64,128" fill="none" stroke="black"/>
                <path d="M 64,160 L 64,176" fill="none" stroke="black"/>
                <path d="M 104,176 L 104,272" fill="none" stroke="black"/>
                <path d="M 112,48 L 112,80" fill="none" stroke="black"/>
                <path d="M 248,48 L 248,80" fill="none" stroke="black"/>
                <path d="M 248,176 L 248,272" fill="none" stroke="black"/>
                <path d="M 296,96 L 296,128" fill="none" stroke="black"/>
                <path d="M 296,160 L 296,176" fill="none" stroke="black"/>
                <path d="M 336,48 L 336,80" fill="none" stroke="black"/>
                <path d="M 336,176 L 336,224" fill="none" stroke="black"/>
                <path d="M 336,256 L 336,272" fill="none" stroke="black"/>
                <path d="M 472,48 L 472,80" fill="none" stroke="black"/>
                <path d="M 472,176 L 472,272" fill="none" stroke="black"/>
                <path d="M 528,96 L 528,128" fill="none" stroke="black"/>
                <path d="M 528,160 L 528,176" fill="none" stroke="black"/>
                <path d="M 576,48 L 576,80" fill="none" stroke="black"/>
                <path d="M 576,176 L 576,272" fill="none" stroke="black"/>
                <path d="M 24,32 L 96,32" fill="none" stroke="black"/>
                <path d="M 264,32 L 320,32" fill="none" stroke="black"/>
                <path d="M 488,32 L 560,32" fill="none" stroke="black"/>
                <path d="M 120,64 L 240,64" fill="none" stroke="black"/>
                <path d="M 344,64 L 464,64" fill="none" stroke="black"/>
                <path d="M 24,96 L 56,96" fill="none" stroke="black"/>
                <path d="M 72,96 L 96,96" fill="none" stroke="black"/>
                <path d="M 264,96 L 288,96" fill="none" stroke="black"/>
                <path d="M 304,96 L 320,96" fill="none" stroke="black"/>
                <path d="M 488,96 L 520,96" fill="none" stroke="black"/>
                <path d="M 536,96 L 560,96" fill="none" stroke="black"/>
                <path d="M 8,176 L 56,176" fill="none" stroke="black"/>
                <path d="M 72,176 L 104,176" fill="none" stroke="black"/>
                <path d="M 248,176 L 288,176" fill="none" stroke="black"/>
                <path d="M 304,176 L 336,176" fill="none" stroke="black"/>
                <path d="M 472,176 L 520,176" fill="none" stroke="black"/>
                <path d="M 536,176 L 576,176" fill="none" stroke="black"/>
                <path d="M 112,190 L 152,190" fill="none" stroke="black"/>
                <path d="M 112,194 L 152,194" fill="none" stroke="black"/>
                <path d="M 208,190 L 240,190" fill="none" stroke="black"/>
                <path d="M 208,194 L 240,194" fill="none" stroke="black"/>
                <path d="M 344,190 L 376,190" fill="none" stroke="black"/>
                <path d="M 344,194 L 376,194" fill="none" stroke="black"/>
                <path d="M 432,190 L 464,190" fill="none" stroke="black"/>
                <path d="M 432,194 L 464,194" fill="none" stroke="black"/>
                <path d="M 104,208 L 144,208" fill="none" stroke="black"/>
                <path d="M 208,208 L 248,208" fill="none" stroke="black"/>
                <path d="M 336,208 L 376,208" fill="none" stroke="black"/>
                <path d="M 440,208 L 464,208" fill="none" stroke="black"/>
                <path d="M 112,254 L 240,254" fill="none" stroke="black"/>
                <path d="M 112,258 L 240,258" fill="none" stroke="black"/>
                <path d="M 344,254 L 464,254" fill="none" stroke="black"/>
                <path d="M 344,258 L 464,258" fill="none" stroke="black"/>
                <path d="M 8,272 L 104,272" fill="none" stroke="black"/>
                <path d="M 248,272 L 336,272" fill="none" stroke="black"/>
                <path d="M 472,272 L 576,272" fill="none" stroke="black"/>
                <path d="M 24,32 C 15.16936,32 8,39.16936 8,48" fill="none" stroke="black"/>
                <path d="M 96,32 C 104.83064,32 112,39.16936 112,48" fill="none" stroke="black"/>
                <path d="M 264,32 C 255.16936,32 248,39.16936 248,48" fill="none" stroke="black"/>
                <path d="M 320,32 C 328.83064,32 336,39.16936 336,48" fill="none" stroke="black"/>
                <path d="M 488,32 C 479.16936,32 472,39.16936 472,48" fill="none" stroke="black"/>
                <path d="M 560,32 C 568.83064,32 576,39.16936 576,48" fill="none" stroke="black"/>
                <path d="M 24,96 C 15.16936,96 8,88.83064 8,80" fill="none" stroke="black"/>
                <path d="M 96,96 C 104.83064,96 112,88.83064 112,80" fill="none" stroke="black"/>
                <path d="M 264,96 C 255.16936,96 248,88.83064 248,80" fill="none" stroke="black"/>
                <path d="M 320,96 C 328.83064,96 336,88.83064 336,80" fill="none" stroke="black"/>
                <path d="M 488,96 C 479.16936,96 472,88.83064 472,80" fill="none" stroke="black"/>
                <path d="M 560,96 C 568.83064,96 576,88.83064 576,80" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="536,176 524,170.4 524,181.6" fill="black" transform="rotate(90,528,176)"/>
                <polygon class="arrowhead" points="536,96 524,90.4 524,101.6" fill="black" transform="rotate(270,528,96)"/>
                <polygon class="arrowhead" points="472,64 460,58.4 460,69.6" fill="black" transform="rotate(0,464,64)"/>
                <polygon class="arrowhead" points="352,64 340,58.4 340,69.6" fill="black" transform="rotate(180,344,64)"/>
                <polygon class="arrowhead" points="304,176 292,170.4 292,181.6" fill="black" transform="rotate(90,296,176)"/>
                <polygon class="arrowhead" points="304,96 292,90.4 292,101.6" fill="black" transform="rotate(270,296,96)"/>
                <polygon class="arrowhead" points="248,64 236,58.4 236,69.6" fill="black" transform="rotate(0,240,64)"/>
                <polygon class="arrowhead" points="128,64 116,58.4 116,69.6" fill="black" transform="rotate(180,120,64)"/>
                <polygon class="arrowhead" points="72,176 60,170.4 60,181.6" fill="black" transform="rotate(90,64,176)"/>
                <polygon class="arrowhead" points="72,96 60,90.4 60,101.6" fill="black" transform="rotate(270,64,96)"/>
                <g class="text">
                  <text x="172" y="36">AC</text>
                  <text x="396" y="36">AC</text>
                  <text x="56" y="52">Network</text>
                  <text x="152" y="52">Service</text>
                  <text x="208" y="52">Model</text>
                  <text x="296" y="52">IXP</text>
                  <text x="376" y="52">Service</text>
                  <text x="432" y="52">Model</text>
                  <text x="528" y="52">Network</text>
                  <text x="52" y="68">Operator</text>
                  <text x="96" y="68">A</text>
                  <text x="292" y="68">Operator</text>
                  <text x="516" y="68">Operator</text>
                  <text x="560" y="68">B</text>
                  <text x="280" y="84">B2B</text>
                  <text x="312" y="84">C/S</text>
                  <text x="68" y="148">Provisioning</text>
                  <text x="300" y="148">Provisioning</text>
                  <text x="532" y="148">Provisioning</text>
                  <text x="52" y="196">ASBR</text>
                  <text x="180" y="196">Bearer</text>
                  <text x="280" y="196">Layer</text>
                  <text x="312" y="196">2</text>
                  <text x="404" y="196">Bearer</text>
                  <text x="524" y="196">ASBR</text>
                  <text x="164" y="212">Base</text>
                  <text x="196" y="212">AC</text>
                  <text x="292" y="212">Facility</text>
                  <text x="396" y="212">Base</text>
                  <text x="428" y="212">AC</text>
                  <text x="176" y="244">.................</text>
                  <text x="264" y="244">BGP</text>
                  <text x="376" y="244">Session................</text>
                  <text x="16" y="308">B2B</text>
                  <text x="52" y="308">C/S:</text>
                  <text x="124" y="308">Back-to-Back</text>
                  <text x="232" y="308">Client/Server</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art" align="center"><![CDATA[
 .----------.       AC         .--------.       AC         .----------.
|  Network   | Service Model  |    IXP   | Service Model  |   Network  |
| Operator A |<-------------->| Operator |<-------------->| Operator B |
|            |                |  B2B C/S |                |            |
 '-----^----'                  '----^---'                  '-----^----'
       |                            |                            |
       |                            |                            |
  Provisioning                 Provisioning                 Provisioning
       |                            |                            |
.------v----.                 .-----v----.                .------v-----.
|   ASBR    |======Bearer=====| Layer 2  |=====Bearer=====|    ASBR    |
|           +-----Base AC-----+ Facility +-----Base AC----|            |
|           |                 |          |                |            |
|           +..................BGP Session................+            |
|           |=================|          |================|            |
'-----------'                 '----------'                '------------'

B2B C/S: Back-to-Back Client/Server
]]></artwork>
          </artset>
        </figure>
        <t>The following subsections exemplify a deployment flow, but BGP sessions can be managed without having to systematically execute all the steps detailed hereafter.</t>
        <t>The bearer/AC service models can be used to establish interconnection between two networks without involving an IXP.</t>
        <section anchor="sec-ret-loc">
          <name>Retrieve Interconnection Locations</name>
          <t><xref target="ex-retrieve-locations"/> shows an example message body of a request to retrieve a list of interconnection locations. The request includes a customer name and an ASN to filter out the locations.</t>
          <figure anchor="ex-retrieve-locations">
            <name>Message Body of a Request to Retrieve Interconnection Locations</name>
            <sourcecode type="json"><![CDATA[
{
  "ietf-bearer-svc:locations": {
    "customer": [
      {
        "name": "a future peer",
        "peer-as": 65536
      }
    ]
  }
}
]]></sourcecode>
          </figure>
          <t><xref target="ex-retrieve-locations-res"/> provides an example of a response to a query received from the server with a list of available interconnection locations.</t>
          <figure anchor="ex-retrieve-locations-res">
            <name>Message Body of a Response to Retrieve Interconnection Locations</name>
            <sourcecode type="json"><![CDATA[
{
  "ietf-bearer-svc:locations": {
    "customer": [
      {
        "name": "a future peer",
        "peer-as": 65536,
        "location": [
          {
            "name": "Location-X",
            "_comment": "other location attributes"
          },
          {
            "_comment": "other locations"
          }
        ]
      }
    ]
  }
}
]]></sourcecode>
          </figure>
        </section>
        <section anchor="create-bearers-and-retrieve-bearer-references">
          <name>Create Bearers and Retrieve Bearer References</name>
          <t>A peer can then use the location information and select the ones where it can request new bearers. As shown in <xref target="ex-create-bearer-parent-ref"/>, the request includes a location reference that is known to the server (returned in <xref target="ex-retrieve-locations-res"/>).</t>
          <figure anchor="ex-create-bearer-parent-ref">
            <name>Message Body of a Request to Create a Bearer Using a Provider&nbhy;Assigned Reference</name>
            <sourcecode type="json"><![CDATA[
{
  "ietf-bearer-svc:bearers": {
    "bearer": [
      {
        "name": "a-name-chosen-by-client",
        "provider-location-reference": "Location-X",
        "customer-point": {
          "identified-by": "ietf-bearer-svc:device-id",
          "device": {
            "device-id": "ASBR_1_Location_X"
          }
        },
        "type": "ietf-bearer-svc:ethernet"
      }
    ]
  }
}
]]></sourcecode>
          </figure>
          <t>The bearer is then activated by the server as shown in <xref target="ex-create-bearer-parent-ref-res"/>. A 'bearer-reference' is also returned. That reference can be used for subsequent AC activation requests.</t>
          <figure anchor="ex-create-bearer-parent-ref-res">
            <name>Message Body of a Response for a Bearer Created in a Specific Location</name>
            <sourcecode type="json"><![CDATA[
{
  "ietf-bearer-svc:bearers": {
    "bearer": [
      {
        "name": "a-name-chosen-by-client",
        "provider-location-reference": "Location-X",
        "customer-point": {
          "identified-by": "ietf-bearer-svc:device-id",
          "device": {
            "device-id": "ASBR_1_Location_X"
          }
        },
        "type": "ietf-bearer-svc:ethernet",
        "bearer-reference": "Location-X-Line-114",
        "status": {
          "oper-status": {
            "status": "ietf-vpn-common:op-up"
          }
        }
      }
    ]
  }
}
]]></sourcecode>
          </figure>
        </section>
        <section anchor="sec-manage-ac-bgp">
          <name>Manage ACs and BGP Sessions</name>
          <t>As depicted in <xref target="bgp-peer-network"/>, each network connects to the IXP switch via a bearer over which an AC is created.</t>
          <figure anchor="bgp-peer-network">
            <name>Simple Interconnection Topology</name>
            <artset>
              <artwork type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="432" width="472" viewBox="0 0 472 432" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                  <path d="M 8,32 L 8,176" fill="none" stroke="black"/>
                  <path d="M 8,272 L 8,416" fill="none" stroke="black"/>
                  <path d="M 24,96 L 24,144" fill="none" stroke="black"/>
                  <path d="M 24,336 L 24,384" fill="none" stroke="black"/>
                  <path d="M 152,112 L 152,144" fill="none" stroke="black"/>
                  <path d="M 152,336 L 152,384" fill="none" stroke="black"/>
                  <path d="M 192,32 L 192,104" fill="none" stroke="black"/>
                  <path d="M 192,160 L 192,176" fill="none" stroke="black"/>
                  <path d="M 192,272 L 192,344" fill="none" stroke="black"/>
                  <path d="M 192,360 L 192,416" fill="none" stroke="black"/>
                  <path d="M 248,208 L 248,240" fill="none" stroke="black"/>
                  <path d="M 312,128 L 312,208" fill="none" stroke="black"/>
                  <path d="M 312,240 L 312,336" fill="none" stroke="black"/>
                  <path d="M 368,208 L 368,240" fill="none" stroke="black"/>
                  <path d="M 8,32 L 192,32" fill="none" stroke="black"/>
                  <path d="M 24,96 L 152,96" fill="none" stroke="black"/>
                  <path d="M 160,112 L 296,112" fill="none" stroke="black"/>
                  <path d="M 24,144 L 152,144" fill="none" stroke="black"/>
                  <path d="M 8,176 L 192,176" fill="none" stroke="black"/>
                  <path d="M 248,208 L 304,208" fill="none" stroke="black"/>
                  <path d="M 320,208 L 368,208" fill="none" stroke="black"/>
                  <path d="M 176,224 L 248,224" fill="none" stroke="black"/>
                  <path d="M 368,224 L 424,224" fill="none" stroke="black"/>
                  <path d="M 248,240 L 304,240" fill="none" stroke="black"/>
                  <path d="M 320,240 L 368,240" fill="none" stroke="black"/>
                  <path d="M 8,272 L 192,272" fill="none" stroke="black"/>
                  <path d="M 24,336 L 152,336" fill="none" stroke="black"/>
                  <path d="M 160,352 L 296,352" fill="none" stroke="black"/>
                  <path d="M 24,384 L 152,384" fill="none" stroke="black"/>
                  <path d="M 8,416 L 192,416" fill="none" stroke="black"/>
                  <path d="M 296,112 C 304.83064,112 312,119.16936 312,128" fill="none" stroke="black"/>
                  <path d="M 296,352 C 304.83064,352 312,344.83064 312,336" fill="none" stroke="black"/>
                  <circle cx="144" cy="112" r="6" class="closeddot" fill="black"/>
                  <circle cx="144" cy="352" r="6" class="closeddot" fill="black"/>
                  <circle cx="152" cy="112" r="6" class="closeddot" fill="black"/>
                  <circle cx="152" cy="352" r="6" class="closeddot" fill="black"/>
                  <circle cx="312" cy="208" r="6" class="closeddot" fill="black"/>
                  <circle cx="312" cy="240" r="6" class="closeddot" fill="black"/>
                  <g class="text">
                    <text x="60" y="52">Provider</text>
                    <text x="128" y="52">Network</text>
                    <text x="168" y="52">A</text>
                    <text x="56" y="68">BGP</text>
                    <text x="112" y="68">ASN:65536</text>
                    <text x="284" y="68">Attachment-Circuit</text>
                    <text x="368" y="68">1</text>
                    <text x="332" y="84">Bearer=Location-X-Line-114</text>
                    <text x="68" y="116">ASBR-A-1</text>
                    <text x="220" y="132">192.0.2.1/24</text>
                    <text x="216" y="148">vlan-id:114</text>
                    <text x="152" y="228">...</text>
                    <text x="288" y="228">IXP</text>
                    <text x="316" y="228">SW</text>
                    <text x="448" y="228">...</text>
                    <text x="60" y="292">Provider</text>
                    <text x="128" y="292">Network</text>
                    <text x="168" y="292">B</text>
                    <text x="56" y="308">BGP</text>
                    <text x="112" y="308">ASN:65537</text>
                    <text x="232" y="340">.2/24</text>
                    <text x="68" y="356">ASBR-B-1</text>
                    <text x="268" y="372">Attachment-Circuit</text>
                    <text x="352" y="372">2</text>
                    <text x="308" y="388">Bearer=Location-X-Line-448</text>
                  </g>
                </svg>
              </artwork>
              <artwork type="ascii-art"><![CDATA[
.----------------------.                       
|  Provider Network A  |                       
|    BGP ASN:65536     |  Attachment-Circuit 1 
|                      |    Bearer=Location-X-Line-114    
| .---------------.    |        
| | ASBR-A-1     **------------------.
| |               |  192.0.2.1/24     |
| '---------------'  vlan-id:114      |
|                      |              |           
'----------------------'              |
                                      | 
                              .-------*------.  
                 ... ---------+   IXP SW     +------- ...
                              '-------*------'
                                      |
.----------------------.              |
|  Provider Network B  |              |
|    BGP ASN:65537     |              |
|                      |              |
| +---------------+    |  .2/24       |
| | ASBR-B-1     **------------------'
| |               |    |Attachment-Circuit 2
| '---------------'    | Bearer=Location-X-Line-448
|                      |
'----------------------'
]]></artwork>
            </artset>
          </figure>
          <t>The AC configuration (<xref target="bgp-peer-network-add-attachment-circuit"/>) includes parameters such as VLAN configuration, IP addresses, MTU, and any additional settings required for connectivity. The peering location is inferred from the 'bearer-reference'.</t>
          <figure anchor="bgp-peer-network-add-attachment-circuit">
            <name>Message Body of a Request to Create an AC to Connect to an IXP</name>
            <sourcecode type="json"><![CDATA[
{
  "ietf-ac-svc:attachment-circuits": {
    "ac": [
      {
        "name": "Attachment Circuit 1",
        "customer-name": "Network A",
        "description": "An AC to IXP SW in Location X",
        "requested-start": "2025-12-12T05:00:00.00Z",
        "peer-sap-id": [
          "asbr-1-interface"
        ],
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q"
          },
          "bearer-reference": "Location-X-Line-114"
        }
      }
    ]
  }
}
]]></sourcecode>
          </figure>
          <t><xref target="bgp-peer-network-response"/> shows the received response to a query with the required information for the activation of the AC.</t>
          <figure anchor="bgp-peer-network-response">
            <name>Message Body of a Response to an AC Request to Connect to an IXP</name>
            <sourcecode type="json"><![CDATA[
{
  "ietf-ac-svc:attachment-circuits": {
    "ac": [
      {
        "name": "Attachment Circuit 1",
        "customer-name": "Network A",
        "description": "An AC to IXP SW in Location X",
        "role": "ietf-ac-common:public-nni",
        "actual-start": "2025-12-12T05:00:00.00Z",
        "peer-sap-id": [
          "asbr-1-interface"
        ],
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "tag-type": "ietf-vpn-common:c-vlan",
              "cvlan-id": 114
            }
          },
          "bearer-reference": "Location-X-Line-114"
        },
        "ip-connection": {
          "ipv4": {
            "prefix-length": 24,
            "address": [
              {
                "address-id": "1",
                "customer-address": "192.0.2.1"
              }
            ]
          }
        }
      }
    ]
  }
}
]]></sourcecode>
          </figure>
          <t>Once the ACs are established, BGP peering sessions can be configured between routers of the participating networks. BGP sessions can be established via a route server or between two networks. For the sake of illustration, let us assume that BGP sessions are established directly between two networks. <xref target="bgp-peer-network-add-bgp-attachment-circuit"/> shows an example of a request to add a BGP session to an existing AC. The properties of that AC are not repeated in this request because that information is already communicated during the creation of the AC.</t>
          <figure anchor="bgp-peer-network-add-bgp-attachment-circuit">
            <name>Message Body of a Request to Create a BGP Session over an AC</name>
            <sourcecode type="json"><![CDATA[
{
  "ietf-ac-svc:attachment-circuits": {
    "ac": [
      {
        "name": "Attachment Circuit 1",
        "routing-protocols": {
          "routing-protocol": [
            {
              "id": "BGP",
              "type": "ietf-vpn-common:bgp-routing",
              "bgp": {
                "neighbor": [
                  {
                    "id": "Session-Network-B",
                    "remote-address": "192.0.2.1",
                    "local-as": 65537,
                    "peer-as": 65536,
                    "address-family": "ietf-vpn-common:ipv4",
                    "authentication": {
                      "enabled": true,
                      "keying-material": {
                        "key-id": 1,
                        "key": "test##"
                      }
                    },
                    "status": {
                      "admin-status": {
                        "status": "ietf-vpn-common:admin-up"
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    ]
  }
}
]]></sourcecode>
          </figure>
          <t><xref target="bgp-awaiting-validation"/> provides the example of a response that indicates that the request is awaiting validation. The response also includes a server-assigned reference for this BGP session.</t>
          <figure anchor="bgp-awaiting-validation">
            <name>Message Body of a Response for a BGP Session Awaiting Validation</name>
            <sourcecode type="json"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "ietf-ac-svc:attachment-circuits": {
    "ac": [
      {
        "name": "Attachment Circuit 1",
        "role": "ietf-ac-common:public-nni",
        "routing-protocols": {
          "routing-protocol": [
            {
              "id": "BGP",
              "type": "ietf-vpn-common:bgp-routing",
              "bgp": {
                "neighbor": [
                  {
                    "id": "Session-Network-B",
                    "server-reference": "peering-svc-45857",
                    "local-address": "192.0.2.2",
                    "remote-address": "192.0.2.1",
                    "local-as": 65537,
                    "peer-as": 65536,
                    "address-family": "ietf-vpn-common:ipv4",
                    "authentication": {
                      "enabled": true,
                      "keying-material": {
                        "key-id": 1,
                        "key": "test##"
                      }
                    },
                    "status": {
                      "admin-status": {
                        "status": "ietf-ac-common:awaiting-\
                                                          validation"
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    ]
  }
}
]]></sourcecode>
          </figure>
          <t>Once validation is accomplished, a status update is communicated back to the requestor. The BGP session can then be established over the AC. The BGP session configuration includes parameters such as neighbor IP addresses, ASNs, authentication settings (if required), etc. The configuration is triggered at each side of the BGP connection (i.e., peer ASBRs).</t>
          <figure anchor="bgp-peering-all-sessions">
            <name>Message Body of a Response to Report All Active BGP Sessions over an AC</name>
            <sourcecode type="json"><![CDATA[
{
  "ietf-ac-svc:routing-protocols": {
    "routing-protocol": [
      {
        "id": "BGP",
        "type": "ietf-vpn-common:bgp-routing",
        "bgp": {
          "neighbor": [
            {
              "id": "Session-Network-B",
              "server-reference": "peering-svc-45857",
              "local-address": "192.0.2.2",
              "remote-address": "192.0.2.1",
              "local-as": 65537,
              "peer-as": 65536,
              "address-family": "ietf-vpn-common:ipv4",
              "authentication": {
                "enabled": true,
                "keying-material": {
                  "key-id": 1,
                  "key": "test##"
                }
              },
              "status": {
                "admin-status": {
                  "status": "ietf-ac-common:up"
                }
              }
            },
            {
              "id": "Session-Network-C",
              "server-reference": "peering-svc-7866",
              "local-address": "192.0.2.3",
              "remote-address": "192.0.2.1",
              "local-as": 65538,
              "peer-as": 65536,
              "address-family": "ietf-vpn-common:ipv4",
              "authentication": {
                "enabled": true,
                "keying-material": {
                  "key-id": 1,
                  "key": "##test##"
                }
              },
              "status": {
                "admin-status": {
                  "status": "ietf-ac-common:up"
                }
              }
            },
            {
              "_comment": "other active BGP sessions over the AC"
            }
          ]
        }
      }
    ]
  }
}
]]></sourcecode>
          </figure>
        </section>
      </section>
      <section anchor="sec-cloudified-nfs">
        <name>Connectivity of Cloud Network Functions</name>
        <section anchor="scope">
          <name>Scope</name>
          <t>This section demonstrates how the AC service model permits managing connectivity requirements for complex Network Functions (NFs) -- containerized or virtualized -- that are typically deployed in telco networks. This integration leverages the concept of "Parent AC" to decouple physical and logical connectivity so that several ACs can share Layer 2 and Layer 3 resources. This approach provides flexibility, scalability, and API stability.</t>
          <t>The NFs have the following characteristics:</t>
          <ul spacing="normal">
            <li>
              <t>The NF is distributed on a set of compute nodes with scaled-out and redundant instances.</t>
            </li>
            <li>
              <t>The NF has two distinct type of instances: user plane ("nf-up") and routing control plane ("nf-cp").</t>
            </li>
            <li>
              <t>The user plane component can be distributed among the first 8 compute nodes ("compute-01" to "compute-08") to achieve high performance.</t>
            </li>
            <li>
              <t>The control plane is deployed in a redundant fashion on two instances running on distinct compute nodes ("compute-09" and "compute-10").</t>
            </li>
            <li>
              <t>The NF is attached to distinct networks, each making use of a dedicated VLAN. These VLANs are therefore instantiated as separate ACs. From a realization standpoint, the NF interface connectivity is generally provided thanks to MacVLAN or Single Root I/O Virtualization (SR-IOV). For the sake of simplicity, only two VLANs are presented in this example; additional VLANs are configured following a similar logic.</t>
            </li>
          </ul>
        </section>
        <section anchor="physical-infrastructure">
          <name>Physical Infrastructure</name>
          <t><xref target="cloud-parent-infra"/> describes the physical infrastructure. The compute nodes (customer) are attached to the provider infrastructure thanks to a set of physical links on which ACs are provisioned (i.e., "compute-XX-nicY"). The provider infrastructure can be realized in multiple ways, such as IP Fabric and Layer 2/3 Edge Routers. This document does not intend to detail these aspects.</t>
          <figure anchor="cloud-parent-infra">
            <name>Example Physical Topology for Cloud Deployment</name>
            <artset>
              <artwork type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="400" width="544" viewBox="0 0 544 400" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                  <path d="M 8,48 L 8,112" fill="none" stroke="black"/>
                  <path d="M 8,160 L 8,224" fill="none" stroke="black"/>
                  <path d="M 8,288 L 8,352" fill="none" stroke="black"/>
                  <path d="M 112,48 L 112,112" fill="none" stroke="black"/>
                  <path d="M 112,160 L 112,224" fill="none" stroke="black"/>
                  <path d="M 112,288 L 112,352" fill="none" stroke="black"/>
                  <path d="M 312,32 L 312,368" fill="none" stroke="black"/>
                  <path d="M 360,48 L 360,80" fill="none" stroke="black"/>
                  <path d="M 360,112 L 360,144" fill="none" stroke="black"/>
                  <path d="M 360,176 L 360,208" fill="none" stroke="black"/>
                  <path d="M 360,240 L 360,272" fill="none" stroke="black"/>
                  <path d="M 432,48 L 432,80" fill="none" stroke="black"/>
                  <path d="M 432,112 L 432,144" fill="none" stroke="black"/>
                  <path d="M 432,176 L 432,208" fill="none" stroke="black"/>
                  <path d="M 432,240 L 432,272" fill="none" stroke="black"/>
                  <path d="M 448,112 L 448,144" fill="none" stroke="black"/>
                  <path d="M 448,176 L 448,208" fill="none" stroke="black"/>
                  <path d="M 520,112 L 520,144" fill="none" stroke="black"/>
                  <path d="M 520,176 L 520,208" fill="none" stroke="black"/>
                  <path d="M 536,32 L 536,368" fill="none" stroke="black"/>
                  <path d="M 312,32 L 536,32" fill="none" stroke="black"/>
                  <path d="M 8,48 L 112,48" fill="none" stroke="black"/>
                  <path d="M 360,48 L 432,48" fill="none" stroke="black"/>
                  <path d="M 120,80 L 304,80" fill="none" stroke="black"/>
                  <path d="M 360,80 L 432,80" fill="none" stroke="black"/>
                  <path d="M 8,112 L 112,112" fill="none" stroke="black"/>
                  <path d="M 360,112 L 432,112" fill="none" stroke="black"/>
                  <path d="M 448,112 L 520,112" fill="none" stroke="black"/>
                  <path d="M 360,144 L 432,144" fill="none" stroke="black"/>
                  <path d="M 448,144 L 520,144" fill="none" stroke="black"/>
                  <path d="M 8,160 L 112,160" fill="none" stroke="black"/>
                  <path d="M 360,176 L 432,176" fill="none" stroke="black"/>
                  <path d="M 448,176 L 520,176" fill="none" stroke="black"/>
                  <path d="M 120,192 L 304,192" fill="none" stroke="black"/>
                  <path d="M 360,208 L 432,208" fill="none" stroke="black"/>
                  <path d="M 448,208 L 520,208" fill="none" stroke="black"/>
                  <path d="M 8,224 L 112,224" fill="none" stroke="black"/>
                  <path d="M 360,240 L 432,240" fill="none" stroke="black"/>
                  <path d="M 360,272 L 432,272" fill="none" stroke="black"/>
                  <path d="M 8,288 L 112,288" fill="none" stroke="black"/>
                  <path d="M 120,320 L 304,320" fill="none" stroke="black"/>
                  <path d="M 8,352 L 112,352" fill="none" stroke="black"/>
                  <path d="M 312,368 L 536,368" fill="none" stroke="black"/>
                  <g class="text">
                    <text x="196" y="52">bearer</text>
                    <text x="232" y="52">=</text>
                    <text x="208" y="68">compute-01-nic1</text>
                    <text x="60" y="84">compute-01</text>
                    <text x="196" y="164">bearer</text>
                    <text x="232" y="164">=</text>
                    <text x="208" y="180">compute-02-nic2</text>
                    <text x="60" y="196">compute-02</text>
                    <text x="208" y="260">[...]</text>
                    <text x="196" y="292">bearer</text>
                    <text x="232" y="292">=</text>
                    <text x="208" y="308">compute-10-nic0</text>
                    <text x="60" y="324">compute-10</text>
                    <text x="388" y="324">Provider</text>
                    <text x="456" y="324">Network</text>
                    <text x="428" y="340">Infrastructure</text>
                    <text x="328" y="356">(IP</text>
                    <text x="376" y="356">Fabric,</text>
                    <text x="448" y="356">Gateways,</text>
                    <text x="512" y="356">etc.)</text>
                  </g>
                </svg>
              </artwork>
              <artwork type="ascii-art"><![CDATA[
                                       .---------------------------.
 .------------.       bearer =         |     .--------.            |
 |            |    compute-01-nic1     |     |        |            |
 | compute-01 |------------------------|     '--------'            |
 |            |                        |                           |
 '------------'                        |     .--------. .--------. |
                                       |     |        | |        | |
                                       |     '--------' '--------' |
 .------------.       bearer =         |                           |
 |            |    compute-02-nic2     |     .--------. .--------. |
 | compute-02 |------------------------|     |        | |        | |
 |            |                        |     '--------' '--------' |
 '------------'                        |                           |
                                       |     .--------.            |
                        [...]          |     |        |            |
                                       |     '--------'            |
 .------------.       bearer =         |                           |
 |            |    compute-10-nic0     |                           |
 | compute-10 |------------------------|     Provider Network      |
 |            |                        |       Infrastructure      |
 '------------'                        |(IP Fabric, Gateways, etc.)|
                                       '---------------------------'
]]></artwork>
            </artset>
          </figure>
        </section>
        <section anchor="nfs-deployment">
          <name>NFs Deployment</name>
          <t>The NFs are deployed on this infrastructure in the following way:</t>
          <ul spacing="normal">
            <li>
              <t>Configuration of a Parent AC as a centralized attachment for "vlan 100". The Parent AC captures Layer 2 and Layer 3 properties for this VLAN: vlan-id, IP default gateway and subnet, IP address pool for NFs endpoints, static routes with BFD to user plane, and BGP configuration to control plane NFs. In addition, the IP addresses of the user plane ("nf-up") instances are protected using BFD.</t>
            </li>
            <li>
              <t>Configuration of a Parent AC as a centralized attachment for "vlan 200". This VLAN is for Layer 2 connectivity between NFs (no IP configuration in the provider network).</t>
            </li>
            <li>
              <t>Child ACs binding bearers to Parent ACs for "vlan 100" and "vlan 200".</t>
            </li>
            <li>
              <t>The deployment of the network service to all compute nodes ("compute-01" to "compute-10"), even though the NF is not instantiated on "compute-07"/"compute-08". This approach permits handling compute failures and scale-out scenarios in a reactive and flexible fashion thanks to a pre-provisioned networking logic.</t>
            </li>
          </ul>
          <figure anchor="cloud-parent-logical">
            <name>Logical Topology of the NFs Deployment</name>
            <artset>
              <artwork type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1072" width="544" viewBox="0 0 544 1072" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                  <path d="M 8,256 L 8,320" fill="none" stroke="black"/>
                  <path d="M 8,352 L 8,416" fill="none" stroke="black"/>
                  <path d="M 8,464 L 8,528" fill="none" stroke="black"/>
                  <path d="M 8,560 L 8,592" fill="none" stroke="black"/>
                  <path d="M 8,624 L 8,656" fill="none" stroke="black"/>
                  <path d="M 8,688 L 8,752" fill="none" stroke="black"/>
                  <path d="M 8,784 L 8,848" fill="none" stroke="black"/>
                  <path d="M 16,896 L 16,1040" fill="none" stroke="black"/>
                  <path d="M 24,288 L 24,304" fill="none" stroke="black"/>
                  <path d="M 24,384 L 24,400" fill="none" stroke="black"/>
                  <path d="M 24,496 L 24,512" fill="none" stroke="black"/>
                  <path d="M 24,720 L 24,736" fill="none" stroke="black"/>
                  <path d="M 24,816 L 24,832" fill="none" stroke="black"/>
                  <path d="M 80,288 L 80,304" fill="none" stroke="black"/>
                  <path d="M 80,384 L 80,400" fill="none" stroke="black"/>
                  <path d="M 80,496 L 80,512" fill="none" stroke="black"/>
                  <path d="M 80,720 L 80,736" fill="none" stroke="black"/>
                  <path d="M 80,816 L 80,832" fill="none" stroke="black"/>
                  <path d="M 96,256 L 96,320" fill="none" stroke="black"/>
                  <path d="M 96,352 L 96,416" fill="none" stroke="black"/>
                  <path d="M 96,464 L 96,528" fill="none" stroke="black"/>
                  <path d="M 96,560 L 96,592" fill="none" stroke="black"/>
                  <path d="M 96,624 L 96,656" fill="none" stroke="black"/>
                  <path d="M 96,688 L 96,752" fill="none" stroke="black"/>
                  <path d="M 96,784 L 96,848" fill="none" stroke="black"/>
                  <path d="M 208,48 L 208,176" fill="none" stroke="black"/>
                  <path d="M 304,896 L 304,1040" fill="none" stroke="black"/>
                  <path d="M 344,224 L 344,848" fill="none" stroke="black"/>
                  <path d="M 368,304 L 368,384" fill="none" stroke="black"/>
                  <path d="M 368,416 L 368,496" fill="none" stroke="black"/>
                  <path d="M 384,200 L 384,240" fill="none" stroke="black"/>
                  <path d="M 448,240 L 448,296" fill="none" stroke="black"/>
                  <path d="M 520,304 L 520,384" fill="none" stroke="black"/>
                  <path d="M 520,416 L 520,496" fill="none" stroke="black"/>
                  <path d="M 528,48 L 528,176" fill="none" stroke="black"/>
                  <path d="M 536,224 L 536,848" fill="none" stroke="black"/>
                  <path d="M 224,32 L 512,32" fill="none" stroke="black"/>
                  <path d="M 224,192 L 512,192" fill="none" stroke="black"/>
                  <path d="M 344,224 L 376,224" fill="none" stroke="black"/>
                  <path d="M 392,224 L 536,224" fill="none" stroke="black"/>
                  <path d="M 384,240 L 448,240" fill="none" stroke="black"/>
                  <path d="M 8,256 L 96,256" fill="none" stroke="black"/>
                  <path d="M 40,272 L 64,272" fill="none" stroke="black"/>
                  <path d="M 104,288 L 168,288" fill="none" stroke="black"/>
                  <path d="M 240,288 L 336,288" fill="none" stroke="black"/>
                  <path d="M 104,304 L 168,304" fill="none" stroke="black"/>
                  <path d="M 240,304 L 336,304" fill="none" stroke="black"/>
                  <path d="M 368,304 L 520,304" fill="none" stroke="black"/>
                  <path d="M 40,320 L 64,320" fill="none" stroke="black"/>
                  <path d="M 8,352 L 96,352" fill="none" stroke="black"/>
                  <path d="M 40,368 L 64,368" fill="none" stroke="black"/>
                  <path d="M 104,384 L 168,384" fill="none" stroke="black"/>
                  <path d="M 240,384 L 336,384" fill="none" stroke="black"/>
                  <path d="M 368,384 L 520,384" fill="none" stroke="black"/>
                  <path d="M 104,400 L 168,400" fill="none" stroke="black"/>
                  <path d="M 240,400 L 336,400" fill="none" stroke="black"/>
                  <path d="M 40,416 L 64,416" fill="none" stroke="black"/>
                  <path d="M 368,416 L 520,416" fill="none" stroke="black"/>
                  <path d="M 8,464 L 96,464" fill="none" stroke="black"/>
                  <path d="M 40,480 L 64,480" fill="none" stroke="black"/>
                  <path d="M 104,496 L 168,496" fill="none" stroke="black"/>
                  <path d="M 240,496 L 336,496" fill="none" stroke="black"/>
                  <path d="M 368,496 L 520,496" fill="none" stroke="black"/>
                  <path d="M 104,512 L 168,512" fill="none" stroke="black"/>
                  <path d="M 240,512 L 336,512" fill="none" stroke="black"/>
                  <path d="M 40,528 L 64,528" fill="none" stroke="black"/>
                  <path d="M 8,560 L 96,560" fill="none" stroke="black"/>
                  <path d="M 104,576 L 168,576" fill="none" stroke="black"/>
                  <path d="M 240,576 L 336,576" fill="none" stroke="black"/>
                  <path d="M 104,592 L 168,592" fill="none" stroke="black"/>
                  <path d="M 240,592 L 336,592" fill="none" stroke="black"/>
                  <path d="M 8,624 L 96,624" fill="none" stroke="black"/>
                  <path d="M 104,640 L 168,640" fill="none" stroke="black"/>
                  <path d="M 240,640 L 336,640" fill="none" stroke="black"/>
                  <path d="M 104,656 L 168,656" fill="none" stroke="black"/>
                  <path d="M 240,656 L 336,656" fill="none" stroke="black"/>
                  <path d="M 8,688 L 96,688" fill="none" stroke="black"/>
                  <path d="M 112,688 L 192,688" fill="none" stroke="black"/>
                  <path d="M 224,688 L 336,688" fill="none" stroke="black"/>
                  <path d="M 40,704 L 64,704" fill="none" stroke="black"/>
                  <path d="M 104,720 L 168,720" fill="none" stroke="black"/>
                  <path d="M 240,720 L 336,720" fill="none" stroke="black"/>
                  <path d="M 104,736 L 168,736" fill="none" stroke="black"/>
                  <path d="M 240,736 L 336,736" fill="none" stroke="black"/>
                  <path d="M 40,752 L 64,752" fill="none" stroke="black"/>
                  <path d="M 8,784 L 96,784" fill="none" stroke="black"/>
                  <path d="M 112,784 L 200,784" fill="none" stroke="black"/>
                  <path d="M 232,784 L 336,784" fill="none" stroke="black"/>
                  <path d="M 40,800 L 64,800" fill="none" stroke="black"/>
                  <path d="M 104,816 L 168,816" fill="none" stroke="black"/>
                  <path d="M 240,816 L 336,816" fill="none" stroke="black"/>
                  <path d="M 104,832 L 168,832" fill="none" stroke="black"/>
                  <path d="M 240,832 L 336,832" fill="none" stroke="black"/>
                  <path d="M 40,848 L 64,848" fill="none" stroke="black"/>
                  <path d="M 344,848 L 536,848" fill="none" stroke="black"/>
                  <path d="M 32,880 L 288,880" fill="none" stroke="black"/>
                  <path d="M 320,960 L 352,960" fill="none" stroke="black"/>
                  <path d="M 32,1056 L 288,1056" fill="none" stroke="black"/>
                  <path d="M 224,32 C 215.16936,32 208,39.16936 208,48" fill="none" stroke="black"/>
                  <path d="M 512,32 C 520.83064,32 528,39.16936 528,48" fill="none" stroke="black"/>
                  <path d="M 224,192 C 215.16936,192 208,184.83064 208,176" fill="none" stroke="black"/>
                  <path d="M 512,192 C 520.83064,192 528,184.83064 528,176" fill="none" stroke="black"/>
                  <path d="M 40,272 C 31.16936,272 24,279.16936 24,288" fill="none" stroke="black"/>
                  <path d="M 64,272 C 72.83064,272 80,279.16936 80,288" fill="none" stroke="black"/>
                  <path d="M 40,320 C 31.16936,320 24,312.83064 24,304" fill="none" stroke="black"/>
                  <path d="M 64,320 C 72.83064,320 80,312.83064 80,304" fill="none" stroke="black"/>
                  <path d="M 40,368 C 31.16936,368 24,375.16936 24,384" fill="none" stroke="black"/>
                  <path d="M 64,368 C 72.83064,368 80,375.16936 80,384" fill="none" stroke="black"/>
                  <path d="M 40,416 C 31.16936,416 24,408.83064 24,400" fill="none" stroke="black"/>
                  <path d="M 64,416 C 72.83064,416 80,408.83064 80,400" fill="none" stroke="black"/>
                  <path d="M 40,480 C 31.16936,480 24,487.16936 24,496" fill="none" stroke="black"/>
                  <path d="M 64,480 C 72.83064,480 80,487.16936 80,496" fill="none" stroke="black"/>
                  <path d="M 40,528 C 31.16936,528 24,520.83064 24,512" fill="none" stroke="black"/>
                  <path d="M 64,528 C 72.83064,528 80,520.83064 80,512" fill="none" stroke="black"/>
                  <path d="M 40,704 C 31.16936,704 24,711.16936 24,720" fill="none" stroke="black"/>
                  <path d="M 64,704 C 72.83064,704 80,711.16936 80,720" fill="none" stroke="black"/>
                  <path d="M 40,752 C 31.16936,752 24,744.83064 24,736" fill="none" stroke="black"/>
                  <path d="M 64,752 C 72.83064,752 80,744.83064 80,736" fill="none" stroke="black"/>
                  <path d="M 40,800 C 31.16936,800 24,807.16936 24,816" fill="none" stroke="black"/>
                  <path d="M 64,800 C 72.83064,800 80,807.16936 80,816" fill="none" stroke="black"/>
                  <path d="M 40,848 C 31.16936,848 24,840.83064 24,832" fill="none" stroke="black"/>
                  <path d="M 64,848 C 72.83064,848 80,840.83064 80,832" fill="none" stroke="black"/>
                  <path d="M 32,880 C 23.16936,880 16,887.16936 16,896" fill="none" stroke="black"/>
                  <path d="M 288,880 C 296.83064,880 304,887.16936 304,896" fill="none" stroke="black"/>
                  <path d="M 32,1056 C 23.16936,1056 16,1048.83064 16,1040" fill="none" stroke="black"/>
                  <path d="M 288,1056 C 296.83064,1056 304,1048.83064 304,1040" fill="none" stroke="black"/>
                  <polygon class="arrowhead" points="456,296 444,290.4 444,301.6" fill="black" transform="rotate(90,448,296)"/>
                  <polygon class="arrowhead" points="360,960 348,954.4 348,965.6" fill="black" transform="rotate(0,352,960)"/>
                  <polygon class="arrowhead" points="344,784 332,778.4 332,789.6" fill="black" transform="rotate(0,336,784)"/>
                  <polygon class="arrowhead" points="344,688 332,682.4 332,693.6" fill="black" transform="rotate(0,336,688)"/>
                  <polygon class="arrowhead" points="120,784 108,778.4 108,789.6" fill="black" transform="rotate(180,112,784)"/>
                  <polygon class="arrowhead" points="120,688 108,682.4 108,693.6" fill="black" transform="rotate(180,112,688)"/>
                  <g class="text">
                    <text x="228" y="52">VLAN</text>
                    <text x="268" y="52">100:</text>
                    <text x="236" y="84">Static</text>
                    <text x="288" y="84">route</text>
                    <text x="324" y="84">to</text>
                    <text x="368" y="84">virtual</text>
                    <text x="416" y="84">BGP</text>
                    <text x="444" y="84">NH</text>
                    <text x="468" y="84">in</text>
                    <text x="500" y="84">user</text>
                    <text x="232" y="100">plane</text>
                    <text x="296" y="100">instances</text>
                    <text x="348" y="100">NF</text>
                    <text x="380" y="100">with</text>
                    <text x="416" y="100">BFD</text>
                    <text x="480" y="100">protection:</text>
                    <text x="216" y="132">-</text>
                    <text x="296" y="132">198.51.100.100/32</text>
                    <text x="384" y="132">via</text>
                    <text x="440" y="132">192.0.2.1</text>
                    <text x="216" y="148">-</text>
                    <text x="296" y="148">198.51.100.100/32</text>
                    <text x="384" y="148">via</text>
                    <text x="440" y="148">192.0.2.2</text>
                    <text x="224" y="164">...</text>
                    <text x="216" y="180">-</text>
                    <text x="296" y="180">198.51.100.100/32</text>
                    <text x="384" y="180">via</text>
                    <text x="440" y="180">192.0.2.8</text>
                    <text x="132" y="228">VLAN</text>
                    <text x="168" y="228">100</text>
                    <text x="196" y="228">IP</text>
                    <text x="236" y="228">subnet</text>
                    <text x="196" y="244">192.0.2.0/24</text>
                    <text x="108" y="276">.1</text>
                    <text x="164" y="276">&lt;-</text>
                    <text x="192" y="276">BFD</text>
                    <text x="220" y="276">-&gt;</text>
                    <text x="52" y="292">nf-up1</text>
                    <text x="204" y="292">vlan-100</text>
                    <text x="204" y="308">vlan-200</text>
                    <text x="404" y="324">Bridge</text>
                    <text x="452" y="324">VLAN</text>
                    <text x="488" y="324">100</text>
                    <text x="52" y="340">compute-01</text>
                    <text x="440" y="340">(L2/L3)</text>
                    <text x="404" y="356">IP</text>
                    <text x="452" y="356">gateway:</text>
                    <text x="108" y="372">.2</text>
                    <text x="164" y="372">&lt;-</text>
                    <text x="192" y="372">BFD</text>
                    <text x="220" y="372">-&gt;</text>
                    <text x="444" y="372">192.0.2.254/24</text>
                    <text x="52" y="388">nf-up2</text>
                    <text x="204" y="388">vlan-100</text>
                    <text x="204" y="404">vlan-200</text>
                    <text x="52" y="436">compute-02</text>
                    <text x="192" y="452">[...]</text>
                    <text x="404" y="452">Bridge</text>
                    <text x="452" y="452">VLAN</text>
                    <text x="488" y="452">200</text>
                    <text x="416" y="468">(L2</text>
                    <text x="456" y="468">only)</text>
                    <text x="108" y="484">.6</text>
                    <text x="164" y="484">&lt;-</text>
                    <text x="192" y="484">BFD</text>
                    <text x="220" y="484">-&gt;</text>
                    <text x="52" y="500">nf-up6</text>
                    <text x="204" y="500">vlan-100</text>
                    <text x="204" y="516">vlan-200</text>
                    <text x="52" y="548">compute-06</text>
                    <text x="204" y="580">vlan-100</text>
                    <text x="204" y="596">vlan-200</text>
                    <text x="52" y="612">compute-07</text>
                    <text x="204" y="644">vlan-100</text>
                    <text x="204" y="660">vlan-200</text>
                    <text x="52" y="676">compute-08</text>
                    <text x="208" y="692">BGP</text>
                    <text x="108" y="708">.9</text>
                    <text x="308" y="708">.252</text>
                    <text x="52" y="724">nf-cp1</text>
                    <text x="204" y="724">vlan-100</text>
                    <text x="204" y="740">vlan-200</text>
                    <text x="52" y="772">compute-09</text>
                    <text x="216" y="788">BGP</text>
                    <text x="112" y="804">.10</text>
                    <text x="316" y="804">.253</text>
                    <text x="52" y="820">nf-cp2</text>
                    <text x="204" y="820">vlan-100</text>
                    <text x="204" y="836">vlan-200</text>
                    <text x="52" y="868">compute-10</text>
                    <text x="40" y="900">nf-cp</text>
                    <text x="96" y="900">routing</text>
                    <text x="144" y="900">for</text>
                    <text x="180" y="900">VLAN</text>
                    <text x="216" y="900">100</text>
                    <text x="60" y="916">advertises</text>
                    <text x="128" y="916">pools</text>
                    <text x="172" y="916">with</text>
                    <text x="208" y="916">1:N</text>
                    <text x="252" y="916">backup</text>
                    <text x="44" y="932">route.</text>
                    <text x="32" y="948">BGP</text>
                    <text x="80" y="948">UPDATE:</text>
                    <text x="80" y="964">203.0.113.0/24,</text>
                    <text x="156" y="964">NH</text>
                    <text x="176" y="964">=</text>
                    <text x="244" y="964">198.51.100.100</text>
                    <text x="80" y="980">203.0.113.0/28,</text>
                    <text x="156" y="980">NH</text>
                    <text x="176" y="980">=</text>
                    <text x="224" y="980">192.0.2.1</text>
                    <text x="84" y="996">203.0.113.16/28,</text>
                    <text x="164" y="996">NH</text>
                    <text x="184" y="996">=</text>
                    <text x="232" y="996">192.0.2.2</text>
                    <text x="32" y="1012">...</text>
                    <text x="84" y="1028">203.0.113.80/28,</text>
                    <text x="164" y="1028">NH</text>
                    <text x="184" y="1028">=</text>
                    <text x="232" y="1028">192.0.2.6</text>
                    <text x="84" y="1044">203.0.113.96/28,</text>
                    <text x="164" y="1044">NH</text>
                    <text x="184" y="1044">=</text>
                    <text x="232" y="1044">192.0.2.7</text>
                  </g>
                </svg>
              </artwork>
              <artwork type="ascii-art"><![CDATA[
                          .-------------------------------------. 
                         |VLAN 100:                              | 
                         |                                       | 
                         |Static route to virtual BGP NH in user | 
                         |plane instances NF with BFD protection:| 
                         |                                       | 
                         |- 198.51.100.100/32 via 192.0.2.1      | 
                         |- 198.51.100.100/32 via 192.0.2.2      | 
                         |...                                    | 
                         |- 198.51.100.100/32 via 192.0.2.8      | 
                          '-------------------------------------' 
                                               |                   
              VLAN 100 IP subnet          .----|------------------.
                  192.0.2.0/24            |    +-------+          |
.----------.                              |            |          |
|  .----.  |.1     <- BFD ->              |            |          |
| |nf-up1| |---------vlan-100-------------|            v          |
| |      | |---------vlan-200-------------|  .------------------. |
|  '----'  |                              |  | Bridge VLAN 100  | |
 compute-01                               |  |     (L2/L3)      | |
.----------.                              |  |   IP gateway:    | |
|  .----.  |.2     <- BFD ->              |  |  192.0.2.254/24  | |
| |nf-up2| |---------vlan-100-------------|  '------------------' |
| |      | |---------vlan-200-------------|                       |
|  '----'  |                              |  .------------------. |
 compute-02                               |  |                  | |
                     [...]                |  | Bridge VLAN 200  | |
.----------.                              |  |    (L2 only)     | |
|  .----.  |.6     <- BFD ->              |  |                  | |
| |nf-up6| |---------vlan-100-------------|  '------------------' |
| |      | |---------vlan-200-------------|                       |
|  '----'  |                              |                       |
 compute-06                               |                       |
.----------.                              |                       |
|          |---------vlan-100-------------|                       |
|          |---------vlan-200-------------|                       |
 compute-07                               |                       |
.----------.                              |                       |
|          |---------vlan-100-------------|                       |
|          |---------vlan-200-------------|                       |
 compute-08                               |                       |
.----------. <----------BGP-------------->|                       |
|  .----.  |.9                      .252  |                       |
| |nf-cp1| |---------vlan-100-------------|                       |
| |      | |---------vlan-200-------------|                       |
|  '----'  |                              |                       |
 compute-09                               |                       |
.----------. <-----------BGP------------->|                       |
|  .----.  |.10                      .253 |                       |
| |nf-cp2| |---------vlan-100-------------|                       |
| |      | |---------vlan-200-------------|                       |
|  '----'  |                              '-----------------------'
 compute-10                                                        
  .---------------------------------.  
 |nf-cp routing for VLAN 100         | 
 |advertises pools with 1:N backup   | 
 |route.                             | 
 |BGP UPDATE:                        | 
 |203.0.113.0/24, NH = 198.51.100.100| ---->                       
 |203.0.113.0/28, NH = 192.0.2.1     | 
 |203.0.113.16/28, NH = 192.0.2.2    | 
 |...                                | 
 |203.0.113.80/28, NH = 192.0.2.6    | 
 |203.0.113.96/28, NH = 192.0.2.7    | 
  '---------------------------------'
]]></artwork>
            </artset>
          </figure>
          <t>For readability, the payload is displayed as a single JSON file (<xref target="parent-profile"/>). In practice, several API calls may take place to initialize these resources (e.g., GET requests from the customer to retrieve the IP address pools for NFs on "vlan 100" thanks to parent configuration and BGP configuration and POST extra routes for user planes and BFD).</t>
          <t>Note that no individual IP addresses are assigned for the NF user plane instances (i.e., no 'customer-address' in the Child AC). The assignment of IP addresses to the NF endpoints is managed by the Cloud Infrastructure IP Address Management (IPAM) based on the 'customer-address' IP address pool "192.0.2.1-200". Like in any conventional LAN-facing scenario, it is assumed that the actual binding of IP endpoints to logical attachments (here Child ACs) relies on a dedicated protocol logic (typically, Address Resolution Protocol (ARP) <xref target="RFC0826"/> or Neighbor Discovery <xref target="RFC4861"/>) and is not captured in the data model. Hence, the IP addresses displayed for NF user plane instances are simply examples to illustrate a realization approach. Note also that the control plane is defined with static IP address assignments on a given AC/bearer to illustrate another deployment alternative.</t>
          <figure anchor="parent-profile">
            <name>Message Body for the Configuration of the NF ACs</name>
            <sourcecode type="json"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "ietf-ac-svc:specific-provisioning-profiles": {
    "valid-provider-identifiers": {
      "failure-detection-profile-identifier": [
        {
          "id": "single-hop-bfd-user-plane"
        }
      ]
    }
  },
  "ietf-ac-svc:attachment-circuits": {
    "ac": [
      {
        "name": "parent-vlan-100",
        "description": "This parent represents a bridge with L3 \
                          interface (IRB) to connect NF in vlan 100",
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "cvlan-id": 100
            }
          }
        },
        "ip-connection": {
          "ipv4": {
            "virtual-address": "192.0.2.254",
            "prefix-length": 24,
            "customer-addresses": {
              "address-pool": [
                {
                  "pool-id": "pool-1",
                  "start-address": "192.0.2.1",
                  "end-address": "192.0.2.200"
                }
              ]
            }
          }
        },
        "routing-protocols": {
          "routing-protocol": [
            {
              "id": "1",
              "type": "ietf-vpn-common:static-routing",
              "static": {
                "cascaded-lan-prefixes": {
                  "ipv4-lan-prefix": [
                    {
                      "lan": "198.51.100.100/32",
                      "next-hop": "192.0.2.1",
                      "lan-tag": "virtual-next-hop",
                      "failure-detection-profile": "single-hop-bfd-\
                                                          user-plane"
                    },
                    {
                      "lan": "198.51.100.100/32",
                      "next-hop": "192.0.2.2",
                      "lan-tag": "virtual-next-hop",
                      "failure-detection-profile": "single-hop-bfd-\
                                                          user-plane"
                    },
                    {
                      "_comment": "192.0.2.3-192.0.2.7 are not \
                                                           displayed"
                    },
                    {
                      "lan": "198.51.100.100/32",
                      "next-hop": "192.0.2.8",
                      "lan-tag": "virtual-next-hop",
                      "failure-detection-profile": "single-hop-bfd-\
                                                          user-plane"
                    }
                  ]
                }
              }
            },
            {
              "id": "2",
              "type": "ietf-vpn-common:bgp-routing",
              "bgp": {
                "peer-groups": {
                  "peer-group": [
                    {
                      "name": "peer-nf-cp-vlan-100-gw1",
                      "local-as": 65536,
                      "peer-as": 65537,
                      "local-address": "192.0.2.252"
                    },
                    {
                      "name": "peer-nf-cp-vlan-100-gw2",
                      "local-as": 65536,
                      "peer-as": 65537,
                      "local-address": "192.0.2.253"
                    }
                  ]
                },
                "neighbor": [
                  {
                    "id": "gw1-cp1",
                    "remote-address": "192.0.2.101",
                    "peer-group": "peer-nf-cp-vlan-100-gw1"
                  },
                  {
                    "id": "gw1-cp2",
                    "remote-address": "192.0.2.102",
                    "peer-group": "peer-nf-cp-vlan-100-gw1"
                  },
                  {
                    "id": "gw2-cp1",
                    "remote-address": "192.0.2.101",
                    "peer-group": "peer-nf-cp-vlan-100-gw2"
                  },
                  {
                    "id": "gw2-cp2",
                    "remote-address": "192.0.2.102",
                    "peer-group": "peer-nf-cp-vlan-100-gw2"
                  }
                ]
              }
            }
          ]
        },
        "oam": {
          "bfd": {
            "session": [
              {
                "id": "bfd-gw1-nf-up1",
                "local-address": "192.0.2.252",
                "remote-address": "192.0.2.1",
                "profile": "single-hop-bfd-user-plane"
              },
              {
                "id": "bfd-gw2-nf-up1",
                "local-address": "192.0.2.253",
                "remote-address": "192.0.2.1",
                "profile": "single-hop-bfd-user-plane"
              },
              {
                "id": "bfd-gw1-nf-up2",
                "local-address": "192.0.2.252",
                "remote-address": "192.0.2.2",
                "profile": "single-hop-bfd-user-plane"
              },
              {
                "id": "bfd-gw2-nf-up2",
                "local-address": "192.0.2.253",
                "remote-address": "192.0.2.2",
                "profile": "single-hop-bfd-user-plane"
              },
              {
                "_comment": "192.0.2.3-192.0.2.7 sessions are not \
                                                           displayed"
              },
              {
                "id": "bfd-gw1-nf-up8",
                "local-address": "192.0.2.252",
                "remote-address": "192.0.2.8",
                "profile": "single-hop-bfd-user-plane"
              },
              {
                "id": "bfd-gw2-nf-up8",
                "local-address": "192.0.2.253",
                "remote-address": "192.0.2.8",
                "profile": "single-hop-bfd-user-plane"
              }
            ]
          }
        }
      },
      {
        "name": "parent-vlan-200",
        "description": "This parent represents a bridge that \
                                          connects a NF in vlan 200",
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "cvlan-id": 200
            }
          }
        }
      },
      {
        "name": "ac-nf-up-01-vlan-100",
        "description": "attachment to NF-up instance 1 in vlan 100",
        "parent-ref": ["parent-vlan-100"],
        "l2-connection": {
          "bearer-reference": "compute-01-nic1"
        }
      },
      {
        "name": "ac-nf-up-02-vlan-100",
        "description": "attachment to NF-up instance 2 in vlan 100",
        "parent-ref": ["parent-vlan-100"],
        "l2-connection": {
          "bearer-reference": "compute-02-nic2"
        }
      },
      {
        "_comment": "ac-nf-up-03-vlan-100 to ac-nf-up-07-vlan-100 \
                                                          are hidden"
      },
      {
        "name": "ac-nf-up-08-vlan-100",
        "description": "attachment to NF-up instance 10 in vlan 100",
        "parent-ref": ["parent-vlan-100"],
        "l2-connection": {
          "bearer-reference": "compute-08-nic1"
        }
      },
      {
        "name": "ac-nf-cp-01-vlan-100",
        "description": "attachment to NF-CP instance 1 in vlan 100",
        "parent-ref": ["parent-vlan-100"],
        "l2-connection": {
          "bearer-reference": "compute-09-nic0"
        },
        "ip-connection": {
          "ipv4": {
            "prefix-length": 24,
            "address": [
              {
                "address-id": "1",
                "customer-address": "192.0.2.101"
              }
            ]
          }
        }
      },
      {
        "name": "ac-nf-cp-02-vlan-100",
        "description": "attachment to NF-CP instance 2 in vlan 100",
        "parent-ref": ["parent-vlan-100"],
        "l2-connection": {
          "bearer-reference": "compute-10-nic0"
        },
        "ip-connection": {
          "ipv4": {
            "prefix-length": 24,
            "address": [
              {
                "address-id": "1",
                "customer-address": "192.0.2.102"
              }
            ]
          }
        }
      },
      {
        "name": "ac-nf-up-1-vlan-200",
        "description": "attachment to NF-up instance 1 in vlan 200",
        "parent-ref": ["parent-vlan-200"],
        "l2-connection": {
          "bearer-reference": "compute-01-nic1"
        }
      },
      {
        "_comment": "ac-nf-up-2-vlan-200 to ac-nf-cp-01-vlan-200 \
                                                   are not displayed"
      },
      {
        "name": "ac-nf-cp-2-vlan-200",
        "description": "attachment to NF-CP instance 2 in vlan 200",
        "parent-ref": ["parent-vlan-200"],
        "l2-connection": {
          "bearer-reference": "compute-10-nic0"
        }
      }
    ]
  }
}
]]></sourcecode>
          </figure>
        </section>
        <section anchor="nf-failure-and-scale-out">
          <name>NF Failure and Scale-Out</name>
          <t>Assuming a failure of "compute-01", the instance "nf-up-1" can be redeployed to "compute-07" by the NF / cloud orchestration. The NFs can be scaled-out thanks to the creation of an extra instance "nf-up7" on "compute-08". Since connectivity is pre-provisioned, these operations happen without any API calls. In other words, this redeployment is transparent from the perspective of the configuration of the provider network.</t>
          <figure anchor="cloud-parent-nf-lcm">
            <name>Example of Compute Failure and Scale-Out</name>
            <artset>
              <artwork type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="432" width="544" viewBox="0 0 544 432" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                  <path d="M 8,64 L 8,128" fill="none" stroke="black"/>
                  <path d="M 8,240 L 8,304" fill="none" stroke="black"/>
                  <path d="M 8,336 L 8,400" fill="none" stroke="black"/>
                  <path d="M 24,272 L 24,288" fill="none" stroke="black"/>
                  <path d="M 24,368 L 24,384" fill="none" stroke="black"/>
                  <path d="M 56,160 L 56,232" fill="none" stroke="black"/>
                  <path d="M 80,272 L 80,288" fill="none" stroke="black"/>
                  <path d="M 80,368 L 80,384" fill="none" stroke="black"/>
                  <path d="M 96,64 L 96,128" fill="none" stroke="black"/>
                  <path d="M 96,240 L 96,304" fill="none" stroke="black"/>
                  <path d="M 96,336 L 96,400" fill="none" stroke="black"/>
                  <path d="M 344,32 L 344,416" fill="none" stroke="black"/>
                  <path d="M 368,64 L 368,128" fill="none" stroke="black"/>
                  <path d="M 368,160 L 368,224" fill="none" stroke="black"/>
                  <path d="M 520,64 L 520,128" fill="none" stroke="black"/>
                  <path d="M 520,160 L 520,224" fill="none" stroke="black"/>
                  <path d="M 536,32 L 536,416" fill="none" stroke="black"/>
                  <path d="M 344,32 L 536,32" fill="none" stroke="black"/>
                  <path d="M 8,64 L 96,64" fill="none" stroke="black"/>
                  <path d="M 368,64 L 520,64" fill="none" stroke="black"/>
                  <path d="M 104,96 L 160,96" fill="none" stroke="black"/>
                  <path d="M 232,96 L 336,96" fill="none" stroke="black"/>
                  <path d="M 104,112 L 160,112" fill="none" stroke="black"/>
                  <path d="M 232,112 L 336,112" fill="none" stroke="black"/>
                  <path d="M 368,128 L 520,128" fill="none" stroke="black"/>
                  <path d="M 368,160 L 520,160" fill="none" stroke="black"/>
                  <path d="M 368,224 L 520,224" fill="none" stroke="black"/>
                  <path d="M 8,240 L 96,240" fill="none" stroke="black"/>
                  <path d="M 40,256 L 64,256" fill="none" stroke="black"/>
                  <path d="M 104,272 L 168,272" fill="none" stroke="black"/>
                  <path d="M 240,272 L 336,272" fill="none" stroke="black"/>
                  <path d="M 104,288 L 168,288" fill="none" stroke="black"/>
                  <path d="M 240,288 L 336,288" fill="none" stroke="black"/>
                  <path d="M 40,304 L 64,304" fill="none" stroke="black"/>
                  <path d="M 8,336 L 96,336" fill="none" stroke="black"/>
                  <path d="M 40,352 L 64,352" fill="none" stroke="black"/>
                  <path d="M 104,368 L 168,368" fill="none" stroke="black"/>
                  <path d="M 240,368 L 336,368" fill="none" stroke="black"/>
                  <path d="M 104,384 L 168,384" fill="none" stroke="black"/>
                  <path d="M 240,384 L 336,384" fill="none" stroke="black"/>
                  <path d="M 40,400 L 64,400" fill="none" stroke="black"/>
                  <path d="M 344,416 L 536,416" fill="none" stroke="black"/>
                  <path d="M 40,256 C 31.16936,256 24,263.16936 24,272" fill="none" stroke="black"/>
                  <path d="M 64,256 C 72.83064,256 80,263.16936 80,272" fill="none" stroke="black"/>
                  <path d="M 40,304 C 31.16936,304 24,296.83064 24,288" fill="none" stroke="black"/>
                  <path d="M 64,304 C 72.83064,304 80,296.83064 80,288" fill="none" stroke="black"/>
                  <path d="M 40,352 C 31.16936,352 24,359.16936 24,368" fill="none" stroke="black"/>
                  <path d="M 64,352 C 72.83064,352 80,359.16936 80,368" fill="none" stroke="black"/>
                  <path d="M 40,400 C 31.16936,400 24,392.83064 24,384" fill="none" stroke="black"/>
                  <path d="M 64,400 C 72.83064,400 80,392.83064 80,384" fill="none" stroke="black"/>
                  <polygon class="arrowhead" points="64,232 52,226.4 52,237.6" fill="black" transform="rotate(90,56,232)"/>
                  <g class="text">
                    <text x="48" y="100">status=</text>
                    <text x="196" y="100">vlan-100</text>
                    <text x="404" y="100">Bridge</text>
                    <text x="452" y="100">VLAN</text>
                    <text x="488" y="100">100</text>
                    <text x="44" y="116">DOWN</text>
                    <text x="196" y="116">vlan-200</text>
                    <text x="52" y="148">compute-01</text>
                    <text x="192" y="180">[...]</text>
                    <text x="404" y="196">Bridge</text>
                    <text x="452" y="196">VLAN</text>
                    <text x="488" y="196">200</text>
                    <text x="108" y="260">.1</text>
                    <text x="160" y="260">&lt;</text>
                    <text x="176" y="260">-</text>
                    <text x="200" y="260">BFD</text>
                    <text x="224" y="260">-</text>
                    <text x="240" y="260">&gt;</text>
                    <text x="52" y="276">nf-up1</text>
                    <text x="204" y="276">vlan-100</text>
                    <text x="388" y="276">nf-up1</text>
                    <text x="440" y="276">moved</text>
                    <text x="476" y="276">to</text>
                    <text x="204" y="292">vlan-200</text>
                    <text x="428" y="292">compute-07</text>
                    <text x="52" y="324">compute-07</text>
                    <text x="412" y="340">nf-up7</text>
                    <text x="452" y="340">on</text>
                    <text x="108" y="356">.7</text>
                    <text x="160" y="356">&lt;</text>
                    <text x="176" y="356">-</text>
                    <text x="200" y="356">BFD</text>
                    <text x="224" y="356">-</text>
                    <text x="240" y="356">&gt;</text>
                    <text x="420" y="356">compute-08</text>
                    <text x="52" y="372">nf-up7</text>
                    <text x="204" y="372">vlan-100</text>
                    <text x="408" y="372">created</text>
                    <text x="456" y="372">for</text>
                    <text x="204" y="388">vlan-200</text>
                    <text x="424" y="388">scale-out</text>
                    <text x="52" y="420">compute-08</text>
                  </g>
                </svg>
              </artwork>
              <artwork type="ascii-art"><![CDATA[
                                          .-----------------------.
                                          |                       |
.----------.                              |  .------------------. |
|          |                              |  |                  | |
| status=  |--------vlan-100--------------|  | Bridge VLAN 100  | |
|  DOWN    |--------vlan-200--------------|  |                  | |
|          |                              |  '------------------' |
 compute-01                               |                       |
      |                                   |  .------------------. |
      |              [...]                |  |                  | |
      |                                   |  | Bridge VLAN 200  | |
      |                                   |  |                  | |
      v                                   |  '------------------' |
.----------.                              |                       |
|  .----.  |.1     < - BFD - >            |                       |
| |nf-up1| |---------vlan-100-------------|  nf-up1 moved to      |
| |      | |---------vlan-200-------------|     compute-07        |
|  '----'  |                              |                       |
 compute-07                               |                       |
.----------.                              |     nf-up7 on         |
|  .----.  |.7     < - BFD - >            |    compute-08         |
| |nf-up7| |---------vlan-100-------------|    created for        |
| |      | |---------vlan-200-------------|     scale-out         |
|  '----'  |                              |                       |
 compute-08                               '-----------------------'
]]></artwork>
            </artset>
          </figure>
          <t>Finally, the addition or deletion of compute nodes in the deployment ("compute-11", "compute-12", etc.) involves merely changes on Child ACs and possible routing on the Parent AC. In any case, the Parent AC is a stable identifier, which can be consumed as a reference by end-to-end service models for VPN configuration such as AC Glue <xref target="RFC9836"/>, RFC 9543 Network Slice Service <xref target="I-D.ietf-teas-ietf-network-slice-nbi-yang"/>, etc. This decoupling to a stable identifier provides great benefits in terms of scalability and flexibility since once the reference with the Parent AC is implemented, no API call involving the VPN model is needed for any modification in the cloud.</t>
        </section>
      </section>
      <section anchor="sec-bfd-static">
        <name>BFD and Static Addressing</name>
        <t><xref target="ex-bfd-static"/> shows a topology example of a set of CEs connected to a provider network via dedicated bearers. Each of these CEs maintains two BFD sessions with the provider network.</t>
        <figure anchor="ex-bfd-static">
          <name>Example of Static Addressing with BFD</name>
          <artset>
            <artwork type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="368" width="464" viewBox="0 0 464 368" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px" stroke-linecap="round">
                <path d="M 8,64 L 8,80" fill="none" stroke="black"/>
                <path d="M 8,128 L 8,144" fill="none" stroke="black"/>
                <path d="M 8,224 L 8,240" fill="none" stroke="black"/>
                <path d="M 8,336 L 8,352" fill="none" stroke="black"/>
                <path d="M 80,48 L 80,64" fill="none" stroke="black"/>
                <path d="M 80,112 L 80,128" fill="none" stroke="black"/>
                <path d="M 80,208 L 80,224" fill="none" stroke="black"/>
                <path d="M 80,320 L 80,336" fill="none" stroke="black"/>
                <path d="M 184,32 L 184,272" fill="none" stroke="black"/>
                <path d="M 208,96 L 208,128" fill="none" stroke="black"/>
                <path d="M 208,160 L 208,176" fill="none" stroke="black"/>
                <path d="M 240,64 L 240,96" fill="none" stroke="black"/>
                <path d="M 248,176 L 248,224" fill="none" stroke="black"/>
                <path d="M 264,184 L 264,208" fill="none" stroke="black"/>
                <path d="M 280,96 L 280,128" fill="none" stroke="black"/>
                <path d="M 280,160 L 280,176" fill="none" stroke="black"/>
                <path d="M 312,96 L 312,144" fill="none" stroke="black"/>
                <path d="M 312,176 L 312,224" fill="none" stroke="black"/>
                <path d="M 400,96 L 400,144" fill="none" stroke="black"/>
                <path d="M 400,176 L 400,224" fill="none" stroke="black"/>
                <path d="M 416,32 L 416,272" fill="none" stroke="black"/>
                <path d="M 184,32 L 416,32" fill="none" stroke="black"/>
                <path d="M 24,48 L 80,48" fill="none" stroke="black"/>
                <path d="M 88,64 L 176,64" fill="none" stroke="black"/>
                <path d="M 192,64 L 240,64" fill="none" stroke="black"/>
                <path d="M 8,80 L 64,80" fill="none" stroke="black"/>
                <path d="M 208,96 L 280,96" fill="none" stroke="black"/>
                <path d="M 312,96 L 400,96" fill="none" stroke="black"/>
                <path d="M 24,112 L 80,112" fill="none" stroke="black"/>
                <path d="M 288,112 L 304,112" fill="none" stroke="black"/>
                <path d="M 88,128 L 176,128" fill="none" stroke="black"/>
                <path d="M 8,144 L 64,144" fill="none" stroke="black"/>
                <path d="M 312,144 L 400,144" fill="none" stroke="black"/>
                <path d="M 208,176 L 280,176" fill="none" stroke="black"/>
                <path d="M 312,176 L 400,176" fill="none" stroke="black"/>
                <path d="M 24,208 L 80,208" fill="none" stroke="black"/>
                <path d="M 264,208 L 312,208" fill="none" stroke="black"/>
                <path d="M 88,224 L 176,224" fill="none" stroke="black"/>
                <path d="M 192,224 L 248,224" fill="none" stroke="black"/>
                <path d="M 312,224 L 400,224" fill="none" stroke="black"/>
                <path d="M 8,240 L 64,240" fill="none" stroke="black"/>
                <path d="M 184,272 L 416,272" fill="none" stroke="black"/>
                <path d="M 24,320 L 80,320" fill="none" stroke="black"/>
                <path d="M 120,336 L 144,336" fill="none" stroke="black"/>
                <path d="M 176,336 L 200,336" fill="none" stroke="black"/>
                <path d="M 8,352 L 64,352" fill="none" stroke="black"/>
                <path d="M 120,352 L 144,352" fill="none" stroke="black"/>
                <path d="M 176,352 L 200,352" fill="none" stroke="black"/>
                <path d="M 24,48 C 15.16936,48 8,55.16936 8,64" fill="none" stroke="black"/>
                <path d="M 64,80 C 72.83064,80 80,72.83064 80,64" fill="none" stroke="black"/>
                <path d="M 24,112 C 15.16936,112 8,119.16936 8,128" fill="none" stroke="black"/>
                <path d="M 64,144 C 72.83064,144 80,136.83064 80,128" fill="none" stroke="black"/>
                <path d="M 24,208 C 15.16936,208 8,215.16936 8,224" fill="none" stroke="black"/>
                <path d="M 64,240 C 72.83064,240 80,232.83064 80,224" fill="none" stroke="black"/>
                <path d="M 24,320 C 15.16936,320 8,327.16936 8,336" fill="none" stroke="black"/>
                <path d="M 64,352 C 72.83064,352 80,344.83064 80,336" fill="none" stroke="black"/>
                <polygon class="arrowhead" points="208,352 196,346.4 196,357.6" fill="black" transform="rotate(0,200,352)"/>
                <polygon class="arrowhead" points="208,336 196,330.4 196,341.6" fill="black" transform="rotate(0,200,336)"/>
                <polygon class="arrowhead" points="128,352 116,346.4 116,357.6" fill="black" transform="rotate(180,120,352)"/>
                <polygon class="arrowhead" points="128,336 116,330.4 116,341.6" fill="black" transform="rotate(180,120,336)"/>
                <g class="text">
                  <text x="100" y="52">.1</text>
                  <text x="48" y="68">CE1</text>
                  <text x="356" y="84">.252</text>
                  <text x="100" y="116">.2</text>
                  <text x="248" y="116">LAN</text>
                  <text x="352" y="116">GW1</text>
                  <text x="48" y="132">CE2</text>
                  <text x="196" y="132">--</text>
                  <text x="352" y="132">[BFD]</text>
                  <text x="244" y="148">192.0.2/24</text>
                  <text x="364" y="164">.253</text>
                  <text x="16" y="180">...</text>
                  <text x="352" y="196">GW2</text>
                  <text x="104" y="212">.10</text>
                  <text x="352" y="212">[BFD]</text>
                  <text x="52" y="228">CE10</text>
                  <text x="260" y="260">Provider</text>
                  <text x="328" y="260">Network</text>
                  <text x="20" y="308">Each</text>
                  <text x="52" y="308">CE</text>
                  <text x="80" y="308">has</text>
                  <text x="104" y="308">a</text>
                  <text x="128" y="308">BFD</text>
                  <text x="176" y="308">session</text>
                  <text x="220" y="308">to</text>
                  <text x="252" y="308">each</text>
                  <text x="304" y="308">gateway</text>
                  <text x="352" y="308">for</text>
                  <text x="416" y="308">redundancy:</text>
                  <text x="48" y="340">CEx</text>
                  <text x="100" y="340">.x</text>
                  <text x="160" y="340">BFD</text>
                  <text x="228" y="340">.252</text>
                  <text x="160" y="356">BFD</text>
                  <text x="228" y="356">.253</text>
                </g>
              </svg>
            </artwork>
            <artwork type="ascii-art"><![CDATA[
                      +----------------------------+
 .-------. .1         |                            |
|   CE1  |------------|------+                     |
'-------'             |      |            .252     |
                      |  +---+----+   +----------+ |
 .-------. .2         |  |   LAN  |---|   GW1    | |
|   CE2  |------------|--|        |   |  [BFD]   | |
'-------'             |  192.0.2/24   +----------+ |
                      |  |        |        .253    |
...                   |  +----+---+   +----------+ |
                      |       | |     |   GW2    | |
 .-------. .10        |       | +-----+  [BFD]   | |
|   CE10 |------------|-------+       +----------+ |
'-------'             |                            |
                      |     Provider Network       |
                      +----------------------------+

Each CE has a BFD session to each gateway for redundancy:
 .-------.
|   CEx  | .x <---BFD---> .252
'-------'     <---BFD---> .253
]]></artwork>
          </artset>
        </figure>
        <t><xref target="ex-json-bfd-static"/> shows the message body of the ACaaS configuration to enable the target architecture shown in <xref target="ex-bfd-static"/>. This example uses an AC group profile to factorize common data between all involved ACs. It also uses Child ACs that inherit the properties of two Parent ACs, each terminating in a separate gateway in the provider network.</t>
        <figure anchor="ex-json-bfd-static">
          <name>Message Body for the Configuration of CEs with Static Addressing and BFD Protection</name>
          <sourcecode type="json"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "ietf-ac-svc:specific-provisioning-profiles": {
    "valid-provider-identifiers": {
      "failure-detection-profile-identifier": [
        {
          "id": "single-hop-bfd"
        }
      ]
    }
  },
  "ietf-ac-svc:attachment-circuits": {
    "ac-group-profile": [
      {
        "name": "profile-vlan-100",
        "l2-connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "cvlan-id": 100
            }
          }
        },
        "ip-connection": {
          "ipv4": {
            "virtual-address": "192.0.2.254",
            "prefix-length": 24,
            "address": [
              {
                "address-id": "ce1",
                "customer-address": "192.0.2.1",
                "failure-detection-profile": "single-hop-bfd"
              },
              {
                "address-id": "ce2",
                "customer-address": "192.0.2.2",
                "failure-detection-profile": "single-hop-bfd"
              },
              {
                "_comment": "ce3 to ce9 are not displayed"
              },
              {
                "address-id": "ce10",
                "customer-address": "192.0.2.10",
                "failure-detection-profile": "single-hop-bfd"
              }
            ]
          }
        }
      }
    ],
    "ac": [
      {
        "name": "parent-vlan-100-gw1",
        "description": "This parent represents a bridge with Layer \
                       3 interface (IRB) to connect NFs in VLAN 100",
        "group-profile-ref": [
          "profile-vlan-100"
        ],
        "ip-connection": {
          "ipv4": {
            "local-address": "192.0.2.252",
            "prefix-length": 24
          }
        }
      },
      {
        "name": "parent-vlan-100-gw2",
        "description": "This parent represents a bridge with Layer \
                       3 interface (IRB) to connect NFs in VLAN 100",
        "group-profile-ref": [
          "profile-vlan-100"
        ],
        "ip-connection": {
          "ipv4": {
            "local-address": "192.0.2.253",
            "prefix-length": 24
          }
        }
      },
      {
        "name": "ac-ce-01-vlan-100",
        "description": "attachment to CE1 in VLAN 100",
        "parent-ref": [
          "parent-vlan-100-gw1",
          "parent-vlan-100-gw2"
        ],
        "l2-connection": {
          "bearer-reference": "bearer--1"
        }
      },
      {
        "name": "ac-ce-02-vlan-100",
        "description": "attachment to CE2 in VLAN 100",
        "parent-ref": [
          "parent-vlan-100-gw1",
          "parent-vlan-100-gw2"
        ],
        "l2-connection": {
          "bearer-reference": "bearer--2"
        }
      },
      {
        "_comment": "ac-ce-03-vlan-100 to ac-ce-09-vlan-100 are \
                                                              hidden"
      },
      {
        "name": "ac-ce-10-vlan-100",
        "description": "attachment to CE10 in VLAN 100",
        "parent-ref": [
          "parent-vlan-100-gw1",
          "parent-vlan-100-gw2"
        ],
        "l2-connection": {
          "bearer-reference": "bearer--10"
        }
      }
    ]
  }
}
]]></sourcecode>
        </figure>
      </section>
    </section>
    <section anchor="AC-svc-Tree">
      <name>Full Tree</name>
      <sourcecode type="yangtree"><![CDATA[
module: ietf-ac-svc
  +--rw specific-provisioning-profiles
  |  +--rw valid-provider-identifiers
  |     +--rw encryption-profile-identifier* [id]
  |     |  +--rw id    string
  |     +--rw qos-profile-identifier* [id]
  |     |  +--rw id    string
  |     +--rw failure-detection-profile-identifier* [id]
  |     |  +--rw id    string
  |     +--rw forwarding-profile-identifier* [id]
  |     |  +--rw id    string
  |     +--rw routing-profile-identifier* [id]
  |        +--rw id    string
  +--rw service-provisioning-profiles
  |  +--rw service-profile-identifier* [id]
  |     +--rw id    string
  +--rw attachment-circuits
     +--rw ac-group-profile* [name]
     |  +--rw name                 string
     |  +--rw service-profile*     service-profile-reference
     |  +--rw l2-connection {ac-common:layer2-ac}?
     |  |  +--rw encapsulation
     |  |  |  +--rw type?              identityref
     |  |  |  +--rw dot1q
     |  |  |  |  +--rw tag-type?   identityref
     |  |  |  |  +--rw cvlan-id?   uint16
     |  |  |  +--rw priority-tagged
     |  |  |  |  +--rw tag-type?   identityref
     |  |  |  +--rw qinq
     |  |  |     +--rw tag-type?   identityref
     |  |  |     +--rw svlan-id?   uint16
     |  |  |     +--rw cvlan-id?   uint16
     |  |  +--rw (l2-service)?
     |  |  |  +--:(l2-tunnel-service)
     |  |  |  |  +--rw l2-tunnel-service
     |  |  |  |     +--rw type?         identityref
     |  |  |  |     +--rw pseudowire
     |  |  |  |     |  +--rw vcid?      uint32
     |  |  |  |     |  +--rw far-end?   union
     |  |  |  |     +--rw vpls
     |  |  |  |     |  +--rw vcid?      uint32
     |  |  |  |     |  +--rw far-end*   union
     |  |  |  |     +--rw vxlan
     |  |  |  |        +--rw vni-id?            uint32
     |  |  |  |        +--rw peer-mode?         identityref
     |  |  |  |        +--rw peer-ip-address*   inet:ip-address
     |  |  |  +--:(l2vpn)
     |  |  |     +--rw l2vpn-id?            vpn-common:vpn-id
     |  |  +--rw bearer-reference?          string
     |  |          {ac-common:server-assigned-reference}?
     |  +--rw ip-connection {ac-common:layer3-ac}?
     |  |  +--rw ipv4 {vpn-common:ipv4}?
     |  |  |  +--rw local-address?
     |  |  |  |       inet:ipv4-address
     |  |  |  +--rw virtual-address?
     |  |  |  |       inet:ipv4-address
     |  |  |  +--rw prefix-length?                           uint8
     |  |  |  +--rw address-allocation-type?
     |  |  |  |       identityref
     |  |  |  +--rw (allocation-type)?
     |  |  |     +--:(dynamic)
     |  |  |     |  +--rw (address-assign)?
     |  |  |     |  |  +--:(number)
     |  |  |     |  |  |  +--rw number-of-dynamic-address?   uint16
     |  |  |     |  |  +--:(explicit)
     |  |  |     |  |     +--rw customer-addresses
     |  |  |     |  |        +--rw address-pool* [pool-id]
     |  |  |     |  |           +--rw pool-id          string
     |  |  |     |  |           +--rw start-address
     |  |  |     |  |           |       inet:ipv4-address
     |  |  |     |  |           +--rw end-address?
     |  |  |     |  |                   inet:ipv4-address
     |  |  |     |  +--rw (provider-dhcp)?
     |  |  |     |  |  +--:(dhcp-service-type)
     |  |  |     |  |     +--rw dhcp-service-type?
     |  |  |     |  |             enumeration
     |  |  |     |  +--rw (dhcp-relay)?
     |  |  |     |     +--:(customer-dhcp-servers)
     |  |  |     |        +--rw customer-dhcp-servers
     |  |  |     |           +--rw server-ip-address*
     |  |  |     |                   inet:ipv4-address
     |  |  |     +--:(static-addresses)
     |  |  |        +--rw address* [address-id]
     |  |  |           +--rw address-id                   string
     |  |  |           +--rw customer-address?
     |  |  |           |       inet:ipv4-address
     |  |  |           +--rw failure-detection-profile?
     |  |  |                   failure-detection-profile-reference
     |  |  |                   {vpn-common:bfd}?
     |  |  +--rw ipv6 {vpn-common:ipv6}?
     |  |  |  +--rw local-address?
     |  |  |  |       inet:ipv6-address
     |  |  |  +--rw virtual-address?
     |  |  |  |       inet:ipv6-address
     |  |  |  +--rw prefix-length?                           uint8
     |  |  |  +--rw address-allocation-type?
     |  |  |  |       identityref
     |  |  |  +--rw (allocation-type)?
     |  |  |     +--:(dynamic)
     |  |  |     |  +--rw (address-assign)?
     |  |  |     |  |  +--:(number)
     |  |  |     |  |  |  +--rw number-of-dynamic-address?   uint16
     |  |  |     |  |  +--:(explicit)
     |  |  |     |  |     +--rw customer-addresses
     |  |  |     |  |        +--rw address-pool* [pool-id]
     |  |  |     |  |           +--rw pool-id          string
     |  |  |     |  |           +--rw start-address
     |  |  |     |  |           |       inet:ipv6-address
     |  |  |     |  |           +--rw end-address?
     |  |  |     |  |                   inet:ipv6-address
     |  |  |     |  +--rw (provider-dhcp)?
     |  |  |     |  |  +--:(dhcp-service-type)
     |  |  |     |  |     +--rw dhcp-service-type?
     |  |  |     |  |             enumeration
     |  |  |     |  +--rw (dhcp-relay)?
     |  |  |     |     +--:(customer-dhcp-servers)
     |  |  |     |        +--rw customer-dhcp-servers
     |  |  |     |           +--rw server-ip-address*
     |  |  |     |                   inet:ipv6-address
     |  |  |     +--:(static-addresses)
     |  |  |        +--rw address* [address-id]
     |  |  |           +--rw address-id                   string
     |  |  |           +--rw customer-address?
     |  |  |           |       inet:ipv6-address
     |  |  |           +--rw failure-detection-profile?
     |  |  |                   failure-detection-profile-reference
     |  |  |                   {vpn-common:bfd}?
     |  |  +--rw (l3-service)?
     |  |     +--:(l3-tunnel-service)
     |  |        +--rw l3-tunnel-service
     |  |           +--rw type?   identityref
     |  +--rw routing-protocols
     |  |  +--rw routing-protocol* [id]
     |  |     +--rw id                  string
     |  |     +--rw type?               identityref
     |  |     +--rw routing-profiles* [id]
     |  |     |  +--rw id      routing-profile-reference
     |  |     |  +--rw type?   identityref
     |  |     +--rw static
     |  |     |  +--rw cascaded-lan-prefixes
     |  |     |     +--rw ipv4-lan-prefix* [lan next-hop]
     |  |     |     |       {vpn-common:ipv4}?
     |  |     |     |  +--rw lan
     |  |     |     |  |       inet:ipv4-prefix
     |  |     |     |  +--rw lan-tag?                     string
     |  |     |     |  +--rw next-hop                     union
     |  |     |     |  +--rw metric?                      uint32
     |  |     |     |  +--rw failure-detection-profile?
     |  |     |     |  |       failure-detection-profile-reference
     |  |     |     |  |       {vpn-common:bfd}?
     |  |     |     |  +--rw status
     |  |     |     |     +--rw admin-status
     |  |     |     |     |  +--rw status?        identityref
     |  |     |     |     |  +--ro last-change?   yang:date-and-time
     |  |     |     |     +--ro oper-status
     |  |     |     |        +--ro status?        identityref
     |  |     |     |        +--ro last-change?   yang:date-and-time
     |  |     |     +--rw ipv6-lan-prefix* [lan next-hop]
     |  |     |             {vpn-common:ipv6}?
     |  |     |        +--rw lan
     |  |     |        |       inet:ipv6-prefix
     |  |     |        +--rw lan-tag?                     string
     |  |     |        +--rw next-hop                     union
     |  |     |        +--rw metric?                      uint32
     |  |     |        +--rw failure-detection-profile?
     |  |     |        |       failure-detection-profile-reference
     |  |     |        |       {vpn-common:bfd}?
     |  |     |        +--rw status
     |  |     |           +--rw admin-status
     |  |     |           |  +--rw status?        identityref
     |  |     |           |  +--ro last-change?   yang:date-and-time
     |  |     |           +--ro oper-status
     |  |     |              +--ro status?        identityref
     |  |     |              +--ro last-change?   yang:date-and-time
     |  |     +--rw bgp {vpn-common:rtg-bgp}?
     |  |     |  +--rw peer-groups
     |  |     |  |  +--rw peer-group* [name]
     |  |     |  |     +--rw name              string
     |  |     |  |     +--rw local-as?         inet:as-number
     |  |     |  |     +--rw peer-as?          inet:as-number
     |  |     |  |     +--rw address-family?   identityref
     |  |     |  |     +--rw role?             identityref
     |  |     |  |     +--rw local-address?    inet:ip-address
     |  |     |  |     +--rw bgp-max-prefix
     |  |     |  |     |  +--rw max-prefix?   uint32
     |  |     |  |     +--rw authentication
     |  |     |  |        +--rw enabled?           boolean
     |  |     |  |        +--rw keying-material
     |  |     |  |           +--rw (option)?
     |  |     |  |              +--:(ao)
     |  |     |  |              |  +--rw enable-ao?          boolean
     |  |     |  |              |  +--rw ao-keychain?
     |  |     |  |              |          key-chain:key-chain-ref
     |  |     |  |              +--:(md5)
     |  |     |  |              |  +--rw md5-keychain?
     |  |     |  |              |          key-chain:key-chain-ref
     |  |     |  |              +--:(explicit)
     |  |     |  |                 +--rw key-id?             uint32
     |  |     |  |                 +--rw key?                string
     |  |     |  |                 +--rw crypto-algorithm?
     |  |     |  |                         identityref
     |  |     |  +--rw neighbor* [id]
     |  |     |     +--rw id                           string
     |  |     |     +--ro server-reference?            string
     |  |     |     |       {ac-common:server-assigned-reference}?
     |  |     |     +--rw remote-address?          inet:ip-address
     |  |     |     +--rw local-address?           inet:ip-address
     |  |     |     +--rw local-as?                inet:as-number
     |  |     |     +--rw peer-as?                 inet:as-number
     |  |     |     +--rw address-family?          identityref
     |  |     |     +--rw role?                    identityref
     |  |     |     +--rw bgp-max-prefix
     |  |     |     |  +--rw max-prefix?   uint32
     |  |     |     +--rw authentication
     |  |     |     |  +--rw enabled?           boolean
     |  |     |     |  +--rw keying-material
     |  |     |     |     +--rw (option)?
     |  |     |     |        +--:(ao)
     |  |     |     |        |  +--rw enable-ao?          boolean
     |  |     |     |        |  +--rw ao-keychain?
     |  |     |     |        |          key-chain:key-chain-ref
     |  |     |     |        +--:(md5)
     |  |     |     |        |  +--rw md5-keychain?
     |  |     |     |        |          key-chain:key-chain-ref
     |  |     |     |        +--:(explicit)
     |  |     |     |           +--rw key-id?             uint32
     |  |     |     |           +--rw key?                string
     |  |     |     |           +--rw crypto-algorithm?   identityref
     |  |     |     +--rw requested-start?
     |  |     |     |       yang:date-and-time
     |  |     |     +--rw requested-stop?
     |  |     |     |       yang:date-and-time
     |  |     |     +--ro actual-start?
     |  |     |     |       yang:date-and-time
     |  |     |     +--ro actual-stop?
     |  |     |     |       yang:date-and-time
     |  |     |     +--rw status
     |  |     |     |  +--rw admin-status
     |  |     |     |  |  +--rw status?        identityref
     |  |     |     |  |  +--ro last-change?   yang:date-and-time
     |  |     |     |  +--ro oper-status
     |  |     |     |     +--ro status?        identityref
     |  |     |     |     +--ro last-change?   yang:date-and-time
     |  |     |     +--rw peer-group?
     |  |     |     |       -> ../../peer-groups/peer-group/name
     |  |     |     +--rw failure-detection-profile?
     |  |     |             failure-detection-profile-reference
     |  |     |             {vpn-common:bfd}?
     |  |     +--rw ospf {vpn-common:rtg-ospf}?
     |  |     |  +--rw address-family?   identityref
     |  |     |  +--rw area-id           yang:dotted-quad
     |  |     |  +--rw metric?           uint16
     |  |     |  +--rw authentication
     |  |     |  |  +--rw enabled?           boolean
     |  |     |  |  +--rw keying-material
     |  |     |  |     +--rw (option)?
     |  |     |  |        +--:(auth-key-chain)
     |  |     |  |        |  +--rw key-chain?
     |  |     |  |        |          key-chain:key-chain-ref
     |  |     |  |        +--:(auth-key-explicit)
     |  |     |  |           +--rw key-id?             uint32
     |  |     |  |           +--rw key?                string
     |  |     |  |           +--rw crypto-algorithm?   identityref
     |  |     |  +--rw status
     |  |     |     +--rw admin-status
     |  |     |     |  +--rw status?        identityref
     |  |     |     |  +--ro last-change?   yang:date-and-time
     |  |     |     +--ro oper-status
     |  |     |        +--ro status?        identityref
     |  |     |        +--ro last-change?   yang:date-and-time
     |  |     +--rw isis {vpn-common:rtg-isis}?
     |  |     |  +--rw address-family?   identityref
     |  |     |  +--rw area-address      area-address
     |  |     |  +--rw authentication
     |  |     |  |  +--rw enabled?           boolean
     |  |     |  |  +--rw keying-material
     |  |     |  |     +--rw (option)?
     |  |     |  |        +--:(auth-key-chain)
     |  |     |  |        |  +--rw key-chain?
     |  |     |  |        |          key-chain:key-chain-ref
     |  |     |  |        +--:(auth-key-explicit)
     |  |     |  |           +--rw key-id?             uint32
     |  |     |  |           +--rw key?                string
     |  |     |  |           +--rw crypto-algorithm?   identityref
     |  |     |  +--rw status
     |  |     |     +--rw admin-status
     |  |     |     |  +--rw status?        identityref
     |  |     |     |  +--ro last-change?   yang:date-and-time
     |  |     |     +--ro oper-status
     |  |     |        +--ro status?        identityref
     |  |     |        +--ro last-change?   yang:date-and-time
     |  |     +--rw rip {vpn-common:rtg-rip}?
     |  |     |  +--rw address-family?   identityref
     |  |     |  +--rw authentication
     |  |     |  |  +--rw enabled?           boolean
     |  |     |  |  +--rw keying-material
     |  |     |  |     +--rw (option)?
     |  |     |  |        +--:(auth-key-chain)
     |  |     |  |        |  +--rw key-chain?
     |  |     |  |        |          key-chain:key-chain-ref
     |  |     |  |        +--:(auth-key-explicit)
     |  |     |  |           +--rw key?                string
     |  |     |  |           +--rw crypto-algorithm?   identityref
     |  |     |  +--rw status
     |  |     |     +--rw admin-status
     |  |     |     |  +--rw status?        identityref
     |  |     |     |  +--ro last-change?   yang:date-and-time
     |  |     |     +--ro oper-status
     |  |     |        +--ro status?        identityref
     |  |     |        +--ro last-change?   yang:date-and-time
     |  |     +--rw vrrp {vpn-common:rtg-vrrp}?
     |  |        +--rw address-family?   identityref
     |  |        +--rw status
     |  |           +--rw admin-status
     |  |           |  +--rw status?        identityref
     |  |           |  +--ro last-change?   yang:date-and-time
     |  |           +--ro oper-status
     |  |              +--ro status?        identityref
     |  |              +--ro last-change?   yang:date-and-time
     |  +--rw oam
     |  |  +--rw bfd {vpn-common:bfd}?
     |  |     +--rw session* [id]
     |  |        +--rw id                string
     |  |        +--rw local-address?    inet:ip-address
     |  |        +--rw remote-address?   inet:ip-address
     |  |        +--rw profile?
     |  |        |       failure-detection-profile-reference
     |  |        +--rw holdtime?         uint32
     |  |        +--rw status
     |  |           +--rw admin-status
     |  |           |  +--rw status?        identityref
     |  |           |  +--ro last-change?   yang:date-and-time
     |  |           +--ro oper-status
     |  |              +--ro status?        identityref
     |  |              +--ro last-change?   yang:date-and-time
     |  +--rw security
     |  |  +--rw encryption {vpn-common:encryption}?
     |  |  |  +--rw enabled?   boolean
     |  |  |  +--rw layer?     enumeration
     |  |  +--rw encryption-profile
     |  |     +--rw (profile)?
     |  |        +--:(provider-profile)
     |  |        |  +--rw provider-profile?
     |  |        |          encryption-profile-reference
     |  |        +--:(customer-profile)
     |  |           +--rw customer-key-chain?
     |  |                   key-chain:key-chain-ref
     |  +--rw service
     |     +--rw mtu?                      uint32
     |     +--rw svc-pe-to-ce-bandwidth {vpn-common:inbound-bw}?
     |     |  +--rw bandwidth* [bw-type]
     |     |     +--rw bw-type      identityref
     |     |     +--rw (type)?
     |     |        +--:(per-cos)
     |     |        |  +--rw cos* [cos-id]
     |     |        |     +--rw cos-id    uint8
     |     |        |     +--rw cir?      uint64
     |     |        |     +--rw cbs?      uint64
     |     |        |     +--rw eir?      uint64
     |     |        |     +--rw ebs?      uint64
     |     |        |     +--rw pir?      uint64
     |     |        |     +--rw pbs?      uint64
     |     |        +--:(other)
     |     |           +--rw cir?   uint64
     |     |           +--rw cbs?   uint64
     |     |           +--rw eir?   uint64
     |     |           +--rw ebs?   uint64
     |     |           +--rw pir?   uint64
     |     |           +--rw pbs?   uint64
     |     +--rw svc-ce-to-pe-bandwidth {vpn-common:outbound-bw}?
     |     |  +--rw bandwidth* [bw-type]
     |     |     +--rw bw-type      identityref
     |     |     +--rw (type)?
     |     |        +--:(per-cos)
     |     |        |  +--rw cos* [cos-id]
     |     |        |     +--rw cos-id    uint8
     |     |        |     +--rw cir?      uint64
     |     |        |     +--rw cbs?      uint64
     |     |        |     +--rw eir?      uint64
     |     |        |     +--rw ebs?      uint64
     |     |        |     +--rw pir?      uint64
     |     |        |     +--rw pbs?      uint64
     |     |        +--:(other)
     |     |           +--rw cir?   uint64
     |     |           +--rw cbs?   uint64
     |     |           +--rw eir?   uint64
     |     |           +--rw ebs?   uint64
     |     |           +--rw pir?   uint64
     |     |           +--rw pbs?   uint64
     |     +--rw qos {vpn-common:qos}?
     |     |  +--rw qos-profiles
     |     |     +--rw qos-profile* [profile]
     |     |        +--rw profile      qos-profile-reference
     |     |        +--rw direction?   identityref
     |     +--rw access-control-list
     |        +--rw acl-profiles
     |           +--rw acl-profile* [profile]
     |              +--rw profile    forwarding-profile-reference
     +--rw placement-constraints
     |  +--rw constraint* [constraint-type]
     |     +--rw constraint-type    identityref
     |     +--rw target
     |        +--rw (target-flavor)?
     |           +--:(id)
     |           |  +--rw group* [group-id]
     |           |     +--rw group-id    string
     |           +--:(all-accesses)
     |           |  +--rw all-other-accesses?   empty
     |           +--:(all-groups)
     |              +--rw all-other-groups?     empty
     +--rw customer-name?           string
     +--rw requested-start?         yang:date-and-time
     +--rw requested-stop?          yang:date-and-time
     +--ro actual-start?            yang:date-and-time
     +--ro actual-stop?             yang:date-and-time
     +--rw ac* [name]
        +--rw customer-name?       string
        +--rw description?         string
        +--rw test-only?           empty
        +--rw requested-start?     yang:date-and-time
        +--rw requested-stop?      yang:date-and-time
        +--ro actual-start?        yang:date-and-time
        +--ro actual-stop?         yang:date-and-time
        +--rw role?                identityref
        +--rw peer-sap-id*         string
        +--rw group-profile-ref*   ac-group-reference
        +--rw parent-ref*          
        |         ac-svc:attachment-circuit-reference
        +--ro child-ref*           
        |         ac-svc:attachment-circuit-reference
        +--rw group* [group-id]
        |  +--rw group-id      string
        |  +--rw precedence?   identityref
        +--ro service-ref* [service-type service-id]
        |  +--ro service-type    identityref
        |  +--ro service-id      string
        +--ro server-reference?    string
        |       {ac-common:server-assigned-reference}?
        +--rw name                 string
        +--rw service-profile*     service-profile-reference
        +--rw l2-connection {ac-common:layer2-ac}?
        |  +--rw encapsulation
        |  |  +--rw type?              identityref
        |  |  +--rw dot1q
        |  |  |  +--rw tag-type?   identityref
        |  |  |  +--rw cvlan-id?   uint16
        |  |  +--rw priority-tagged
        |  |  |  +--rw tag-type?   identityref
        |  |  +--rw qinq
        |  |     +--rw tag-type?   identityref
        |  |     +--rw svlan-id?   uint16
        |  |     +--rw cvlan-id?   uint16
        |  +--rw (l2-service)?
        |  |  +--:(l2-tunnel-service)
        |  |  |  +--rw l2-tunnel-service
        |  |  |     +--rw type?         identityref
        |  |  |     +--rw pseudowire
        |  |  |     |  +--rw vcid?      uint32
        |  |  |     |  +--rw far-end?   union
        |  |  |     +--rw vpls
        |  |  |     |  +--rw vcid?      uint32
        |  |  |     |  +--rw far-end*   union
        |  |  |     +--rw vxlan
        |  |  |        +--rw vni-id?            uint32
        |  |  |        +--rw peer-mode?         identityref
        |  |  |        +--rw peer-ip-address*   inet:ip-address
        |  |  +--:(l2vpn)
        |  |     +--rw l2vpn-id?            vpn-common:vpn-id
        |  +--rw bearer-reference?          string
        |          {ac-common:server-assigned-reference}?
        +--rw ip-connection {ac-common:layer3-ac}?
        |  +--rw ipv4 {vpn-common:ipv4}?
        |  |  +--rw local-address?
        |  |  |       inet:ipv4-address
        |  |  +--rw virtual-address?
        |  |  |       inet:ipv4-address
        |  |  +--rw prefix-length?                           uint8
        |  |  +--rw address-allocation-type?
        |  |  |       identityref
        |  |  +--rw (allocation-type)?
        |  |     +--:(dynamic)
        |  |     |  +--rw (address-assign)?
        |  |     |  |  +--:(number)
        |  |     |  |  |  +--rw number-of-dynamic-address?   uint16
        |  |     |  |  +--:(explicit)
        |  |     |  |     +--rw customer-addresses
        |  |     |  |        +--rw address-pool* [pool-id]
        |  |     |  |           +--rw pool-id          string
        |  |     |  |           +--rw start-address
        |  |     |  |           |       inet:ipv4-address
        |  |     |  |           +--rw end-address?
        |  |     |  |                   inet:ipv4-address
        |  |     |  +--rw (provider-dhcp)?
        |  |     |  |  +--:(dhcp-service-type)
        |  |     |  |     +--rw dhcp-service-type?
        |  |     |  |             enumeration
        |  |     |  +--rw (dhcp-relay)?
        |  |     |     +--:(customer-dhcp-servers)
        |  |     |        +--rw customer-dhcp-servers
        |  |     |           +--rw server-ip-address*
        |  |     |                   inet:ipv4-address
        |  |     +--:(static-addresses)
        |  |        +--rw address* [address-id]
        |  |           +--rw address-id                   string
        |  |           +--rw customer-address?
        |  |           |       inet:ipv4-address
        |  |           +--rw failure-detection-profile?
        |  |                   failure-detection-profile-reference
        |  |                   {vpn-common:bfd}?
        |  +--rw ipv6 {vpn-common:ipv6}?
        |  |  +--rw local-address?
        |  |  |       inet:ipv6-address
        |  |  +--rw virtual-address?
        |  |  |       inet:ipv6-address
        |  |  +--rw prefix-length?                           uint8
        |  |  +--rw address-allocation-type?
        |  |  |       identityref
        |  |  +--rw (allocation-type)?
        |  |     +--:(dynamic)
        |  |     |  +--rw (address-assign)?
        |  |     |  |  +--:(number)
        |  |     |  |  |  +--rw number-of-dynamic-address?   uint16
        |  |     |  |  +--:(explicit)
        |  |     |  |     +--rw customer-addresses
        |  |     |  |        +--rw address-pool* [pool-id]
        |  |     |  |           +--rw pool-id          string
        |  |     |  |           +--rw start-address
        |  |     |  |           |       inet:ipv6-address
        |  |     |  |           +--rw end-address?
        |  |     |  |                   inet:ipv6-address
        |  |     |  +--rw (provider-dhcp)?
        |  |     |  |  +--:(dhcp-service-type)
        |  |     |  |     +--rw dhcp-service-type?
        |  |     |  |             enumeration
        |  |     |  +--rw (dhcp-relay)?
        |  |     |     +--:(customer-dhcp-servers)
        |  |     |        +--rw customer-dhcp-servers
        |  |     |           +--rw server-ip-address*
        |  |     |                   inet:ipv6-address
        |  |     +--:(static-addresses)
        |  |        +--rw address* [address-id]
        |  |           +--rw address-id                   string
        |  |           +--rw customer-address?
        |  |           |       inet:ipv6-address
        |  |           +--rw failure-detection-profile?
        |  |                   failure-detection-profile-reference
        |  |                   {vpn-common:bfd}?
        |  +--rw (l3-service)?
        |     +--:(l3-tunnel-service)
        |        +--rw l3-tunnel-service
        |           +--rw type?   identityref
        +--rw routing-protocols
        |  +--rw routing-protocol* [id]
        |     +--rw id                  string
        |     +--rw type?               identityref
        |     +--rw routing-profiles* [id]
        |     |  +--rw id      routing-profile-reference
        |     |  +--rw type?   identityref
        |     +--rw static
        |     |  +--rw cascaded-lan-prefixes
        |     |     +--rw ipv4-lan-prefix* [lan next-hop]
        |     |     |       {vpn-common:ipv4}?
        |     |     |  +--rw lan
        |     |     |  |       inet:ipv4-prefix
        |     |     |  +--rw lan-tag?                     string
        |     |     |  +--rw next-hop                     union
        |     |     |  +--rw metric?                      uint32
        |     |     |  +--rw failure-detection-profile?
        |     |     |  |       failure-detection-profile-reference
        |     |     |  |       {vpn-common:bfd}?
        |     |     |  +--rw status
        |     |     |     +--rw admin-status
        |     |     |     |  +--rw status?        identityref
        |     |     |     |  +--ro last-change?   yang:date-and-time
        |     |     |     +--ro oper-status
        |     |     |        +--ro status?        identityref
        |     |     |        +--ro last-change?   yang:date-and-time
        |     |     +--rw ipv6-lan-prefix* [lan next-hop]
        |     |             {vpn-common:ipv6}?
        |     |        +--rw lan
        |     |        |       inet:ipv6-prefix
        |     |        +--rw lan-tag?                     string
        |     |        +--rw next-hop                     union
        |     |        +--rw metric?                      uint32
        |     |        +--rw failure-detection-profile?
        |     |        |       failure-detection-profile-reference
        |     |        |       {vpn-common:bfd}?
        |     |        +--rw status
        |     |           +--rw admin-status
        |     |           |  +--rw status?        identityref
        |     |           |  +--ro last-change?   yang:date-and-time
        |     |           +--ro oper-status
        |     |              +--ro status?        identityref
        |     |              +--ro last-change?   yang:date-and-time
        |     +--rw bgp {vpn-common:rtg-bgp}?
        |     |  +--rw peer-groups
        |     |  |  +--rw peer-group* [name]
        |     |  |     +--rw name              string
        |     |  |     +--rw local-as?         inet:as-number
        |     |  |     +--rw peer-as?          inet:as-number
        |     |  |     +--rw address-family?   identityref
        |     |  |     +--rw role?             identityref
        |     |  |     +--rw local-address?    inet:ip-address
        |     |  |     +--rw bgp-max-prefix
        |     |  |     |  +--rw max-prefix?   uint32
        |     |  |     +--rw authentication
        |     |  |        +--rw enabled?           boolean
        |     |  |        +--rw keying-material
        |     |  |           +--rw (option)?
        |     |  |              +--:(ao)
        |     |  |              |  +--rw enable-ao?          boolean
        |     |  |              |  +--rw ao-keychain?
        |     |  |              |          key-chain:key-chain-ref
        |     |  |              +--:(md5)
        |     |  |              |  +--rw md5-keychain?
        |     |  |              |          key-chain:key-chain-ref
        |     |  |              +--:(explicit)
        |     |  |                 +--rw key-id?             uint32
        |     |  |                 +--rw key?                string
        |     |  |                 +--rw crypto-algorithm?
        |     |  |                         identityref
        |     |  +--rw neighbor* [id]
        |     |     +--rw id                           string
        |     |     +--ro server-reference?            string
        |     |     |       {ac-common:server-assigned-reference}?
        |     |     +--rw remote-address?          inet:ip-address
        |     |     +--rw local-address?           inet:ip-address
        |     |     +--rw local-as?                inet:as-number
        |     |     +--rw peer-as?                 inet:as-number
        |     |     +--rw address-family?          identityref
        |     |     +--rw role?                    identityref
        |     |     +--rw bgp-max-prefix
        |     |     |  +--rw max-prefix?   uint32
        |     |     +--rw authentication
        |     |     |  +--rw enabled?           boolean
        |     |     |  +--rw keying-material
        |     |     |     +--rw (option)?
        |     |     |        +--:(ao)
        |     |     |        |  +--rw enable-ao?          boolean
        |     |     |        |  +--rw ao-keychain?
        |     |     |        |          key-chain:key-chain-ref
        |     |     |        +--:(md5)
        |     |     |        |  +--rw md5-keychain?
        |     |     |        |          key-chain:key-chain-ref
        |     |     |        +--:(explicit)
        |     |     |           +--rw key-id?             uint32
        |     |     |           +--rw key?                string
        |     |     |           +--rw crypto-algorithm?   identityref
        |     |     +--rw requested-start?
        |     |     |       yang:date-and-time
        |     |     +--rw requested-stop?
        |     |     |       yang:date-and-time
        |     |     +--ro actual-start?
        |     |     |       yang:date-and-time
        |     |     +--ro actual-stop?
        |     |     |       yang:date-and-time
        |     |     +--rw status
        |     |     |  +--rw admin-status
        |     |     |  |  +--rw status?        identityref
        |     |     |  |  +--ro last-change?   yang:date-and-time
        |     |     |  +--ro oper-status
        |     |     |     +--ro status?        identityref
        |     |     |     +--ro last-change?   yang:date-and-time
        |     |     +--rw peer-group?
        |     |     |       -> ../../peer-groups/peer-group/name
        |     |     +--rw failure-detection-profile?
        |     |             failure-detection-profile-reference
        |     |             {vpn-common:bfd}?
        |     +--rw ospf {vpn-common:rtg-ospf}?
        |     |  +--rw address-family?   identityref
        |     |  +--rw area-id           yang:dotted-quad
        |     |  +--rw metric?           uint16
        |     |  +--rw authentication
        |     |  |  +--rw enabled?           boolean
        |     |  |  +--rw keying-material
        |     |  |     +--rw (option)?
        |     |  |        +--:(auth-key-chain)
        |     |  |        |  +--rw key-chain?
        |     |  |        |          key-chain:key-chain-ref
        |     |  |        +--:(auth-key-explicit)
        |     |  |           +--rw key-id?             uint32
        |     |  |           +--rw key?                string
        |     |  |           +--rw crypto-algorithm?   identityref
        |     |  +--rw status
        |     |     +--rw admin-status
        |     |     |  +--rw status?        identityref
        |     |     |  +--ro last-change?   yang:date-and-time
        |     |     +--ro oper-status
        |     |        +--ro status?        identityref
        |     |        +--ro last-change?   yang:date-and-time
        |     +--rw isis {vpn-common:rtg-isis}?
        |     |  +--rw address-family?   identityref
        |     |  +--rw area-address      area-address
        |     |  +--rw authentication
        |     |  |  +--rw enabled?           boolean
        |     |  |  +--rw keying-material
        |     |  |     +--rw (option)?
        |     |  |        +--:(auth-key-chain)
        |     |  |        |  +--rw key-chain?
        |     |  |        |          key-chain:key-chain-ref
        |     |  |        +--:(auth-key-explicit)
        |     |  |           +--rw key-id?             uint32
        |     |  |           +--rw key?                string
        |     |  |           +--rw crypto-algorithm?   identityref
        |     |  +--rw status
        |     |     +--rw admin-status
        |     |     |  +--rw status?        identityref
        |     |     |  +--ro last-change?   yang:date-and-time
        |     |     +--ro oper-status
        |     |        +--ro status?        identityref
        |     |        +--ro last-change?   yang:date-and-time
        |     +--rw rip {vpn-common:rtg-rip}?
        |     |  +--rw address-family?   identityref
        |     |  +--rw authentication
        |     |  |  +--rw enabled?           boolean
        |     |  |  +--rw keying-material
        |     |  |     +--rw (option)?
        |     |  |        +--:(auth-key-chain)
        |     |  |        |  +--rw key-chain?
        |     |  |        |          key-chain:key-chain-ref
        |     |  |        +--:(auth-key-explicit)
        |     |  |           +--rw key?                string
        |     |  |           +--rw crypto-algorithm?   identityref
        |     |  +--rw status
        |     |     +--rw admin-status
        |     |     |  +--rw status?        identityref
        |     |     |  +--ro last-change?   yang:date-and-time
        |     |     +--ro oper-status
        |     |        +--ro status?        identityref
        |     |        +--ro last-change?   yang:date-and-time
        |     +--rw vrrp {vpn-common:rtg-vrrp}?
        |        +--rw address-family?   identityref
        |        +--rw status
        |           +--rw admin-status
        |           |  +--rw status?        identityref
        |           |  +--ro last-change?   yang:date-and-time
        |           +--ro oper-status
        |              +--ro status?        identityref
        |              +--ro last-change?   yang:date-and-time
        +--rw oam
        |  +--rw bfd {vpn-common:bfd}?
        |     +--rw session* [id]
        |        +--rw id                string
        |        +--rw local-address?    inet:ip-address
        |        +--rw remote-address?   inet:ip-address
        |        +--rw profile?
        |        |       failure-detection-profile-reference
        |        +--rw holdtime?         uint32
        |        +--rw status
        |           +--rw admin-status
        |           |  +--rw status?        identityref
        |           |  +--ro last-change?   yang:date-and-time
        |           +--ro oper-status
        |              +--ro status?        identityref
        |              +--ro last-change?   yang:date-and-time
        +--rw security
        |  +--rw encryption {vpn-common:encryption}?
        |  |  +--rw enabled?   boolean
        |  |  +--rw layer?     enumeration
        |  +--rw encryption-profile
        |     +--rw (profile)?
        |        +--:(provider-profile)
        |        |  +--rw provider-profile?
        |        |          encryption-profile-reference
        |        +--:(customer-profile)
        |           +--rw customer-key-chain?
        |                   key-chain:key-chain-ref
        +--rw service
           +--rw mtu?                      uint32
           +--rw svc-pe-to-ce-bandwidth {vpn-common:inbound-bw}?
           |  +--rw bandwidth* [bw-type]
           |     +--rw bw-type      identityref
           |     +--rw (type)?
           |        +--:(per-cos)
           |        |  +--rw cos* [cos-id]
           |        |     +--rw cos-id    uint8
           |        |     +--rw cir?      uint64
           |        |     +--rw cbs?      uint64
           |        |     +--rw eir?      uint64
           |        |     +--rw ebs?      uint64
           |        |     +--rw pir?      uint64
           |        |     +--rw pbs?      uint64
           |        +--:(other)
           |           +--rw cir?   uint64
           |           +--rw cbs?   uint64
           |           +--rw eir?   uint64
           |           +--rw ebs?   uint64
           |           +--rw pir?   uint64
           |           +--rw pbs?   uint64
           +--rw svc-ce-to-pe-bandwidth {vpn-common:outbound-bw}?
           |  +--rw bandwidth* [bw-type]
           |     +--rw bw-type      identityref
           |     +--rw (type)?
           |        +--:(per-cos)
           |        |  +--rw cos* [cos-id]
           |        |     +--rw cos-id    uint8
           |        |     +--rw cir?      uint64
           |        |     +--rw cbs?      uint64
           |        |     +--rw eir?      uint64
           |        |     +--rw ebs?      uint64
           |        |     +--rw pir?      uint64
           |        |     +--rw pbs?      uint64
           |        +--:(other)
           |           +--rw cir?   uint64
           |           +--rw cbs?   uint64
           |           +--rw eir?   uint64
           |           +--rw ebs?   uint64
           |           +--rw pir?   uint64
           |           +--rw pbs?   uint64
           +--rw qos {vpn-common:qos}?
           |  +--rw qos-profiles
           |     +--rw qos-profile* [profile]
           |        +--rw profile      qos-profile-reference
           |        +--rw direction?   identityref
           +--rw access-control-list
              +--rw acl-profiles
                 +--rw acl-profile* [profile]
                    +--rw profile    forwarding-profile-reference
]]></sourcecode>
    </section>
    <section numbered="false" anchor="acknowledgments">
      <name>Acknowledgments</name>
      <t>This document leverages <xref target="RFC9182"/> and <xref
      target="RFC9291"/>. Thanks to <contact fullname="Gyan Mishra"/> for the
      review.</t>
      <t>Thanks to <contact fullname="Ebben Aries"/> for the YANG Doctors
      review and for providing <xref target="Instance-Data"/>.</t>
      <t>Thanks to <contact fullname="Donald Eastlake"/> for the careful
      RTGDIR review, <contact fullname="Tero Kivinen"/> for the SECDIR
      review, <contact fullname="Gyan Mishra"/> for the GENART review, and
      <contact fullname="Adrian Farrel"/> for the OPSDIR review.</t>
      <t>Thanks to <contact fullname="Luis Miguel Contreras Murillo"/> for the careful shepherd review.</t>
      <t>Thanks to <contact fullname="Mahesh Jethanandani"/> for the AD review.</t>
      <t>Thanks to <contact fullname="Éric Vyncke"/>, <contact
      fullname="Gunter Van de Velde"/>, <contact fullname="Erik Kline"/>, and
      <contact fullname="Paul Wouters"/> for the IESG review.</t>
    </section>
    <section anchor="contributors" numbered="false" toc="include">
      <name>Contributors</name>
      <contact initials="V." surname="Lopez" fullname="Victor Lopez">
        <organization>Nokia</organization>
        <address>
          <email>victor.lopez@nokia.com</email>
        </address>
      </contact>
      <contact initials="I." surname="Bykov" fullname="Ivan Bykov">
        <organization>Ribbon Communications</organization>
        <address>
          <email>Ivan.Bykov@rbbn.com</email>
        </address>
      </contact>
      <contact initials="Q." surname="Wu" fullname="Qin Wu">
        <organization>Huawei</organization>
        <address>
          <email>bill.wu@huawei.com</email>
        </address>
      </contact>
      <contact initials="K." surname="Ogaki" fullname="Kenichi Ogaki">
        <organization>KDDI</organization>
        <address>
          <email>ke-oogaki@kddi.com</email>
        </address>
      </contact>
      <contact initials="L. A." surname="Munoz" fullname="Luis Angel Munoz">
        <organization>Vodafone</organization>
        <address>
          <email>luis-angel.munoz@vodafone.com</email>
        </address>
      </contact>
    </section>
  </back>
</rfc>
